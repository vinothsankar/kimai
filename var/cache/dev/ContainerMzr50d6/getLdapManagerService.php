<?php

namespace ContainerMzr50d6;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLdapManagerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Ldap\LdapManager' shared autowired service.
     *
     * @return \App\Ldap\LdapManager
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Ldap'.\DIRECTORY_SEPARATOR.'LdapManager.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Ldap'.\DIRECTORY_SEPARATOR.'LdapDriver.php';

        $a = ($container->privates['App\\Configuration\\LdapConfiguration'] ?? $container->load('getLdapConfigurationService'));

        if (isset($container->privates['App\\Ldap\\LdapManager'])) {
            return $container->privates['App\\Ldap\\LdapManager'];
        }
        $b = ($container->privates['App\\Security\\RoleService'] ?? $container->load('getRoleServiceService'));

        if (isset($container->privates['App\\Ldap\\LdapManager'])) {
            return $container->privates['App\\Ldap\\LdapManager'];
        }

        return $container->privates['App\\Ldap\\LdapManager'] = new \App\Ldap\LdapManager(new \App\Ldap\LdapDriver($a, ($container->privates['monolog.logger'] ?? self::getMonolog_LoggerService($container))), $a, $b);
    }
}
