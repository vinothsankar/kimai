<?php

namespace ContainerMzr50d6;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getTrackingModeServiceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Timesheet\TrackingModeService' shared autowired service.
     *
     * @return \App\Timesheet\TrackingModeService
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Timesheet'.\DIRECTORY_SEPARATOR.'TrackingModeService.php';

        return $container->privates['App\\Timesheet\\TrackingModeService'] = new \App\Timesheet\TrackingModeService(($container->privates['App\\Configuration\\SystemConfiguration'] ?? self::getSystemConfigurationService($container)), new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Timesheet\\TrackingMode\\DefaultMode'] ?? $container->load('getDefaultModeService'));
            yield 1 => ($container->privates['App\\Timesheet\\TrackingMode\\DurationFixedBeginMode'] ?? $container->load('getDurationFixedBeginModeService'));
            yield 2 => ($container->privates['App\\Timesheet\\TrackingMode\\PunchInOutMode'] ?? $container->load('getPunchInOutModeService'));
        }, 3));
    }
}
