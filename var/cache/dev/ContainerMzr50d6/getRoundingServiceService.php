<?php

namespace ContainerMzr50d6;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getRoundingServiceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Timesheet\RoundingService' shared autowired service.
     *
     * @return \App\Timesheet\RoundingService
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Timesheet'.\DIRECTORY_SEPARATOR.'RoundingService.php';

        $a = ($container->privates['App\\Configuration\\SystemConfiguration'] ?? self::getSystemConfigurationService($container));

        if (isset($container->privates['App\\Timesheet\\RoundingService'])) {
            return $container->privates['App\\Timesheet\\RoundingService'];
        }

        return $container->privates['App\\Timesheet\\RoundingService'] = new \App\Timesheet\RoundingService($a, new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Timesheet\\Rounding\\CeilRounding'] ??= new \App\Timesheet\Rounding\CeilRounding());
            yield 1 => ($container->privates['App\\Timesheet\\Rounding\\ClosestRounding'] ??= new \App\Timesheet\Rounding\ClosestRounding());
            yield 2 => ($container->privates['App\\Timesheet\\Rounding\\DefaultRounding'] ??= new \App\Timesheet\Rounding\DefaultRounding());
            yield 3 => ($container->privates['App\\Timesheet\\Rounding\\FloorRounding'] ??= new \App\Timesheet\Rounding\FloorRounding());
        }, 4), $container->parameters['kimai.timesheet.rounding']);
    }
}
