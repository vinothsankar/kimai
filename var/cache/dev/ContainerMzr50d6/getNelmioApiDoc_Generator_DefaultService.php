<?php

namespace ContainerMzr50d6;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getNelmioApiDoc_Generator_DefaultService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'nelmio_api_doc.generator.default' shared service.
     *
     * @return \Nelmio\ApiDocBundle\ApiDocGenerator
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'api-doc-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'ApiDocGenerator.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'zircote'.\DIRECTORY_SEPARATOR.'swagger-php'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Generator.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'api-doc-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'OpenApiGenerator.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'api-doc-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'NullablePropertyProcessor.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'api-doc-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'MapQueryStringProcessor.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'api-doc-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'MapRequestPayloadProcessor.php';

        $a = new \Nelmio\ApiDocBundle\OpenApiGenerator();
        $a->addNelmioProcessor(new \Nelmio\ApiDocBundle\Processor\NullablePropertyProcessor(), NULL);
        $a->addNelmioProcessor(new \Nelmio\ApiDocBundle\Processor\MapQueryStringProcessor(), NULL);
        $a->addNelmioProcessor(new \Nelmio\ApiDocBundle\Processor\MapRequestPayloadProcessor(), NULL);

        $container->services['nelmio_api_doc.generator.default'] = $instance = new \Nelmio\ApiDocBundle\ApiDocGenerator(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['nelmio_api_doc.describers.config'] ?? $container->load('getNelmioApiDoc_Describers_ConfigService'));
            yield 1 => ($container->privates['nelmio_api_doc.describers.config.default'] ??= new \Nelmio\ApiDocBundle\Describer\ExternalDocDescriber([], true));
            yield 2 => ($container->privates['nelmio_api_doc.describers.openapi_php.default'] ?? $container->load('getNelmioApiDoc_Describers_OpenapiPhp_DefaultService'));
            yield 3 => ($container->privates['nelmio_api_doc.describers.route.default'] ?? $container->load('getNelmioApiDoc_Describers_Route_DefaultService'));
            yield 4 => ($container->privates['nelmio_api_doc.describers.default'] ??= new \Nelmio\ApiDocBundle\Describer\DefaultDescriber());
        }, 5), new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['nelmio_api_doc.model_describers.self_describing'] ??= new \Nelmio\ApiDocBundle\ModelDescriber\SelfDescribingModelDescriber());
            yield 1 => ($container->privates['nelmio_api_doc.model_describers.enum'] ??= new \Nelmio\ApiDocBundle\ModelDescriber\EnumModelDescriber());
            yield 2 => ($container->privates['nelmio_api_doc.model_describers.form'] ?? $container->load('getNelmioApiDoc_ModelDescribers_FormService'));
            yield 3 => ($container->privates['nelmio_api_doc.model_describers.jms'] ?? $container->load('getNelmioApiDoc_ModelDescribers_JmsService'));
            yield 4 => ($container->privates['nelmio_api_doc.model_describers.object'] ?? $container->load('getNelmioApiDoc_ModelDescribers_ObjectService'));
            yield 5 => ($container->privates['nelmio_api_doc.model_describers.object_fallback'] ??= new \Nelmio\ApiDocBundle\ModelDescriber\FallbackObjectModelDescriber());
        }, 6), NULL, 'openapi_doc.default', $a);

        $b = new \Monolog\Logger('nelmio_api_doc');
        $b->pushProcessor([($container->privates['App\\Logger\\LogProcessor'] ??= new \App\Logger\LogProcessor()), '__invoke']);
        $b->pushHandler(($container->privates['monolog.handler.console'] ?? self::getMonolog_Handler_ConsoleService($container)));
        $b->pushHandler(($container->privates['monolog.handler.main'] ?? self::getMonolog_Handler_MainService($container)));
        ($container->privates['debug.debug_logger_configurator'] ?? self::getDebug_DebugLoggerConfiguratorService($container))->pushDebugLogger($b);

        $instance->setAlternativeNames(['CustomerEditForm' => ['type' => 'App\\Form\\API\\CustomerApiEditForm', 'groups' => ['Default', 'Entity', 'Customer'], 'options' => NULL, 'serializationContext' => []], 'CustomerEntity' => ['type' => 'App\\Entity\\Customer', 'groups' => ['Default', 'Entity', 'Customer', 'Customer_Entity', 'Not_Expanded'], 'options' => NULL, 'serializationContext' => []], 'Customer' => ['type' => 'App\\Entity\\Customer', 'groups' => ['Default', 'Not_Expanded'], 'options' => NULL, 'serializationContext' => []], 'CustomerRate' => ['type' => 'App\\Entity\\CustomerRate', 'groups' => ['Default', 'Entity', 'Customer_Rate'], 'options' => NULL, 'serializationContext' => []], 'CustomerRateForm' => ['type' => 'App\\Form\\API\\CustomerRateApiForm', 'groups' => ['Default', 'Entity', 'Customer_Rate'], 'options' => NULL, 'serializationContext' => []], 'CustomerCollection' => ['type' => 'App\\Entity\\Customer', 'groups' => ['Default', 'Collection', 'Customer'], 'options' => NULL, 'serializationContext' => []], 'ProjectEditForm' => ['type' => 'App\\Form\\API\\ProjectApiEditForm', 'groups' => ['Default', 'Entity', 'Project'], 'options' => NULL, 'serializationContext' => []], 'ProjectEntity' => ['type' => 'App\\Entity\\Project', 'groups' => ['Default', 'Entity', 'Project', 'Project_Entity', 'Not_Expanded'], 'options' => NULL, 'serializationContext' => []], 'Project' => ['type' => 'App\\Entity\\Project', 'groups' => ['Default', 'Not_Expanded'], 'options' => NULL, 'serializationContext' => []], 'ProjectExpanded' => ['type' => 'App\\Entity\\Project', 'groups' => ['Default', 'Expanded'], 'options' => NULL, 'serializationContext' => []], 'ProjectRate' => ['type' => 'App\\Entity\\ProjectRate', 'groups' => ['Default', 'Entity', 'Project_Rate'], 'options' => NULL, 'serializationContext' => []], 'ProjectRateForm' => ['type' => 'App\\Form\\API\\ProjectRateApiForm', 'groups' => ['Default', 'Entity', 'Project_Rate'], 'options' => NULL, 'serializationContext' => []], 'ProjectCollection' => ['type' => 'App\\Entity\\Project', 'groups' => ['Default', 'Collection', 'Project'], 'options' => NULL, 'serializationContext' => []], 'ActivityEditForm' => ['type' => 'App\\Form\\API\\ActivityApiEditForm', 'groups' => ['Default', 'Entity', 'Activity'], 'options' => NULL, 'serializationContext' => []], 'ActivityEntity' => ['type' => 'App\\Entity\\Activity', 'groups' => ['Default', 'Entity', 'Activity', 'Activity_Entity', 'Not_Expanded'], 'options' => NULL, 'serializationContext' => []], 'Activity' => ['type' => 'App\\Entity\\Activity', 'groups' => ['Default', 'Not_Expanded'], 'options' => NULL, 'serializationContext' => []], 'ActivityExpanded' => ['type' => 'App\\Entity\\Activity', 'groups' => ['Default', 'Expanded'], 'options' => NULL, 'serializationContext' => []], 'ActivityRate' => ['type' => 'App\\Entity\\ActivityRate', 'groups' => ['Default', 'Entity', 'Activity_Rate'], 'options' => NULL, 'serializationContext' => []], 'ActivityRateForm' => ['type' => 'App\\Form\\API\\ActivityRateApiForm', 'groups' => ['Default', 'Entity', 'Activity_Rate'], 'options' => NULL, 'serializationContext' => []], 'ActivityCollection' => ['type' => 'App\\Entity\\Activity', 'groups' => ['Default', 'Collection', 'Activity'], 'options' => NULL, 'serializationContext' => []], 'TagEditForm' => ['type' => 'App\\Form\\API\\TagApiEditForm', 'groups' => ['Default', 'Entity', 'Tag'], 'options' => NULL, 'serializationContext' => []], 'TagEntity' => ['type' => 'App\\Entity\\Tag', 'groups' => ['Default', 'Entity', 'Tag'], 'options' => NULL, 'serializationContext' => []], 'TimesheetEditForm' => ['type' => 'App\\Form\\API\\TimesheetApiEditForm', 'groups' => ['Default', 'Entity', 'Timesheet', 'Not_Expanded'], 'options' => NULL, 'serializationContext' => []], 'TimesheetEntity' => ['type' => 'App\\Entity\\Timesheet', 'groups' => ['Default', 'Entity', 'Timesheet', 'Timesheet_Entity', 'Not_Expanded'], 'options' => NULL, 'serializationContext' => []], 'TimesheetExpanded' => ['type' => 'App\\Entity\\Timesheet', 'groups' => ['Default', 'Entity', 'Timesheet', 'Timesheet_Entity', 'Expanded'], 'options' => NULL, 'serializationContext' => []], 'TimesheetCollection' => ['type' => 'App\\Entity\\Timesheet', 'groups' => ['Default', 'Collection', 'Timesheet', 'Not_Expanded'], 'options' => NULL, 'serializationContext' => []], 'TimesheetCollectionExpanded' => ['type' => 'App\\Entity\\Timesheet', 'groups' => ['Default', 'Collection', 'Timesheet', 'Subresource', 'Expanded'], 'options' => NULL, 'serializationContext' => []], 'UserCreateForm' => ['type' => 'App\\Form\\API\\UserApiCreateForm', 'groups' => ['Default', 'Entity', 'User', 'User_Entity'], 'options' => NULL, 'serializationContext' => []], 'UserEditForm' => ['type' => 'App\\Form\\API\\UserApiEditForm', 'groups' => ['Default', 'Entity', 'User', 'User_Entity'], 'options' => NULL, 'serializationContext' => []], 'User' => ['type' => 'App\\Entity\\User', 'groups' => ['Default'], 'options' => NULL, 'serializationContext' => []], 'UserPreference' => ['type' => 'App\\Entity\\UserPreference', 'groups' => ['Default', 'User_Entity'], 'options' => NULL, 'serializationContext' => []], 'UserEntity' => ['type' => 'App\\Entity\\User', 'groups' => ['Default', 'Entity', 'User', 'User_Entity'], 'options' => NULL, 'serializationContext' => []], 'UserCollection' => ['type' => 'App\\Entity\\User', 'groups' => ['Default', 'Collection', 'User'], 'options' => NULL, 'serializationContext' => []], 'TeamEditForm' => ['type' => 'App\\Form\\API\\TeamApiEditForm', 'groups' => ['Default', 'Entity', 'Team', 'Team_Entity'], 'options' => NULL, 'serializationContext' => []], 'Team' => ['type' => 'App\\Entity\\Team', 'groups' => ['Default', 'Entity', 'Team', 'Team_Entity'], 'options' => NULL, 'serializationContext' => []], 'TeamCollection' => ['type' => 'App\\Entity\\Team', 'groups' => ['Default', 'Collection', 'Team'], 'options' => NULL, 'serializationContext' => []], 'TeamMember' => ['type' => 'App\\Entity\\TeamMember', 'groups' => ['Team_Entity'], 'options' => NULL, 'serializationContext' => []], 'TeamMembership' => ['type' => 'App\\Entity\\TeamMember', 'groups' => ['User_Entity'], 'options' => NULL, 'serializationContext' => []], 'Invoice' => ['type' => 'App\\Entity\\Invoice', 'groups' => ['Default', 'Entity', 'Invoice', 'Invoice_Entity'], 'options' => NULL, 'serializationContext' => []], 'InvoiceCollection' => ['type' => 'App\\Entity\\Invoice', 'groups' => ['Default', 'Collection', 'Invoice'], 'options' => NULL, 'serializationContext' => []]]);
        $instance->setMediaTypes(['json']);
        $instance->setLogger($b);
        $instance->setOpenApiVersion(NULL);

        return $instance;
    }
}
