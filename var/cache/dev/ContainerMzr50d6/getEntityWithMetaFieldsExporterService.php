<?php

namespace ContainerMzr50d6;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getEntityWithMetaFieldsExporterService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Export\Spreadsheet\EntityWithMetaFieldsExporter' shared autowired service.
     *
     * @return \App\Export\Spreadsheet\EntityWithMetaFieldsExporter
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Export'.\DIRECTORY_SEPARATOR.'Spreadsheet'.\DIRECTORY_SEPARATOR.'EntityWithMetaFieldsExporter.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Export'.\DIRECTORY_SEPARATOR.'Spreadsheet'.\DIRECTORY_SEPARATOR.'Extractor'.\DIRECTORY_SEPARATOR.'ExtractorInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Export'.\DIRECTORY_SEPARATOR.'Spreadsheet'.\DIRECTORY_SEPARATOR.'Extractor'.\DIRECTORY_SEPARATOR.'MetaFieldExtractor.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Export'.\DIRECTORY_SEPARATOR.'Spreadsheet'.\DIRECTORY_SEPARATOR.'Extractor'.\DIRECTORY_SEPARATOR.'AnnotationExtractor.php';

        $a = ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container));

        if (isset($container->privates['App\\Export\\Spreadsheet\\EntityWithMetaFieldsExporter'])) {
            return $container->privates['App\\Export\\Spreadsheet\\EntityWithMetaFieldsExporter'];
        }

        return $container->privates['App\\Export\\Spreadsheet\\EntityWithMetaFieldsExporter'] = new \App\Export\Spreadsheet\EntityWithMetaFieldsExporter(($container->privates['App\\Export\\Spreadsheet\\SpreadsheetExporter'] ?? $container->load('getSpreadsheetExporterService')), ($container->privates['App\\Export\\Spreadsheet\\Extractor\\AnnotationExtractor'] ??= new \App\Export\Spreadsheet\Extractor\AnnotationExtractor()), new \App\Export\Spreadsheet\Extractor\MetaFieldExtractor($a));
    }
}
