<?php

namespace ContainerMzr50d6;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Authenticator_FirewallAwareLoginLinkHandlerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'security.authenticator.firewall_aware_login_link_handler' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\LoginLink\FirewallAwareLoginLinkHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-http'.\DIRECTORY_SEPARATOR.'LoginLink'.\DIRECTORY_SEPARATOR.'LoginLinkHandlerInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-bundle'.\DIRECTORY_SEPARATOR.'Security'.\DIRECTORY_SEPARATOR.'FirewallAwareTrait.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-bundle'.\DIRECTORY_SEPARATOR.'LoginLink'.\DIRECTORY_SEPARATOR.'FirewallAwareLoginLinkHandler.php';

        $a = ($container->privates['security.firewall.map'] ?? self::getSecurity_Firewall_MapService($container));

        if (isset($container->privates['security.authenticator.firewall_aware_login_link_handler'])) {
            return $container->privates['security.authenticator.firewall_aware_login_link_handler'];
        }

        return $container->privates['security.authenticator.firewall_aware_login_link_handler'] = new \Symfony\Bundle\SecurityBundle\LoginLink\FirewallAwareLoginLinkHandler($a, new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'secured_area' => ['privates', 'security.authenticator.login_link_handler.secured_area', 'getSecurity_Authenticator_LoginLinkHandler_SecuredAreaService', true],
        ], [
            'secured_area' => 'Symfony\\Component\\Security\\Http\\LoginLink\\LoginLinkHandler',
        ]), ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()));
    }
}
