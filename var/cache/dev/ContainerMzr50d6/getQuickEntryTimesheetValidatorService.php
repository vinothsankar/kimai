<?php

namespace ContainerMzr50d6;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getQuickEntryTimesheetValidatorService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Validator\Constraints\QuickEntryTimesheetValidator' shared autowired service.
     *
     * @return \App\Validator\Constraints\QuickEntryTimesheetValidator
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator'.\DIRECTORY_SEPARATOR.'ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator'.\DIRECTORY_SEPARATOR.'ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Validator'.\DIRECTORY_SEPARATOR.'Constraints'.\DIRECTORY_SEPARATOR.'QuickEntryTimesheetValidator.php';

        return $container->privates['App\\Validator\\Constraints\\QuickEntryTimesheetValidator'] = new \App\Validator\Constraints\QuickEntryTimesheetValidator(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Validator\\Constraints\\TimesheetBasic'] ??= new \App\Validator\Constraints\TimesheetBasic());
            yield 1 => ($container->privates['App\\Validator\\Constraints\\TimesheetBudgetUsed'] ??= new \App\Validator\Constraints\TimesheetBudgetUsed());
            yield 2 => ($container->privates['App\\Validator\\Constraints\\TimesheetDeactivated'] ??= new \App\Validator\Constraints\TimesheetDeactivated());
            yield 3 => ($container->privates['App\\Validator\\Constraints\\TimesheetExported'] ??= new \App\Validator\Constraints\TimesheetExported());
            yield 4 => ($container->privates['App\\Validator\\Constraints\\TimesheetFutureTimes'] ??= new \App\Validator\Constraints\TimesheetFutureTimes());
            yield 5 => ($container->privates['App\\Validator\\Constraints\\TimesheetLockdown'] ??= new \App\Validator\Constraints\TimesheetLockdown());
            yield 6 => ($container->privates['App\\Validator\\Constraints\\TimesheetLongRunning'] ??= new \App\Validator\Constraints\TimesheetLongRunning());
            yield 7 => ($container->privates['App\\Validator\\Constraints\\TimesheetOverlapping'] ??= new \App\Validator\Constraints\TimesheetOverlapping());
            yield 8 => ($container->privates['App\\Validator\\Constraints\\TimesheetRestart'] ??= new \App\Validator\Constraints\TimesheetRestart());
            yield 9 => ($container->privates['App\\Validator\\Constraints\\TimesheetZeroDuration'] ??= new \App\Validator\Constraints\TimesheetZeroDuration());
        }, 10));
    }
}
