<?php

namespace ContainerMzr50d6;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getForm_RegistryService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'form.registry' shared service.
     *
     * @return \Symfony\Component\Form\FormRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'FormRegistryInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'FormRegistry.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'FormExtensionInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'DependencyInjection'.\DIRECTORY_SEPARATOR.'DependencyInjectionExtension.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'ResolvedFormTypeFactoryInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'Proxy'.\DIRECTORY_SEPARATOR.'ResolvedTypeFactoryDataCollectorProxy.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'ResolvedFormTypeFactory.php';

        return $container->privates['form.registry'] = new \Symfony\Component\Form\FormRegistry([new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'App\\Form\\API\\ActivityApiEditForm' => ['privates', 'App\\Form\\API\\ActivityApiEditForm', 'getActivityApiEditFormService', true],
            'App\\Form\\API\\ActivityRateApiForm' => ['privates', 'App\\Form\\API\\ActivityRateApiForm', 'getActivityRateApiFormService', true],
            'App\\Form\\API\\CustomerApiEditForm' => ['privates', 'App\\Form\\API\\CustomerApiEditForm', 'getCustomerApiEditFormService', true],
            'App\\Form\\API\\CustomerRateApiForm' => ['privates', 'App\\Form\\API\\CustomerRateApiForm', 'getCustomerRateApiFormService', true],
            'App\\Form\\API\\DateTimeApiType' => ['privates', 'App\\Form\\API\\DateTimeApiType', 'getDateTimeApiTypeService', true],
            'App\\Form\\API\\ProjectApiEditForm' => ['privates', 'App\\Form\\API\\ProjectApiEditForm', 'getProjectApiEditFormService', true],
            'App\\Form\\API\\ProjectRateApiForm' => ['privates', 'App\\Form\\API\\ProjectRateApiForm', 'getProjectRateApiFormService', true],
            'App\\Form\\API\\TagApiEditForm' => ['privates', 'App\\Form\\API\\TagApiEditForm', 'getTagApiEditFormService', true],
            'App\\Form\\API\\TeamApiEditForm' => ['privates', 'App\\Form\\API\\TeamApiEditForm', 'getTeamApiEditFormService', true],
            'App\\Form\\API\\TimesheetApiEditForm' => ['privates', 'App\\Form\\API\\TimesheetApiEditForm', 'getTimesheetApiEditFormService', true],
            'App\\Form\\API\\UserApiCreateForm' => ['privates', 'App\\Form\\API\\UserApiCreateForm', 'getUserApiCreateFormService', true],
            'App\\Form\\API\\UserApiEditForm' => ['privates', 'App\\Form\\API\\UserApiEditForm', 'getUserApiEditFormService', true],
            'App\\Form\\AccessTokenForm' => ['privates', 'App\\Form\\AccessTokenForm', 'getAccessTokenFormService', true],
            'App\\Form\\ActivityEditForm' => ['privates', 'App\\Form\\ActivityEditForm', 'getActivityEditFormService', true],
            'App\\Form\\ActivityRateForm' => ['privates', 'App\\Form\\ActivityRateForm', 'getActivityRateFormService', true],
            'App\\Form\\ActivityTeamPermissionForm' => ['privates', 'App\\Form\\ActivityTeamPermissionForm', 'getActivityTeamPermissionFormService', true],
            'App\\Form\\CalendarForm' => ['privates', 'App\\Form\\CalendarForm', 'getCalendarFormService', true],
            'App\\Form\\ContractByUserForm' => ['privates', 'App\\Form\\ContractByUserForm', 'getContractByUserFormService', true],
            'App\\Form\\CustomerCommentForm' => ['privates', 'App\\Form\\CustomerCommentForm', 'getCustomerCommentFormService', true],
            'App\\Form\\CustomerEditForm' => ['privates', 'App\\Form\\CustomerEditForm', 'getCustomerEditFormService', true],
            'App\\Form\\CustomerRateForm' => ['privates', 'App\\Form\\CustomerRateForm', 'getCustomerRateFormService', true],
            'App\\Form\\CustomerTeamPermissionForm' => ['privates', 'App\\Form\\CustomerTeamPermissionForm', 'getCustomerTeamPermissionFormService', true],
            'App\\Form\\InvoiceDocumentUploadForm' => ['privates', 'App\\Form\\InvoiceDocumentUploadForm', 'getInvoiceDocumentUploadFormService', true],
            'App\\Form\\InvoiceEditForm' => ['privates', 'App\\Form\\InvoiceEditForm', 'getInvoiceEditFormService', true],
            'App\\Form\\InvoiceTemplateForm' => ['privates', 'App\\Form\\InvoiceTemplateForm', 'getInvoiceTemplateFormService', true],
            'App\\Form\\MultiUpdate\\MultiUpdateTable' => ['privates', 'App\\Form\\MultiUpdate\\MultiUpdateTable', 'getMultiUpdateTableService', true],
            'App\\Form\\MultiUpdate\\TimesheetMultiUpdate' => ['privates', 'App\\Form\\MultiUpdate\\TimesheetMultiUpdate', 'getTimesheetMultiUpdateService', true],
            'App\\Form\\ProjectCommentForm' => ['privates', 'App\\Form\\ProjectCommentForm', 'getProjectCommentFormService', true],
            'App\\Form\\ProjectEditForm' => ['privates', 'App\\Form\\ProjectEditForm', 'getProjectEditFormService', true],
            'App\\Form\\ProjectRateForm' => ['privates', 'App\\Form\\ProjectRateForm', 'getProjectRateFormService', true],
            'App\\Form\\ProjectTeamPermissionForm' => ['privates', 'App\\Form\\ProjectTeamPermissionForm', 'getProjectTeamPermissionFormService', true],
            'App\\Form\\QuickEntryForm' => ['privates', 'App\\Form\\QuickEntryForm', 'getQuickEntryFormService', true],
            'App\\Form\\RoleType' => ['privates', 'App\\Form\\RoleType', 'getRoleTypeService', true],
            'App\\Form\\SelfRegistrationForm' => ['privates', 'App\\Form\\SelfRegistrationForm', 'getSelfRegistrationFormService', true],
            'App\\Form\\SystemConfigurationForm' => ['privates', 'App\\Form\\SystemConfigurationForm', 'getSystemConfigurationFormService', true],
            'App\\Form\\TagEditForm' => ['privates', 'App\\Form\\TagEditForm', 'getTagEditFormService', true],
            'App\\Form\\TeamEditForm' => ['privates', 'App\\Form\\TeamEditForm', 'getTeamEditFormService', true],
            'App\\Form\\TimesheetAdminEditForm' => ['privates', 'App\\Form\\TimesheetAdminEditForm', 'getTimesheetAdminEditFormService', true],
            'App\\Form\\TimesheetEditForm' => ['privates', 'App\\Form\\TimesheetEditForm', 'getTimesheetEditFormService', true],
            'App\\Form\\TimesheetMultiUserEditForm' => ['privates', 'App\\Form\\TimesheetMultiUserEditForm', 'getTimesheetMultiUserEditFormService', true],
            'App\\Form\\TimesheetPreCreateForm' => ['privates', 'App\\Form\\TimesheetPreCreateForm', 'getTimesheetPreCreateFormService', true],
            'App\\Form\\Toolbar\\ActivityToolbarForm' => ['privates', 'App\\Form\\Toolbar\\ActivityToolbarForm', 'getActivityToolbarFormService', true],
            'App\\Form\\Toolbar\\CustomerToolbarForm' => ['privates', 'App\\Form\\Toolbar\\CustomerToolbarForm', 'getCustomerToolbarFormService', true],
            'App\\Form\\Toolbar\\ExportToolbarForm' => ['privates', 'App\\Form\\Toolbar\\ExportToolbarForm', 'getExportToolbarFormService', true],
            'App\\Form\\Toolbar\\InvoiceArchiveForm' => ['privates', 'App\\Form\\Toolbar\\InvoiceArchiveForm', 'getInvoiceArchiveFormService', true],
            'App\\Form\\Toolbar\\InvoiceToolbarForm' => ['privates', 'App\\Form\\Toolbar\\InvoiceToolbarForm', 'getInvoiceToolbarFormService', true],
            'App\\Form\\Toolbar\\ProjectToolbarForm' => ['privates', 'App\\Form\\Toolbar\\ProjectToolbarForm', 'getProjectToolbarFormService', true],
            'App\\Form\\Toolbar\\TagToolbarForm' => ['privates', 'App\\Form\\Toolbar\\TagToolbarForm', 'getTagToolbarFormService', true],
            'App\\Form\\Toolbar\\TeamToolbarForm' => ['privates', 'App\\Form\\Toolbar\\TeamToolbarForm', 'getTeamToolbarFormService', true],
            'App\\Form\\Toolbar\\TimesheetToolbarForm' => ['privates', 'App\\Form\\Toolbar\\TimesheetToolbarForm', 'getTimesheetToolbarFormService', true],
            'App\\Form\\Toolbar\\UserToolbarForm' => ['privates', 'App\\Form\\Toolbar\\UserToolbarForm', 'getUserToolbarFormService', true],
            'App\\Form\\Type\\ActivityType' => ['privates', 'App\\Form\\Type\\ActivityType', 'getActivityTypeService', true],
            'App\\Form\\Type\\ActivityTypePatternType' => ['privates', 'App\\Form\\Type\\ActivityTypePatternType', 'getActivityTypePatternTypeService', true],
            'App\\Form\\Type\\ArrayToCommaStringType' => ['privates', 'App\\Form\\Type\\ArrayToCommaStringType', 'getArrayToCommaStringTypeService', true],
            'App\\Form\\Type\\AvatarType' => ['privates', 'App\\Form\\Type\\AvatarType', 'getAvatarTypeService', true],
            'App\\Form\\Type\\BillableSearchType' => ['privates', 'App\\Form\\Type\\BillableSearchType', 'getBillableSearchTypeService', true],
            'App\\Form\\Type\\BillableType' => ['privates', 'App\\Form\\Type\\BillableType', 'getBillableTypeService', true],
            'App\\Form\\Type\\BudgetType' => ['privates', 'App\\Form\\Type\\BudgetType', 'getBudgetTypeService', true],
            'App\\Form\\Type\\CalendarTitlePatternType' => ['privates', 'App\\Form\\Type\\CalendarTitlePatternType', 'getCalendarTitlePatternTypeService', true],
            'App\\Form\\Type\\CalendarViewType' => ['privates', 'App\\Form\\Type\\CalendarViewType', 'getCalendarViewTypeService', true],
            'App\\Form\\Type\\ColorChoiceType' => ['privates', 'App\\Form\\Type\\ColorChoiceType', 'getColorChoiceTypeService', true],
            'App\\Form\\Type\\ColorPickerType' => ['privates', 'App\\Form\\Type\\ColorPickerType', 'getColorPickerTypeService', true],
            'App\\Form\\Type\\CustomerType' => ['privates', 'App\\Form\\Type\\CustomerType', 'getCustomerTypeService', true],
            'App\\Form\\Type\\CustomerTypePatternType' => ['privates', 'App\\Form\\Type\\CustomerTypePatternType', 'getCustomerTypePatternTypeService', true],
            'App\\Form\\Type\\DatePickerType' => ['privates', 'App\\Form\\Type\\DatePickerType', 'getDatePickerTypeService', true],
            'App\\Form\\Type\\DateRangeType' => ['privates', 'App\\Form\\Type\\DateRangeType', 'getDateRangeTypeService', true],
            'App\\Form\\Type\\DateTimePickerType' => ['privates', 'App\\Form\\Type\\DateTimePickerType', 'getDateTimePickerTypeService', true],
            'App\\Form\\Type\\DateTimeTextType' => ['privates', 'App\\Form\\Type\\DateTimeTextType', 'getDateTimeTextTypeService', true],
            'App\\Form\\Type\\DayTimeType' => ['privates', 'App\\Form\\Type\\DayTimeType', 'getDayTimeTypeService', true],
            'App\\Form\\Type\\DescriptionType' => ['privates', 'App\\Form\\Type\\DescriptionType', 'getDescriptionTypeService', true],
            'App\\Form\\Type\\DurationType' => ['privates', 'App\\Form\\Type\\DurationType', 'getDurationTypeService', true],
            'App\\Form\\Type\\EntityMetaDefinitionType' => ['privates', 'App\\Form\\Type\\EntityMetaDefinitionType', 'getEntityMetaDefinitionTypeService', true],
            'App\\Form\\Type\\FavoriteMenuType' => ['privates', 'App\\Form\\Type\\FavoriteMenuType', 'getFavoriteMenuTypeService', true],
            'App\\Form\\Type\\FirstWeekDayType' => ['privates', 'App\\Form\\Type\\FirstWeekDayType', 'getFirstWeekDayTypeService', true],
            'App\\Form\\Type\\FixedRateType' => ['privates', 'App\\Form\\Type\\FixedRateType', 'getFixedRateTypeService', true],
            'App\\Form\\Type\\HourlyRateType' => ['privates', 'App\\Form\\Type\\HourlyRateType', 'getHourlyRateTypeService', true],
            'App\\Form\\Type\\InitialViewType' => ['privates', 'App\\Form\\Type\\InitialViewType', 'getInitialViewTypeService', true],
            'App\\Form\\Type\\InvoiceCalculatorType' => ['privates', 'App\\Form\\Type\\InvoiceCalculatorType', 'getInvoiceCalculatorTypeService', true],
            'App\\Form\\Type\\InvoiceLabelType' => ['privates', 'App\\Form\\Type\\InvoiceLabelType', 'getInvoiceLabelTypeService', true],
            'App\\Form\\Type\\InvoiceNumberGeneratorType' => ['privates', 'App\\Form\\Type\\InvoiceNumberGeneratorType', 'getInvoiceNumberGeneratorTypeService', true],
            'App\\Form\\Type\\InvoiceRendererType' => ['privates', 'App\\Form\\Type\\InvoiceRendererType', 'getInvoiceRendererTypeService', true],
            'App\\Form\\Type\\InvoiceStatusType' => ['privates', 'App\\Form\\Type\\InvoiceStatusType', 'getInvoiceStatusTypeService', true],
            'App\\Form\\Type\\InvoiceTemplateType' => ['privates', 'App\\Form\\Type\\InvoiceTemplateType', 'getInvoiceTemplateTypeService', true],
            'App\\Form\\Type\\LanguageType' => ['privates', 'App\\Form\\Type\\LanguageType', 'getLanguageTypeService', true],
            'App\\Form\\Type\\MailType' => ['privates', 'App\\Form\\Type\\MailType', 'getMailTypeService', true],
            'App\\Form\\Type\\MenuChoiceType' => ['privates', 'App\\Form\\Type\\MenuChoiceType', 'getMenuChoiceTypeService', true],
            'App\\Form\\Type\\MetaFieldsCollectionType' => ['privates', 'App\\Form\\Type\\MetaFieldsCollectionType', 'getMetaFieldsCollectionTypeService', true],
            'App\\Form\\Type\\MinuteIncrementType' => ['privates', 'App\\Form\\Type\\MinuteIncrementType', 'getMinuteIncrementTypeService', true],
            'App\\Form\\Type\\MonthPickerType' => ['privates', 'App\\Form\\Type\\MonthPickerType', 'getMonthPickerTypeService', true],
            'App\\Form\\Type\\PageSizeType' => ['privates', 'App\\Form\\Type\\PageSizeType', 'getPageSizeTypeService', true],
            'App\\Form\\Type\\ProjectType' => ['privates', 'App\\Form\\Type\\ProjectType', 'getProjectTypeService', true],
            'App\\Form\\Type\\ProjectTypePatternType' => ['privates', 'App\\Form\\Type\\ProjectTypePatternType', 'getProjectTypePatternTypeService', true],
            'App\\Form\\Type\\QuickEntryTimesheetType' => ['privates', 'App\\Form\\Type\\QuickEntryTimesheetType', 'getQuickEntryTimesheetTypeService', true],
            'App\\Form\\Type\\QuickEntryWeekType' => ['privates', 'App\\Form\\Type\\QuickEntryWeekType', 'getQuickEntryWeekTypeService', true],
            'App\\Form\\Type\\ReportSumType' => ['privates', 'App\\Form\\Type\\ReportSumType', 'getReportSumTypeService', true],
            'App\\Form\\Type\\RoundingModeType' => ['privates', 'App\\Form\\Type\\RoundingModeType', 'getRoundingModeTypeService', true],
            'App\\Form\\Type\\SearchTermType' => ['privates', 'App\\Form\\Type\\SearchTermType', 'getSearchTermTypeService', true],
            'App\\Form\\Type\\SkinType' => ['privates', 'App\\Form\\Type\\SkinType', 'getSkinTypeService', true],
            'App\\Form\\Type\\SystemConfigurationType' => ['privates', 'App\\Form\\Type\\SystemConfigurationType', 'getSystemConfigurationTypeService', true],
            'App\\Form\\Type\\TagsInputType' => ['privates', 'App\\Form\\Type\\TagsInputType', 'getTagsInputTypeService', true],
            'App\\Form\\Type\\TagsSelectType' => ['privates', 'App\\Form\\Type\\TagsSelectType', 'getTagsSelectTypeService', true],
            'App\\Form\\Type\\TagsType' => ['privates', 'App\\Form\\Type\\TagsType', 'getTagsTypeService', true],
            'App\\Form\\Type\\TeamMemberType' => ['privates', 'App\\Form\\Type\\TeamMemberType', 'getTeamMemberTypeService', true],
            'App\\Form\\Type\\TeamType' => ['privates', 'App\\Form\\Type\\TeamType', 'getTeamTypeService', true],
            'App\\Form\\Type\\TimePickerType' => ['privates', 'App\\Form\\Type\\TimePickerType', 'getTimePickerTypeService', true],
            'App\\Form\\Type\\TimesheetBillableType' => ['privates', 'App\\Form\\Type\\TimesheetBillableType', 'getTimesheetBillableTypeService', true],
            'App\\Form\\Type\\TimezoneType' => ['privates', 'App\\Form\\Type\\TimezoneType', 'getTimezoneTypeService', true],
            'App\\Form\\Type\\TrackingModeType' => ['privates', 'App\\Form\\Type\\TrackingModeType', 'getTrackingModeTypeService', true],
            'App\\Form\\Type\\UserLanguageType' => ['privates', 'App\\Form\\Type\\UserLanguageType', 'getUserLanguageTypeService', true],
            'App\\Form\\Type\\UserLocaleType' => ['privates', 'App\\Form\\Type\\UserLocaleType', 'getUserLocaleTypeService', true],
            'App\\Form\\Type\\UserPreferenceType' => ['privates', 'App\\Form\\Type\\UserPreferenceType', 'getUserPreferenceTypeService', true],
            'App\\Form\\Type\\UserPreferencesCollectionType' => ['privates', 'App\\Form\\Type\\UserPreferencesCollectionType', 'getUserPreferencesCollectionTypeService', true],
            'App\\Form\\Type\\UserRoleType' => ['privates', 'App\\Form\\Type\\UserRoleType', 'getUserRoleTypeService', true],
            'App\\Form\\Type\\UserType' => ['privates', 'App\\Form\\Type\\UserType', 'getUserTypeService', true],
            'App\\Form\\Type\\VisibilityType' => ['privates', 'App\\Form\\Type\\VisibilityType', 'getVisibilityTypeService', true],
            'App\\Form\\Type\\WeekDaysType' => ['privates', 'App\\Form\\Type\\WeekDaysType', 'getWeekDaysTypeService', true],
            'App\\Form\\Type\\WeekPickerType' => ['privates', 'App\\Form\\Type\\WeekPickerType', 'getWeekPickerTypeService', true],
            'App\\Form\\Type\\YearPickerType' => ['privates', 'App\\Form\\Type\\YearPickerType', 'getYearPickerTypeService', true],
            'App\\Form\\Type\\YesNoType' => ['privates', 'App\\Form\\Type\\YesNoType', 'getYesNoTypeService', true],
            'App\\Form\\UserApiPasswordType' => ['privates', 'App\\Form\\UserApiPasswordType', 'getUserApiPasswordTypeService', true],
            'App\\Form\\UserContractType' => ['privates', 'App\\Form\\UserContractType', 'getUserContractTypeService', true],
            'App\\Form\\UserCreateType' => ['privates', 'App\\Form\\UserCreateType', 'getUserCreateTypeService', true],
            'App\\Form\\UserEditType' => ['privates', 'App\\Form\\UserEditType', 'getUserEditTypeService', true],
            'App\\Form\\UserPasswordType' => ['privates', 'App\\Form\\UserPasswordType', 'getUserPasswordTypeService', true],
            'App\\Form\\UserPreferencesForm' => ['privates', 'App\\Form\\UserPreferencesForm', 'getUserPreferencesFormService', true],
            'App\\Form\\UserRolesType' => ['privates', 'App\\Form\\UserRolesType', 'getUserRolesTypeService', true],
            'App\\Form\\UserTeamsType' => ['privates', 'App\\Form\\UserTeamsType', 'getUserTeamsTypeService', true],
            'App\\Form\\UserTwoFactorType' => ['privates', 'App\\Form\\UserTwoFactorType', 'getUserTwoFactorTypeService', true],
            'App\\Form\\WeekByUserForm' => ['privates', 'App\\Form\\WeekByUserForm', 'getWeekByUserFormService', true],
            'App\\Form\\YearByUserForm' => ['privates', 'App\\Form\\YearByUserForm', 'getYearByUserFormService', true],
            'App\\Reporting\\CustomerMonthlyProjects\\CustomerMonthlyProjectsForm' => ['privates', 'App\\Reporting\\CustomerMonthlyProjects\\CustomerMonthlyProjectsForm', 'getCustomerMonthlyProjectsFormService', true],
            'App\\Reporting\\MonthByUser\\MonthByUserForm' => ['privates', 'App\\Reporting\\MonthByUser\\MonthByUserForm', 'getMonthByUserFormService', true],
            'App\\Reporting\\MonthlyUserList\\MonthlyUserListForm' => ['privates', 'App\\Reporting\\MonthlyUserList\\MonthlyUserListForm', 'getMonthlyUserListFormService', true],
            'App\\Reporting\\ProjectDateRange\\ProjectDateRangeForm' => ['privates', 'App\\Reporting\\ProjectDateRange\\ProjectDateRangeForm', 'getProjectDateRangeFormService', true],
            'App\\Reporting\\ProjectDetails\\ProjectDetailsForm' => ['privates', 'App\\Reporting\\ProjectDetails\\ProjectDetailsForm', 'getProjectDetailsFormService', true],
            'App\\Reporting\\ProjectInactive\\ProjectInactiveForm' => ['privates', 'App\\Reporting\\ProjectInactive\\ProjectInactiveForm', 'getProjectInactiveFormService', true],
            'App\\Reporting\\ProjectView\\ProjectViewForm' => ['privates', 'App\\Reporting\\ProjectView\\ProjectViewForm', 'getProjectViewFormService', true],
            'App\\Reporting\\WeekByUser\\WeekByUserForm' => ['privates', 'App\\Reporting\\WeekByUser\\WeekByUserForm', 'getWeekByUserForm2Service', true],
            'App\\Reporting\\WeeklyUserList\\WeeklyUserListForm' => ['privates', 'App\\Reporting\\WeeklyUserList\\WeeklyUserListForm', 'getWeeklyUserListFormService', true],
            'App\\Reporting\\YearByUser\\YearByUserForm' => ['privates', 'App\\Reporting\\YearByUser\\YearByUserForm', 'getYearByUserForm2Service', true],
            'App\\Reporting\\YearlyUserList\\YearlyUserListForm' => ['privates', 'App\\Reporting\\YearlyUserList\\YearlyUserListForm', 'getYearlyUserListFormService', true],
            'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => ['privates', 'form.type.entity', 'getForm_Type_EntityService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => ['privates', 'form.type.choice', 'getForm_Type_ChoiceService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ColorType' => ['privates', 'form.type.color', 'getForm_Type_ColorService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => ['privates', 'form.type.file', 'getForm_Type_FileService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => ['privates', 'form.type.form', 'getForm_Type_FormService', true],
        ], [
            'App\\Form\\API\\ActivityApiEditForm' => '?',
            'App\\Form\\API\\ActivityRateApiForm' => '?',
            'App\\Form\\API\\CustomerApiEditForm' => '?',
            'App\\Form\\API\\CustomerRateApiForm' => '?',
            'App\\Form\\API\\DateTimeApiType' => '?',
            'App\\Form\\API\\ProjectApiEditForm' => '?',
            'App\\Form\\API\\ProjectRateApiForm' => '?',
            'App\\Form\\API\\TagApiEditForm' => '?',
            'App\\Form\\API\\TeamApiEditForm' => '?',
            'App\\Form\\API\\TimesheetApiEditForm' => '?',
            'App\\Form\\API\\UserApiCreateForm' => '?',
            'App\\Form\\API\\UserApiEditForm' => '?',
            'App\\Form\\AccessTokenForm' => '?',
            'App\\Form\\ActivityEditForm' => '?',
            'App\\Form\\ActivityRateForm' => '?',
            'App\\Form\\ActivityTeamPermissionForm' => '?',
            'App\\Form\\CalendarForm' => '?',
            'App\\Form\\ContractByUserForm' => '?',
            'App\\Form\\CustomerCommentForm' => '?',
            'App\\Form\\CustomerEditForm' => '?',
            'App\\Form\\CustomerRateForm' => '?',
            'App\\Form\\CustomerTeamPermissionForm' => '?',
            'App\\Form\\InvoiceDocumentUploadForm' => '?',
            'App\\Form\\InvoiceEditForm' => '?',
            'App\\Form\\InvoiceTemplateForm' => '?',
            'App\\Form\\MultiUpdate\\MultiUpdateTable' => '?',
            'App\\Form\\MultiUpdate\\TimesheetMultiUpdate' => '?',
            'App\\Form\\ProjectCommentForm' => '?',
            'App\\Form\\ProjectEditForm' => '?',
            'App\\Form\\ProjectRateForm' => '?',
            'App\\Form\\ProjectTeamPermissionForm' => '?',
            'App\\Form\\QuickEntryForm' => '?',
            'App\\Form\\RoleType' => '?',
            'App\\Form\\SelfRegistrationForm' => '?',
            'App\\Form\\SystemConfigurationForm' => '?',
            'App\\Form\\TagEditForm' => '?',
            'App\\Form\\TeamEditForm' => '?',
            'App\\Form\\TimesheetAdminEditForm' => '?',
            'App\\Form\\TimesheetEditForm' => '?',
            'App\\Form\\TimesheetMultiUserEditForm' => '?',
            'App\\Form\\TimesheetPreCreateForm' => '?',
            'App\\Form\\Toolbar\\ActivityToolbarForm' => '?',
            'App\\Form\\Toolbar\\CustomerToolbarForm' => '?',
            'App\\Form\\Toolbar\\ExportToolbarForm' => '?',
            'App\\Form\\Toolbar\\InvoiceArchiveForm' => '?',
            'App\\Form\\Toolbar\\InvoiceToolbarForm' => '?',
            'App\\Form\\Toolbar\\ProjectToolbarForm' => '?',
            'App\\Form\\Toolbar\\TagToolbarForm' => '?',
            'App\\Form\\Toolbar\\TeamToolbarForm' => '?',
            'App\\Form\\Toolbar\\TimesheetToolbarForm' => '?',
            'App\\Form\\Toolbar\\UserToolbarForm' => '?',
            'App\\Form\\Type\\ActivityType' => '?',
            'App\\Form\\Type\\ActivityTypePatternType' => '?',
            'App\\Form\\Type\\ArrayToCommaStringType' => '?',
            'App\\Form\\Type\\AvatarType' => '?',
            'App\\Form\\Type\\BillableSearchType' => '?',
            'App\\Form\\Type\\BillableType' => '?',
            'App\\Form\\Type\\BudgetType' => '?',
            'App\\Form\\Type\\CalendarTitlePatternType' => '?',
            'App\\Form\\Type\\CalendarViewType' => '?',
            'App\\Form\\Type\\ColorChoiceType' => '?',
            'App\\Form\\Type\\ColorPickerType' => '?',
            'App\\Form\\Type\\CustomerType' => '?',
            'App\\Form\\Type\\CustomerTypePatternType' => '?',
            'App\\Form\\Type\\DatePickerType' => '?',
            'App\\Form\\Type\\DateRangeType' => '?',
            'App\\Form\\Type\\DateTimePickerType' => '?',
            'App\\Form\\Type\\DateTimeTextType' => '?',
            'App\\Form\\Type\\DayTimeType' => '?',
            'App\\Form\\Type\\DescriptionType' => '?',
            'App\\Form\\Type\\DurationType' => '?',
            'App\\Form\\Type\\EntityMetaDefinitionType' => '?',
            'App\\Form\\Type\\FavoriteMenuType' => '?',
            'App\\Form\\Type\\FirstWeekDayType' => '?',
            'App\\Form\\Type\\FixedRateType' => '?',
            'App\\Form\\Type\\HourlyRateType' => '?',
            'App\\Form\\Type\\InitialViewType' => '?',
            'App\\Form\\Type\\InvoiceCalculatorType' => '?',
            'App\\Form\\Type\\InvoiceLabelType' => '?',
            'App\\Form\\Type\\InvoiceNumberGeneratorType' => '?',
            'App\\Form\\Type\\InvoiceRendererType' => '?',
            'App\\Form\\Type\\InvoiceStatusType' => '?',
            'App\\Form\\Type\\InvoiceTemplateType' => '?',
            'App\\Form\\Type\\LanguageType' => '?',
            'App\\Form\\Type\\MailType' => '?',
            'App\\Form\\Type\\MenuChoiceType' => '?',
            'App\\Form\\Type\\MetaFieldsCollectionType' => '?',
            'App\\Form\\Type\\MinuteIncrementType' => '?',
            'App\\Form\\Type\\MonthPickerType' => '?',
            'App\\Form\\Type\\PageSizeType' => '?',
            'App\\Form\\Type\\ProjectType' => '?',
            'App\\Form\\Type\\ProjectTypePatternType' => '?',
            'App\\Form\\Type\\QuickEntryTimesheetType' => '?',
            'App\\Form\\Type\\QuickEntryWeekType' => '?',
            'App\\Form\\Type\\ReportSumType' => '?',
            'App\\Form\\Type\\RoundingModeType' => '?',
            'App\\Form\\Type\\SearchTermType' => '?',
            'App\\Form\\Type\\SkinType' => '?',
            'App\\Form\\Type\\SystemConfigurationType' => '?',
            'App\\Form\\Type\\TagsInputType' => '?',
            'App\\Form\\Type\\TagsSelectType' => '?',
            'App\\Form\\Type\\TagsType' => '?',
            'App\\Form\\Type\\TeamMemberType' => '?',
            'App\\Form\\Type\\TeamType' => '?',
            'App\\Form\\Type\\TimePickerType' => '?',
            'App\\Form\\Type\\TimesheetBillableType' => '?',
            'App\\Form\\Type\\TimezoneType' => '?',
            'App\\Form\\Type\\TrackingModeType' => '?',
            'App\\Form\\Type\\UserLanguageType' => '?',
            'App\\Form\\Type\\UserLocaleType' => '?',
            'App\\Form\\Type\\UserPreferenceType' => '?',
            'App\\Form\\Type\\UserPreferencesCollectionType' => '?',
            'App\\Form\\Type\\UserRoleType' => '?',
            'App\\Form\\Type\\UserType' => '?',
            'App\\Form\\Type\\VisibilityType' => '?',
            'App\\Form\\Type\\WeekDaysType' => '?',
            'App\\Form\\Type\\WeekPickerType' => '?',
            'App\\Form\\Type\\YearPickerType' => '?',
            'App\\Form\\Type\\YesNoType' => '?',
            'App\\Form\\UserApiPasswordType' => '?',
            'App\\Form\\UserContractType' => '?',
            'App\\Form\\UserCreateType' => '?',
            'App\\Form\\UserEditType' => '?',
            'App\\Form\\UserPasswordType' => '?',
            'App\\Form\\UserPreferencesForm' => '?',
            'App\\Form\\UserRolesType' => '?',
            'App\\Form\\UserTeamsType' => '?',
            'App\\Form\\UserTwoFactorType' => '?',
            'App\\Form\\WeekByUserForm' => '?',
            'App\\Form\\YearByUserForm' => '?',
            'App\\Reporting\\CustomerMonthlyProjects\\CustomerMonthlyProjectsForm' => '?',
            'App\\Reporting\\MonthByUser\\MonthByUserForm' => '?',
            'App\\Reporting\\MonthlyUserList\\MonthlyUserListForm' => '?',
            'App\\Reporting\\ProjectDateRange\\ProjectDateRangeForm' => '?',
            'App\\Reporting\\ProjectDetails\\ProjectDetailsForm' => '?',
            'App\\Reporting\\ProjectInactive\\ProjectInactiveForm' => '?',
            'App\\Reporting\\ProjectView\\ProjectViewForm' => '?',
            'App\\Reporting\\WeekByUser\\WeekByUserForm' => '?',
            'App\\Reporting\\WeeklyUserList\\WeeklyUserListForm' => '?',
            'App\\Reporting\\YearByUser\\YearByUserForm' => '?',
            'App\\Reporting\\YearlyUserList\\YearlyUserListForm' => '?',
            'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ColorType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => '?',
        ]), ['App\\Form\\API\\ActivityApiEditForm' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\ApiFormExtension'] ??= new \App\Form\Extension\ApiFormExtension());
        }, 1), 'App\\Form\\API\\ActivityRateApiForm' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\ApiFormExtension'] ??= new \App\Form\Extension\ApiFormExtension());
        }, 1), 'App\\Form\\API\\CustomerApiEditForm' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\ApiFormExtension'] ??= new \App\Form\Extension\ApiFormExtension());
        }, 1), 'App\\Form\\API\\CustomerRateApiForm' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\ApiFormExtension'] ??= new \App\Form\Extension\ApiFormExtension());
        }, 1), 'App\\Form\\API\\ProjectApiEditForm' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\ApiFormExtension'] ??= new \App\Form\Extension\ApiFormExtension());
        }, 1), 'App\\Form\\API\\ProjectRateApiForm' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\ApiFormExtension'] ??= new \App\Form\Extension\ApiFormExtension());
        }, 1), 'App\\Form\\API\\TagApiEditForm' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\ApiFormExtension'] ??= new \App\Form\Extension\ApiFormExtension());
        }, 1), 'App\\Form\\API\\TeamApiEditForm' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\ApiFormExtension'] ??= new \App\Form\Extension\ApiFormExtension());
        }, 1), 'App\\Form\\API\\TimesheetApiEditForm' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\ApiFormExtension'] ??= new \App\Form\Extension\ApiFormExtension());
        }, 1), 'App\\Form\\API\\UserApiCreateForm' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\ApiFormExtension'] ??= new \App\Form\Extension\ApiFormExtension());
        }, 1), 'App\\Form\\API\\UserApiEditForm' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\ApiFormExtension'] ??= new \App\Form\Extension\ApiFormExtension());
        }, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\DocumentationLinkExtension'] ??= new \App\Form\Extension\DocumentationLinkExtension());
            yield 1 => ($container->privates['App\\Form\\Extension\\HelpTranslationDomainExtension'] ??= new \App\Form\Extension\HelpTranslationDomainExtension());
            yield 2 => ($container->privates['App\\Form\\Extension\\UserExtension'] ?? $container->load('getUserExtensionService'));
            yield 3 => ($container->privates['form.type_extension.form.transformation_failure_handling'] ?? $container->load('getForm_TypeExtension_Form_TransformationFailureHandlingService'));
            yield 4 => ($container->privates['form.type_extension.form.http_foundation'] ?? $container->load('getForm_TypeExtension_Form_HttpFoundationService'));
            yield 5 => ($container->privates['form.type_extension.form.validator'] ?? $container->load('getForm_TypeExtension_Form_ValidatorService'));
            yield 6 => ($container->privates['form.type_extension.upload.validator'] ?? $container->load('getForm_TypeExtension_Upload_ValidatorService'));
            yield 7 => ($container->privates['form.type_extension.csrf'] ?? $container->load('getForm_TypeExtension_CsrfService'));
            yield 8 => ($container->privates['form.type_extension.form.data_collector'] ?? $container->load('getForm_TypeExtension_Form_DataCollectorService'));
            yield 9 => ($container->privates['form.type_extension.form.password_hasher'] ?? $container->load('getForm_TypeExtension_Form_PasswordHasherService'));
            yield 10 => ($container->privates['nelmio_api_doc.form.documentation_extension'] ??= new \Nelmio\ApiDocBundle\Form\Extension\DocumentationExtension());
        }, 11), 'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\EnhancedChoiceTypeExtension'] ??= new \App\Form\Extension\EnhancedChoiceTypeExtension());
            yield 1 => ($container->privates['App\\Form\\Extension\\SelectWithApiDataExtension'] ?? $container->load('getSelectWithApiDataExtensionService'));
        }, 2), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\EnhancedChoiceTypeExtension'] ??= new \App\Form\Extension\EnhancedChoiceTypeExtension());
        }, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\IconExtension'] ??= new \App\Form\Extension\IconExtension());
        }, 1), 'App\\Form\\Toolbar\\InvoiceToolbarForm' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\ToolbarFormExtension'] ?? $container->load('getToolbarFormExtensionService'));
        }, 1), 'App\\Form\\Toolbar\\ExportToolbarForm' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\ToolbarFormExtension'] ?? $container->load('getToolbarFormExtensionService'));
        }, 1), 'App\\Form\\Toolbar\\TimesheetToolbarForm' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\ToolbarFormExtension'] ?? $container->load('getToolbarFormExtensionService'));
        }, 1), 'App\\Form\\Toolbar\\UserToolbarForm' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\ToolbarFormExtension'] ?? $container->load('getToolbarFormExtensionService'));
        }, 1), 'App\\Reporting\\WeeklyUserList\\WeeklyUserListForm' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\ToolbarFormExtension'] ?? $container->load('getToolbarFormExtensionService'));
        }, 1), 'App\\Reporting\\MonthlyUserList\\MonthlyUserListForm' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\ToolbarFormExtension'] ?? $container->load('getToolbarFormExtensionService'));
        }, 1), 'App\\Reporting\\YearlyUserList\\YearlyUserListForm' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Form\\Extension\\ToolbarFormExtension'] ?? $container->load('getToolbarFormExtensionService'));
        }, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.repeated.validator'] ??= new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension());
        }, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.submit.validator'] ??= new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension());
        }, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\PasswordType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.password.password_hasher'] ?? $container->load('getForm_TypeExtension_Password_PasswordHasherService'));
        }, 1)], new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_guesser.validator'] ?? $container->load('getForm_TypeGuesser_ValidatorService'));
            yield 1 => ($container->privates['form.type_guesser.doctrine'] ?? $container->load('getForm_TypeGuesser_DoctrineService'));
        }, 2))], new \Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy(new \Symfony\Component\Form\ResolvedFormTypeFactory(), ($container->privates['data_collector.form'] ?? self::getDataCollector_FormService($container))));
    }
}
