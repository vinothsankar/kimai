<?php

namespace ContainerMzr50d6;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getValidationFailedExceptionErrorHandlerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\API\Serializer\ValidationFailedExceptionErrorHandler' shared autowired service.
     *
     * @return \App\API\Serializer\ValidationFailedExceptionErrorHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'SubscribingHandlerInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'API'.\DIRECTORY_SEPARATOR.'Serializer'.\DIRECTORY_SEPARATOR.'ValidationFailedExceptionErrorHandler.php';

        $a = ($container->privates['security.helper'] ?? $container->load('getSecurity_HelperService'));

        if (isset($container->privates['App\\API\\Serializer\\ValidationFailedExceptionErrorHandler'])) {
            return $container->privates['App\\API\\Serializer\\ValidationFailedExceptionErrorHandler'];
        }

        return $container->privates['App\\API\\Serializer\\ValidationFailedExceptionErrorHandler'] = new \App\API\Serializer\ValidationFailedExceptionErrorHandler(($container->privates['translator.default'] ?? self::getTranslator_DefaultService($container)), ($container->privates['fos_rest.serializer.flatten_exception_handler'] ?? $container->load('getFosRest_Serializer_FlattenExceptionHandlerService')), $a);
    }
}
