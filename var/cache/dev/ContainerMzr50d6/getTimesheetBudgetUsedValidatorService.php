<?php

namespace ContainerMzr50d6;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getTimesheetBudgetUsedValidatorService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Validator\Constraints\TimesheetBudgetUsedValidator' shared autowired service.
     *
     * @return \App\Validator\Constraints\TimesheetBudgetUsedValidator
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator'.\DIRECTORY_SEPARATOR.'ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator'.\DIRECTORY_SEPARATOR.'ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Validator'.\DIRECTORY_SEPARATOR.'Constraints'.\DIRECTORY_SEPARATOR.'TimesheetBudgetUsedValidator.php';

        $a = ($container->privates['App\\Customer\\CustomerStatisticService'] ?? $container->load('getCustomerStatisticServiceService'));

        if (isset($container->privates['App\\Validator\\Constraints\\TimesheetBudgetUsedValidator'])) {
            return $container->privates['App\\Validator\\Constraints\\TimesheetBudgetUsedValidator'];
        }
        $b = ($container->privates['App\\Project\\ProjectStatisticService'] ?? $container->load('getProjectStatisticServiceService'));

        if (isset($container->privates['App\\Validator\\Constraints\\TimesheetBudgetUsedValidator'])) {
            return $container->privates['App\\Validator\\Constraints\\TimesheetBudgetUsedValidator'];
        }
        $c = ($container->privates['App\\Activity\\ActivityStatisticService'] ?? $container->load('getActivityStatisticServiceService'));

        if (isset($container->privates['App\\Validator\\Constraints\\TimesheetBudgetUsedValidator'])) {
            return $container->privates['App\\Validator\\Constraints\\TimesheetBudgetUsedValidator'];
        }
        $d = ($container->services['jms_serializer.authorization_checker'] ?? self::getJmsSerializer_AuthorizationCheckerService($container));

        if (isset($container->privates['App\\Validator\\Constraints\\TimesheetBudgetUsedValidator'])) {
            return $container->privates['App\\Validator\\Constraints\\TimesheetBudgetUsedValidator'];
        }

        return $container->privates['App\\Validator\\Constraints\\TimesheetBudgetUsedValidator'] = new \App\Validator\Constraints\TimesheetBudgetUsedValidator(($container->privates['App\\Configuration\\SystemConfiguration'] ?? self::getSystemConfigurationService($container)), $a, $b, $c, ($container->privates['App\\Repository\\TimesheetRepository'] ?? $container->load('getTimesheetRepositoryService')), ($container->privates['App\\Timesheet\\RateService'] ?? $container->load('getRateServiceService')), $d, ($container->privates['App\\Configuration\\LocaleService'] ?? self::getLocaleServiceService($container)));
    }
}
