<?php

namespace ContainerMzr50d6;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getTimesheetServiceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Timesheet\TimesheetService' shared autowired service.
     *
     * @return \App\Timesheet\TimesheetService
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Timesheet'.\DIRECTORY_SEPARATOR.'TimesheetService.php';

        return $container->privates['App\\Timesheet\\TimesheetService'] = new \App\Timesheet\TimesheetService(($container->privates['App\\Configuration\\SystemConfiguration'] ?? self::getSystemConfigurationService($container)), ($container->privates['App\\Repository\\TimesheetRepository'] ?? $container->load('getTimesheetRepositoryService')), ($container->privates['App\\Timesheet\\TrackingModeService'] ?? $container->load('getTrackingModeServiceService')), ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container)), ($container->services['jms_serializer.authorization_checker'] ?? self::getJmsSerializer_AuthorizationCheckerService($container)), ($container->privates['debug.validator'] ?? self::getDebug_ValidatorService($container)));
    }
}
