<?php

namespace ContainerHQVrSX0;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getTimesheetSubscriberService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Doctrine\TimesheetSubscriber' shared autowired service.
     *
     * @return \App\Doctrine\TimesheetSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'event-manager'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EventSubscriber.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Doctrine'.\DIRECTORY_SEPARATOR.'DataSubscriberInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Doctrine'.\DIRECTORY_SEPARATOR.'TimesheetSubscriber.php';

        return $container->privates['App\\Doctrine\\TimesheetSubscriber'] = new \App\Doctrine\TimesheetSubscriber(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Timesheet\\Calculator\\BillableCalculator'] ??= new \App\Timesheet\Calculator\BillableCalculator());
            yield 1 => ($container->privates['App\\Timesheet\\Calculator\\DurationCalculator'] ?? $container->load('getDurationCalculatorService'));
            yield 2 => ($container->privates['App\\Timesheet\\Calculator\\RateCalculator'] ?? $container->load('getRateCalculatorService'));
            yield 3 => ($container->privates['App\\Timesheet\\Calculator\\RateResetCalculator'] ??= new \App\Timesheet\Calculator\RateResetCalculator());
        }, 4));
    }
}
