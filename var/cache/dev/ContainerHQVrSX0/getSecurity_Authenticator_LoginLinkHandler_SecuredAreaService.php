<?php

namespace ContainerHQVrSX0;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Authenticator_LoginLinkHandler_SecuredAreaService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'security.authenticator.login_link_handler.secured_area' shared service.
     *
     * @return \Symfony\Component\Security\Http\LoginLink\LoginLinkHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-http'.\DIRECTORY_SEPARATOR.'LoginLink'.\DIRECTORY_SEPARATOR.'LoginLinkHandlerInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-http'.\DIRECTORY_SEPARATOR.'LoginLink'.\DIRECTORY_SEPARATOR.'LoginLinkHandler.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core'.\DIRECTORY_SEPARATOR.'Signature'.\DIRECTORY_SEPARATOR.'SignatureHasher.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core'.\DIRECTORY_SEPARATOR.'Signature'.\DIRECTORY_SEPARATOR.'ExpiredSignatureStorage.php';

        return $container->privates['security.authenticator.login_link_handler.secured_area'] = new \Symfony\Component\Security\Http\LoginLink\LoginLinkHandler(($container->services['router'] ?? self::getRouterService($container)), ($container->privates['security.user.provider.concrete.chain_provider'] ?? $container->load('getSecurity_User_Provider_Concrete_ChainProviderService')), new \Symfony\Component\Security\Core\Signature\SignatureHasher(($container->privates['property_accessor'] ?? self::getPropertyAccessorService($container)), ['id'], $container->getEnv('APP_SECRET'), new \Symfony\Component\Security\Core\Signature\ExpiredSignatureStorage(($container->privates['security.authenticator.cache.expired_links'] ?? self::getSecurity_Authenticator_Cache_ExpiredLinksService($container)), 900), 3), ['route_name' => 'link_login_check', 'lifetime' => 900]);
    }
}
