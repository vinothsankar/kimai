<?php

namespace ContainerHQVrSX0;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getServiceExportService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Export\ServiceExport' shared autowired service.
     *
     * @return \App\Export\ServiceExport
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Export'.\DIRECTORY_SEPARATOR.'ServiceExport.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Export'.\DIRECTORY_SEPARATOR.'Renderer'.\DIRECTORY_SEPARATOR.'HtmlRendererFactory.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Export'.\DIRECTORY_SEPARATOR.'Renderer'.\DIRECTORY_SEPARATOR.'PdfRendererFactory.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Export'.\DIRECTORY_SEPARATOR.'ExportRendererInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Export'.\DIRECTORY_SEPARATOR.'RendererInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Export'.\DIRECTORY_SEPARATOR.'TimesheetExportInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Export'.\DIRECTORY_SEPARATOR.'Base'.\DIRECTORY_SEPARATOR.'ExportTrait.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Export'.\DIRECTORY_SEPARATOR.'Base'.\DIRECTORY_SEPARATOR.'CsvRenderer.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Export'.\DIRECTORY_SEPARATOR.'Base'.\DIRECTORY_SEPARATOR.'SpreadsheetRenderer.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Export'.\DIRECTORY_SEPARATOR.'Base'.\DIRECTORY_SEPARATOR.'XlsxRenderer.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Export'.\DIRECTORY_SEPARATOR.'Base'.\DIRECTORY_SEPARATOR.'DispositionInlineInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Export'.\DIRECTORY_SEPARATOR.'Base'.\DIRECTORY_SEPARATOR.'RendererTrait.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Pdf'.\DIRECTORY_SEPARATOR.'PdfRendererTrait.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Export'.\DIRECTORY_SEPARATOR.'Base'.\DIRECTORY_SEPARATOR.'PDFRenderer.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Export'.\DIRECTORY_SEPARATOR.'Base'.\DIRECTORY_SEPARATOR.'HtmlRenderer.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Export'.\DIRECTORY_SEPARATOR.'Timesheet'.\DIRECTORY_SEPARATOR.'HtmlRenderer.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Export'.\DIRECTORY_SEPARATOR.'ExportRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Export'.\DIRECTORY_SEPARATOR.'TimesheetExportRepository.php';

        $a = ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container));

        if (isset($container->privates['App\\Export\\ServiceExport'])) {
            return $container->privates['App\\Export\\ServiceExport'];
        }
        $b = ($container->privates['twig'] ?? self::getTwigService($container));

        if (isset($container->privates['App\\Export\\ServiceExport'])) {
            return $container->privates['App\\Export\\ServiceExport'];
        }
        $c = ($container->privates['App\\Project\\ProjectStatisticService'] ?? $container->load('getProjectStatisticServiceService'));

        if (isset($container->privates['App\\Export\\ServiceExport'])) {
            return $container->privates['App\\Export\\ServiceExport'];
        }
        $d = ($container->privates['App\\Activity\\ActivityStatisticService'] ?? $container->load('getActivityStatisticServiceService'));

        if (isset($container->privates['App\\Export\\ServiceExport'])) {
            return $container->privates['App\\Export\\ServiceExport'];
        }
        $e = ($container->privates['App\\Pdf\\MPdfConverter'] ?? $container->load('getMPdfConverterService'));

        $container->privates['App\\Export\\ServiceExport'] = $instance = new \App\Export\ServiceExport($a, new \App\Export\Renderer\HtmlRendererFactory($b, $a, $c, $d), new \App\Export\Renderer\PdfRendererFactory($b, $e, $c));

        $f = new \App\Export\Base\SpreadsheetRenderer(($container->services['translator'] ?? self::getTranslatorService($container)), $a, ($container->privates['security.helper'] ?? $container->load('getSecurity_HelperService')));

        $g = new \App\Export\Base\CsvRenderer($f);
        $h = new \App\Export\Base\XlsxRenderer($f);

        $instance->addRenderer($g);
        $instance->addRenderer($h);
        $instance->addTimesheetExporter($g);
        $instance->addTimesheetExporter(new \App\Export\Base\PDFRenderer($b, $e, $c));
        $instance->addTimesheetExporter($h);
        $instance->addTimesheetExporter(new \App\Export\Timesheet\HtmlRenderer($b, $a, $c, $d));
        $instance->addExportRepository(new \App\Export\TimesheetExportRepository(($container->privates['App\\Repository\\TimesheetRepository'] ?? $container->load('getTimesheetRepositoryService'))));
        $instance->addDirectory((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'templates'.\DIRECTORY_SEPARATOR.'export'.\DIRECTORY_SEPARATOR.'renderer'));

        return $instance;
    }
}
