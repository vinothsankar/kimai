<?php

namespace ContainerHQVrSX0;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Container;
use Symfony\Component\DependencyInjection\Exception\LogicException;
use Symfony\Component\DependencyInjection\Exception\ParameterNotFoundException;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;
use Symfony\Component\DependencyInjection\ParameterBag\FrozenParameterBag;
use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class App_KernelDevDebugContainer extends Container
{
    protected $targetDir;
    protected $parameters = [];
    protected \Closure $getService;

    public function __construct(private array $buildParameters = [], protected string $containerDir = __DIR__)
    {
        $this->targetDir = \dirname($containerDir);
        $this->parameters = $this->getDefaultParameters();

        $this->services = $this->privates = [];
        $this->syntheticIds = [
            'kernel' => true,
        ];
        $this->methodMap = [
            '.container.private.profiler' => 'get_Container_Private_ProfilerService',
            '.virtual_request_stack' => 'get_VirtualRequestStackService',
            'cache.app' => 'getCache_AppService',
            'cache.rate_limiter' => 'getCache_RateLimiterService',
            'cache.security_is_granted_attribute_expression_language' => 'getCache_SecurityIsGrantedAttributeExpressionLanguageService',
            'cache.system' => 'getCache_SystemService',
            'cache.validator_expression_language' => 'getCache_ValidatorExpressionLanguageService',
            'data_collector.cache' => 'getDataCollector_CacheService',
            'data_collector.dump' => 'getDataCollector_DumpService',
            'debug.stopwatch' => 'getDebug_StopwatchService',
            'doctrine' => 'getDoctrineService',
            'doctrine.dbal.default_connection' => 'getDoctrine_Dbal_DefaultConnectionService',
            'doctrine.orm.default_entity_manager' => 'getDoctrine_Orm_DefaultEntityManagerService',
            'event_dispatcher' => 'getEventDispatcherService',
            'fos_rest.view_handler' => 'getFosRest_ViewHandlerService',
            'http_kernel' => 'getHttpKernelService',
            'jms_serializer' => 'getJmsSerializerService',
            'jms_serializer.authorization_checker' => 'getJmsSerializer_AuthorizationCheckerService',
            'jms_serializer.deserialization_context_factory' => 'getJmsSerializer_DeserializationContextFactoryService',
            'jms_serializer.serialization_context_factory' => 'getJmsSerializer_SerializationContextFactoryService',
            'request_stack' => 'getRequestStackService',
            'router' => 'getRouterService',
            'translator' => 'getTranslatorService',
            'var_dumper.cloner' => 'getVarDumper_ClonerService',
            'profiler' => 'getProfilerService',
        ];
        $this->fileMap = [
            'App\\API\\ActionsController' => 'getActionsControllerService',
            'App\\API\\ActivityController' => 'getActivityControllerService',
            'App\\API\\ConfigurationController' => 'getConfigurationControllerService',
            'App\\API\\CustomerController' => 'getCustomerControllerService',
            'App\\API\\InvoiceController' => 'getInvoiceControllerService',
            'App\\API\\ProjectController' => 'getProjectControllerService',
            'App\\API\\StatusController' => 'getStatusControllerService',
            'App\\API\\TagController' => 'getTagControllerService',
            'App\\API\\TeamController' => 'getTeamControllerService',
            'App\\API\\TimesheetController' => 'getTimesheetControllerService',
            'App\\API\\UserController' => 'getUserControllerService',
            'App\\Controller\\AboutController' => 'getAboutControllerService',
            'App\\Controller\\ActivityController' => 'getActivityController2Service',
            'App\\Controller\\Auth\\SamlController' => 'getSamlControllerService',
            'App\\Controller\\BookmarkController' => 'getBookmarkControllerService',
            'App\\Controller\\CalendarController' => 'getCalendarControllerService',
            'App\\Controller\\ContractController' => 'getContractControllerService',
            'App\\Controller\\CustomerController' => 'getCustomerController2Service',
            'App\\Controller\\DashboardController' => 'getDashboardControllerService',
            'App\\Controller\\DoctorController' => 'getDoctorControllerService',
            'App\\Controller\\ExportController' => 'getExportControllerService',
            'App\\Controller\\FavoriteController' => 'getFavoriteControllerService',
            'App\\Controller\\HelpController' => 'getHelpControllerService',
            'App\\Controller\\HomepageController' => 'getHomepageControllerService',
            'App\\Controller\\InvoiceController' => 'getInvoiceController2Service',
            'App\\Controller\\PermissionController' => 'getPermissionControllerService',
            'App\\Controller\\PluginController' => 'getPluginControllerService',
            'App\\Controller\\ProfileController' => 'getProfileControllerService',
            'App\\Controller\\ProjectController' => 'getProjectController2Service',
            'App\\Controller\\QuickEntryController' => 'getQuickEntryControllerService',
            'App\\Controller\\ReportingController' => 'getReportingControllerService',
            'App\\Controller\\Reporting\\CustomerMonthlyProjectsController' => 'getCustomerMonthlyProjectsControllerService',
            'App\\Controller\\Reporting\\ProjectDateRangeController' => 'getProjectDateRangeControllerService',
            'App\\Controller\\Reporting\\ProjectDetailsController' => 'getProjectDetailsControllerService',
            'App\\Controller\\Reporting\\ProjectInactiveController' => 'getProjectInactiveControllerService',
            'App\\Controller\\Reporting\\ProjectViewController' => 'getProjectViewControllerService',
            'App\\Controller\\Reporting\\ReportUsersMonthController' => 'getReportUsersMonthControllerService',
            'App\\Controller\\Reporting\\ReportUsersWeekController' => 'getReportUsersWeekControllerService',
            'App\\Controller\\Reporting\\ReportUsersYearController' => 'getReportUsersYearControllerService',
            'App\\Controller\\Reporting\\UserMonthController' => 'getUserMonthControllerService',
            'App\\Controller\\Reporting\\UserWeekController' => 'getUserWeekControllerService',
            'App\\Controller\\Reporting\\UserYearController' => 'getUserYearControllerService',
            'App\\Controller\\Security\\LoginLinkController' => 'getLoginLinkControllerService',
            'App\\Controller\\Security\\PasswordResetController' => 'getPasswordResetControllerService',
            'App\\Controller\\Security\\SecurityController' => 'getSecurityControllerService',
            'App\\Controller\\Security\\SelfRegistrationController' => 'getSelfRegistrationControllerService',
            'App\\Controller\\SystemConfigurationController' => 'getSystemConfigurationControllerService',
            'App\\Controller\\TagController' => 'getTagController2Service',
            'App\\Controller\\TeamController' => 'getTeamController2Service',
            'App\\Controller\\TimesheetController' => 'getTimesheetController2Service',
            'App\\Controller\\TimesheetTeamController' => 'getTimesheetTeamControllerService',
            'App\\Controller\\UserController' => 'getUserController2Service',
            'App\\Controller\\WidgetController' => 'getWidgetControllerService',
            'App\\Controller\\WizardController' => 'getWizardControllerService',
            'Doctrine\\Bundle\\DoctrineBundle\\Controller\\ProfilerController' => 'getProfilerControllerService',
            'Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController' => 'getRedirectControllerService',
            'Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController' => 'getTemplateControllerService',
            'cache.app_clearer' => 'getCache_AppClearerService',
            'cache.global_clearer' => 'getCache_GlobalClearerService',
            'cache.system_clearer' => 'getCache_SystemClearerService',
            'cache_warmer' => 'getCacheWarmerService',
            'console.command_loader' => 'getConsole_CommandLoaderService',
            'container.env_var_processors_locator' => 'getContainer_EnvVarProcessorsLocatorService',
            'container.get_routing_condition_service' => 'getContainer_GetRoutingConditionServiceService',
            'debug.error_handler_configurator' => 'getDebug_ErrorHandlerConfiguratorService',
            'error_controller' => 'getErrorControllerService',
            'monolog.logger.deprecation' => 'getMonolog_Logger_DeprecationService',
            'nelmio_api_doc.command.dump' => 'getNelmioApiDoc_Command_DumpService',
            'nelmio_api_doc.controller.redocly' => 'getNelmioApiDoc_Controller_RedoclyService',
            'nelmio_api_doc.controller.swagger_json' => 'getNelmioApiDoc_Controller_SwaggerJsonService',
            'nelmio_api_doc.controller.swagger_ui' => 'getNelmioApiDoc_Controller_SwaggerUiService',
            'nelmio_api_doc.controller.swagger_yaml' => 'getNelmioApiDoc_Controller_SwaggerYamlService',
            'nelmio_api_doc.generator.default' => 'getNelmioApiDoc_Generator_DefaultService',
            'nelmio_api_doc.render_docs' => 'getNelmioApiDoc_RenderDocsService',
            'routing.loader' => 'getRouting_LoaderService',
            'scheb_two_factor.firewall_context' => 'getSchebTwoFactor_FirewallContextService',
            'scheb_two_factor.form_controller' => 'getSchebTwoFactor_FormControllerService',
            'scheb_two_factor.security.totp_authenticator' => 'getSchebTwoFactor_Security_TotpAuthenticatorService',
            'scheb_two_factor.security.totp_factory' => 'getSchebTwoFactor_Security_TotpFactoryService',
            'services_resetter' => 'getServicesResetterService',
            'web_profiler.controller.exception_panel' => 'getWebProfiler_Controller_ExceptionPanelService',
            'web_profiler.controller.profiler' => 'getWebProfiler_Controller_ProfilerService',
            'web_profiler.controller.router' => 'getWebProfiler_Controller_RouterService',
        ];
        $this->aliases = [
            'database_connection' => 'doctrine.dbal.default_connection',
            'doctrine.orm.entity_manager' => 'doctrine.orm.default_entity_manager',
            'jms_serializer.instances.default' => 'jms_serializer',
            'nelmio_api_doc.controller.swagger' => 'nelmio_api_doc.controller.swagger_json',
            'nelmio_api_doc.generator' => 'nelmio_api_doc.generator.default',
        ];

        $this->privates['service_container'] = static function ($container) {
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'HttpKernelInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'KernelInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'RebootableInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'TerminableInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'Kernel.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'framework-bundle'.\DIRECTORY_SEPARATOR.'Kernel'.\DIRECTORY_SEPARATOR.'MicroKernelTrait.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Kernel.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Configuration'.\DIRECTORY_SEPARATOR.'ConfigLoaderInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Configuration'.\DIRECTORY_SEPARATOR.'ConfigurationService.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'persistence'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Persistence'.\DIRECTORY_SEPARATOR.'ObjectRepository.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'collections'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Selectable.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'orm'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EntityRepository.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Repository'.\DIRECTORY_SEPARATOR.'ConfigurationRepository.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Configuration'.\DIRECTORY_SEPARATOR.'LocaleService.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Configuration'.\DIRECTORY_SEPARATOR.'SystemConfiguration.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'event-dispatcher'.\DIRECTORY_SEPARATOR.'EventSubscriberInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EventSubscriber'.\DIRECTORY_SEPARATOR.'RedirectToLocaleSubscriber.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EventSubscriber'.\DIRECTORY_SEPARATOR.'ThemeOptionsSubscriber.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EventSubscriber'.\DIRECTORY_SEPARATOR.'UserEnvironmentSubscriber.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EventSubscriber'.\DIRECTORY_SEPARATOR.'UserProfileSubscriber.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EventSubscriber'.\DIRECTORY_SEPARATOR.'WizardSubscriber.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Logger'.\DIRECTORY_SEPARATOR.'LogProcessor.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Repository'.\DIRECTORY_SEPARATOR.'BookmarkRepository.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'ExtensionInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'AbstractExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'translation-contracts'.\DIRECTORY_SEPARATOR.'LocaleAwareInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Twig'.\DIRECTORY_SEPARATOR.'LocaleFormatExtensions.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Utils'.\DIRECTORY_SEPARATOR.'ProfileManager.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'ControllerMetadata'.\DIRECTORY_SEPARATOR.'ArgumentMetadataFactoryInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'ControllerMetadata'.\DIRECTORY_SEPARATOR.'ArgumentMetadataFactory.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'ResponseListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'LocaleListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'ValidateRequestListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'DisallowRobotsIndexingListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'ErrorListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'CacheAttributeListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'dependency-injection'.\DIRECTORY_SEPARATOR.'ParameterBag'.\DIRECTORY_SEPARATOR.'ParameterBagInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'dependency-injection'.\DIRECTORY_SEPARATOR.'ParameterBag'.\DIRECTORY_SEPARATOR.'ParameterBag.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'dependency-injection'.\DIRECTORY_SEPARATOR.'ParameterBag'.\DIRECTORY_SEPARATOR.'FrozenParameterBag.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'psr'.\DIRECTORY_SEPARATOR.'container'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'ContainerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'dependency-injection'.\DIRECTORY_SEPARATOR.'ParameterBag'.\DIRECTORY_SEPARATOR.'ContainerBagInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'dependency-injection'.\DIRECTORY_SEPARATOR.'ParameterBag'.\DIRECTORY_SEPARATOR.'ContainerBag.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'runtime'.\DIRECTORY_SEPARATOR.'RunnerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'runtime'.\DIRECTORY_SEPARATOR.'Runner'.\DIRECTORY_SEPARATOR.'Symfony'.\DIRECTORY_SEPARATOR.'HttpKernelRunner.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'runtime'.\DIRECTORY_SEPARATOR.'Runner'.\DIRECTORY_SEPARATOR.'Symfony'.\DIRECTORY_SEPARATOR.'ResponseRunner.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'runtime'.\DIRECTORY_SEPARATOR.'RuntimeInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'runtime'.\DIRECTORY_SEPARATOR.'GenericRuntime.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'runtime'.\DIRECTORY_SEPARATOR.'SymfonyRuntime.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'HttpKernel.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'ControllerResolverInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'TraceableControllerResolver.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'ControllerResolver.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'ContainerControllerResolver.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'framework-bundle'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'ControllerResolver.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'ArgumentResolverInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'TraceableArgumentResolver.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'ArgumentResolver.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'service-contracts'.\DIRECTORY_SEPARATOR.'ServiceProviderInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'service-contracts'.\DIRECTORY_SEPARATOR.'ServiceLocatorTrait.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'dependency-injection'.\DIRECTORY_SEPARATOR.'ServiceLocator.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-foundation'.\DIRECTORY_SEPARATOR.'RequestStack.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'config'.\DIRECTORY_SEPARATOR.'ConfigCacheFactoryInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'config'.\DIRECTORY_SEPARATOR.'ResourceCheckerConfigCacheFactory.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'LocaleAwareListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'psr'.\DIRECTORY_SEPARATOR.'cache'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'CacheItemPoolInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'cache'.\DIRECTORY_SEPARATOR.'Adapter'.\DIRECTORY_SEPARATOR.'AdapterInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'cache-contracts'.\DIRECTORY_SEPARATOR.'CacheInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'cache'.\DIRECTORY_SEPARATOR.'PruneableInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'service-contracts'.\DIRECTORY_SEPARATOR.'ResetInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'cache'.\DIRECTORY_SEPARATOR.'ResettableInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'cache'.\DIRECTORY_SEPARATOR.'Adapter'.\DIRECTORY_SEPARATOR.'TraceableAdapter.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'psr'.\DIRECTORY_SEPARATOR.'log'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'LoggerAwareInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'psr'.\DIRECTORY_SEPARATOR.'log'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'LoggerAwareTrait.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'cache'.\DIRECTORY_SEPARATOR.'Traits'.\DIRECTORY_SEPARATOR.'AbstractAdapterTrait.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'cache-contracts'.\DIRECTORY_SEPARATOR.'CacheTrait.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'cache'.\DIRECTORY_SEPARATOR.'Traits'.\DIRECTORY_SEPARATOR.'ContractsTrait.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'cache'.\DIRECTORY_SEPARATOR.'Adapter'.\DIRECTORY_SEPARATOR.'AbstractAdapter.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'cache'.\DIRECTORY_SEPARATOR.'Traits'.\DIRECTORY_SEPARATOR.'FilesystemCommonTrait.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'cache'.\DIRECTORY_SEPARATOR.'Traits'.\DIRECTORY_SEPARATOR.'FilesystemTrait.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'cache'.\DIRECTORY_SEPARATOR.'Adapter'.\DIRECTORY_SEPARATOR.'FilesystemAdapter.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'cache'.\DIRECTORY_SEPARATOR.'Marshaller'.\DIRECTORY_SEPARATOR.'MarshallerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'cache'.\DIRECTORY_SEPARATOR.'Marshaller'.\DIRECTORY_SEPARATOR.'DefaultMarshaller.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'asset'.\DIRECTORY_SEPARATOR.'Packages.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'asset'.\DIRECTORY_SEPARATOR.'PackageInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'asset'.\DIRECTORY_SEPARATOR.'Package.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'asset'.\DIRECTORY_SEPARATOR.'PathPackage.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'asset'.\DIRECTORY_SEPARATOR.'Context'.\DIRECTORY_SEPARATOR.'ContextInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'asset'.\DIRECTORY_SEPARATOR.'Context'.\DIRECTORY_SEPARATOR.'RequestStackContext.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'asset'.\DIRECTORY_SEPARATOR.'VersionStrategy'.\DIRECTORY_SEPARATOR.'VersionStrategyInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'asset'.\DIRECTORY_SEPARATOR.'VersionStrategy'.\DIRECTORY_SEPARATOR.'JsonManifestVersionStrategy.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-client-contracts'.\DIRECTORY_SEPARATOR.'HttpClientInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-client'.\DIRECTORY_SEPARATOR.'HttpClient.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'psr'.\DIRECTORY_SEPARATOR.'log'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'LoggerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Monolog'.\DIRECTORY_SEPARATOR.'ResettableInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Monolog'.\DIRECTORY_SEPARATOR.'Logger.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'mailer'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'MessageLoggerListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'translation-contracts'.\DIRECTORY_SEPARATOR.'TranslatorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'translation'.\DIRECTORY_SEPARATOR.'TranslatorBagInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'translation'.\DIRECTORY_SEPARATOR.'Translator.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'CacheWarmer'.\DIRECTORY_SEPARATOR.'WarmableInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'framework-bundle'.\DIRECTORY_SEPARATOR.'Translation'.\DIRECTORY_SEPARATOR.'Translator.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'translation'.\DIRECTORY_SEPARATOR.'Formatter'.\DIRECTORY_SEPARATOR.'MessageFormatterInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'translation'.\DIRECTORY_SEPARATOR.'Formatter'.\DIRECTORY_SEPARATOR.'IntlFormatterInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'translation'.\DIRECTORY_SEPARATOR.'Formatter'.\DIRECTORY_SEPARATOR.'MessageFormatter.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'translation-contracts'.\DIRECTORY_SEPARATOR.'TranslatorTrait.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'translation'.\DIRECTORY_SEPARATOR.'IdentityTranslator.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'translation'.\DIRECTORY_SEPARATOR.'LocaleSwitcher.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'DebugHandlersListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'error-handler'.\DIRECTORY_SEPARATOR.'ErrorRenderer'.\DIRECTORY_SEPARATOR.'FileLinkFormatter.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'stopwatch'.\DIRECTORY_SEPARATOR.'Stopwatch.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'Log'.\DIRECTORY_SEPARATOR.'DebugLoggerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'monolog-bridge'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'CompatibilityProcessor.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'monolog-bridge'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'DebugProcessor.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'Log'.\DIRECTORY_SEPARATOR.'DebugLoggerConfigurator.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'routing'.\DIRECTORY_SEPARATOR.'RequestContext.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'expression-language'.\DIRECTORY_SEPARATOR.'ExpressionFunctionProviderInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'routing'.\DIRECTORY_SEPARATOR.'Matcher'.\DIRECTORY_SEPARATOR.'ExpressionLanguageProvider.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'RouterListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'property-access'.\DIRECTORY_SEPARATOR.'PropertyAccessorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'property-access'.\DIRECTORY_SEPARATOR.'PropertyAccessor.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'cache'.\DIRECTORY_SEPARATOR.'Adapter'.\DIRECTORY_SEPARATOR.'ArrayAdapter.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'SerializerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'NormalizerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'ContextAwareNormalizerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'DenormalizerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'ContextAwareDenormalizerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Encoder'.\DIRECTORY_SEPARATOR.'EncoderInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Encoder'.\DIRECTORY_SEPARATOR.'ContextAwareEncoderInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Encoder'.\DIRECTORY_SEPARATOR.'DecoderInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Encoder'.\DIRECTORY_SEPARATOR.'ContextAwareDecoderInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Serializer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'SerializerAwareInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'CacheableSupportsMethodInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'SerializerAwareTrait.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'UnwrappingDenormalizer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'Serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'FormErrorNormalizer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'Serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'FlattenExceptionNormalizer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'ProblemNormalizer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'UidNormalizer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'DateTimeNormalizer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'ConstraintViolationListNormalizer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'MimeMessageNormalizer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'ObjectToPopulateTrait.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'AbstractNormalizer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'AbstractObjectNormalizer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'PropertyNormalizer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'ClassDiscriminatorResolverInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'ClassDiscriminatorFromClassMetadata.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'DateTimeZoneNormalizer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'DateIntervalNormalizer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'FormErrorNormalizer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'BackedEnumNormalizer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'DataUriNormalizer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'TranslatableNormalizer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'JsonSerializableNormalizer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'DenormalizerAwareInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'DenormalizerAwareTrait.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'ArrayDenormalizer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'ObjectNormalizer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Encoder'.\DIRECTORY_SEPARATOR.'NormalizationAwareInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Encoder'.\DIRECTORY_SEPARATOR.'XmlEncoder.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Encoder'.\DIRECTORY_SEPARATOR.'JsonEncoder.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Encoder'.\DIRECTORY_SEPARATOR.'YamlEncoder.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Encoder'.\DIRECTORY_SEPARATOR.'CsvEncoder.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'ClassMetadataFactoryInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'ClassResolverTrait.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'ClassMetadataFactory.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'Loader'.\DIRECTORY_SEPARATOR.'LoaderInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'Loader'.\DIRECTORY_SEPARATOR.'LoaderChain.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'Loader'.\DIRECTORY_SEPARATOR.'AttributeLoader.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'NameConverter'.\DIRECTORY_SEPARATOR.'NameConverterInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'NameConverter'.\DIRECTORY_SEPARATOR.'AdvancedNameConverterInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'NameConverter'.\DIRECTORY_SEPARATOR.'MetadataAwareNameConverter.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'property-info'.\DIRECTORY_SEPARATOR.'PropertyTypeExtractorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'property-info'.\DIRECTORY_SEPARATOR.'PropertyDescriptionExtractorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'property-info'.\DIRECTORY_SEPARATOR.'PropertyAccessExtractorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'property-info'.\DIRECTORY_SEPARATOR.'PropertyListExtractorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'property-info'.\DIRECTORY_SEPARATOR.'PropertyInfoExtractorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'property-info'.\DIRECTORY_SEPARATOR.'PropertyInitializableExtractorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'property-info'.\DIRECTORY_SEPARATOR.'PropertyInfoExtractor.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'property-info'.\DIRECTORY_SEPARATOR.'PropertyReadInfoExtractorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'property-info'.\DIRECTORY_SEPARATOR.'PropertyWriteInfoExtractorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'property-info'.\DIRECTORY_SEPARATOR.'Extractor'.\DIRECTORY_SEPARATOR.'ConstructorArgumentTypeExtractorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'property-info'.\DIRECTORY_SEPARATOR.'Extractor'.\DIRECTORY_SEPARATOR.'ReflectionExtractor.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'AbstractSessionListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'SessionListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator'.\DIRECTORY_SEPARATOR.'ValidatorBuilder.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator'.\DIRECTORY_SEPARATOR.'Validation.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator'.\DIRECTORY_SEPARATOR.'ConstraintValidatorFactoryInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator'.\DIRECTORY_SEPARATOR.'ContainerConstraintValidatorFactory.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator'.\DIRECTORY_SEPARATOR.'ObjectInitializerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'doctrine-bridge'.\DIRECTORY_SEPARATOR.'Validator'.\DIRECTORY_SEPARATOR.'DoctrineInitializer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'Loader'.\DIRECTORY_SEPARATOR.'LoaderInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'Loader'.\DIRECTORY_SEPARATOR.'AutoMappingTrait.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'Loader'.\DIRECTORY_SEPARATOR.'PropertyInfoLoader.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'doctrine-bridge'.\DIRECTORY_SEPARATOR.'Validator'.\DIRECTORY_SEPARATOR.'DoctrineLoader.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'ProfilerListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'Debug'.\DIRECTORY_SEPARATOR.'VirtualRequestStack.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'DataCollectorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'DataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'LateDataCollectorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'RequestDataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'RouterDataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'framework-bundle'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'RouterDataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'cache'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'CacheDataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'FormDataCollectorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'FormDataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'FormDataExtractorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'FormDataExtractor.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'MetadataFactoryInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator'.\DIRECTORY_SEPARATOR.'Validator'.\DIRECTORY_SEPARATOR.'ValidatorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator'.\DIRECTORY_SEPARATOR.'Validator'.\DIRECTORY_SEPARATOR.'TraceableValidator.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'mime'.\DIRECTORY_SEPARATOR.'MimeTypeGuesserInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'mime'.\DIRECTORY_SEPARATOR.'MimeTypesInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'mime'.\DIRECTORY_SEPARATOR.'MimeTypes.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'persistence'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Persistence'.\DIRECTORY_SEPARATOR.'ConnectionRegistry.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'persistence'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Persistence'.\DIRECTORY_SEPARATOR.'ManagerRegistry.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'persistence'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Persistence'.\DIRECTORY_SEPARATOR.'AbstractManagerRegistry.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'doctrine-bridge'.\DIRECTORY_SEPARATOR.'ManagerRegistry.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Registry.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'event-manager'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EventManager.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'doctrine-bridge'.\DIRECTORY_SEPARATOR.'ContainerAwareEventManager.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'dbal'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Connection.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'ConnectionFactory.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'dbal'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Configuration.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'dbal'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Schema'.\DIRECTORY_SEPARATOR.'SchemaManagerFactory.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'dbal'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Schema'.\DIRECTORY_SEPARATOR.'DefaultSchemaManagerFactory.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'dbal'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Driver'.\DIRECTORY_SEPARATOR.'Middleware.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'dbal'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Logging'.\DIRECTORY_SEPARATOR.'Middleware.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Middleware'.\DIRECTORY_SEPARATOR.'ConnectionNameAwareInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Middleware'.\DIRECTORY_SEPARATOR.'DebugMiddleware.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'dbal'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Tools'.\DIRECTORY_SEPARATOR.'DsnParser.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'doctrine-bridge'.\DIRECTORY_SEPARATOR.'Middleware'.\DIRECTORY_SEPARATOR.'Debug'.\DIRECTORY_SEPARATOR.'DebugDataHolder.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Middleware'.\DIRECTORY_SEPARATOR.'BacktraceDebugDataHolder.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Monolog'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'HandlerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Monolog'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'Handler.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Monolog'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'ProcessableHandlerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Monolog'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'FormattableHandlerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Monolog'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'ProcessableHandlerTrait.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Monolog'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'FingersCrossedHandler.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Monolog'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'AbstractHandler.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Monolog'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'FormattableHandlerTrait.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Monolog'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'AbstractProcessingHandler.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Monolog'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'StreamHandler.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Monolog'.\DIRECTORY_SEPARATOR.'Formatter'.\DIRECTORY_SEPARATOR.'FormatterInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Monolog'.\DIRECTORY_SEPARATOR.'Formatter'.\DIRECTORY_SEPARATOR.'NormalizerFormatter.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Monolog'.\DIRECTORY_SEPARATOR.'Formatter'.\DIRECTORY_SEPARATOR.'LineFormatter.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Monolog'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'FingersCrossed'.\DIRECTORY_SEPARATOR.'ActivationStrategyInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'monolog-bridge'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'FingersCrossed'.\DIRECTORY_SEPARATOR.'HttpCodeActivationStrategy.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Monolog'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'FingersCrossed'.\DIRECTORY_SEPARATOR.'ErrorLevelActivationStrategy.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Monolog'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'ProcessorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Monolog'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'PsrLogMessageProcessor.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'monolog-bridge'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'CompatibilityHandler.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'monolog-bridge'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'ConsoleHandler.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'monolog-bridge'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'CompatibilityProcessingHandler.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'web-profiler-bundle'.\DIRECTORY_SEPARATOR.'Csp'.\DIRECTORY_SEPARATOR.'ContentSecurityPolicyHandler.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'web-profiler-bundle'.\DIRECTORY_SEPARATOR.'Csp'.\DIRECTORY_SEPARATOR.'NonceGenerator.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'web-profiler-bundle'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'WebDebugToolbarListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Cache'.\DIRECTORY_SEPARATOR.'CacheInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Cache'.\DIRECTORY_SEPARATOR.'RemovableCacheInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Cache'.\DIRECTORY_SEPARATOR.'FilesystemCache.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'CoreExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'EscaperExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'OptimizerExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'StagingExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'ExtensionSet.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Template.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'TemplateWrapper.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Environment.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Loader'.\DIRECTORY_SEPARATOR.'LoaderInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Loader'.\DIRECTORY_SEPARATOR.'FilesystemLoader.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bridge'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'CsrfExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'ProfilerExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bridge'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'ProfilerExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bridge'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'TranslationExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bridge'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'AssetExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bridge'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'CodeExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bridge'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'RoutingExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bridge'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'YamlExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bridge'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'StopwatchExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bridge'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'ExpressionExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bridge'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'HttpKernelExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bridge'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'HttpFoundationExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-foundation'.\DIRECTORY_SEPARATOR.'UrlHelper.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bridge'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'SerializerExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bridge'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'FormExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bridge'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'LogoutUrlExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bridge'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'SecurityExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-http'.\DIRECTORY_SEPARATOR.'Impersonate'.\DIRECTORY_SEPARATOR.'ImpersonateUrlGenerator.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bridge'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'DumpExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Twig'.\DIRECTORY_SEPARATOR.'Configuration.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Twig'.\DIRECTORY_SEPARATOR.'DatatableExtensions.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Twig'.\DIRECTORY_SEPARATOR.'Extensions.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Twig'.\DIRECTORY_SEPARATOR.'PaginationExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Twig'.\DIRECTORY_SEPARATOR.'RuntimeExtensions.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Twig'.\DIRECTORY_SEPARATOR.'DoctrineExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'web-profiler-bundle'.\DIRECTORY_SEPARATOR.'Twig'.\DIRECTORY_SEPARATOR.'WebProfilerExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'var-dumper'.\DIRECTORY_SEPARATOR.'Dumper'.\DIRECTORY_SEPARATOR.'DataDumperInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'var-dumper'.\DIRECTORY_SEPARATOR.'Cloner'.\DIRECTORY_SEPARATOR.'DumperInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'var-dumper'.\DIRECTORY_SEPARATOR.'Dumper'.\DIRECTORY_SEPARATOR.'AbstractDumper.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'var-dumper'.\DIRECTORY_SEPARATOR.'Dumper'.\DIRECTORY_SEPARATOR.'CliDumper.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'var-dumper'.\DIRECTORY_SEPARATOR.'Dumper'.\DIRECTORY_SEPARATOR.'HtmlDumper.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Twig'.\DIRECTORY_SEPARATOR.'SerializerBaseExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Twig'.\DIRECTORY_SEPARATOR.'SerializerRuntimeExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'api-doc-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Render'.\DIRECTORY_SEPARATOR.'Html'.\DIRECTORY_SEPARATOR.'GetNelmioAsset.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'webpack-encore-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Twig'.\DIRECTORY_SEPARATOR.'EntryFilesTwigExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'intl-extra'.\DIRECTORY_SEPARATOR.'IntlExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'cssinliner-extra'.\DIRECTORY_SEPARATOR.'CssInlinerExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'inky-extra'.\DIRECTORY_SEPARATOR.'InkyExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'string-extra'.\DIRECTORY_SEPARATOR.'StringExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Twig'.\DIRECTORY_SEPARATOR.'TablerExtension.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bridge'.\DIRECTORY_SEPARATOR.'AppVariable.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'RuntimeLoader'.\DIRECTORY_SEPARATOR.'RuntimeLoaderInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'RuntimeLoader'.\DIRECTORY_SEPARATOR.'ContainerRuntimeLoader.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'extra-bundle'.\DIRECTORY_SEPARATOR.'MissingExtensionSuggestor.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Twig'.\DIRECTORY_SEPARATOR.'Context.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bundle'.\DIRECTORY_SEPARATOR.'DependencyInjection'.\DIRECTORY_SEPARATOR.'Configurator'.\DIRECTORY_SEPARATOR.'EnvironmentConfigurator.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Profiler'.\DIRECTORY_SEPARATOR.'Profile.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core'.\DIRECTORY_SEPARATOR.'Authentication'.\DIRECTORY_SEPARATOR.'Token'.\DIRECTORY_SEPARATOR.'Storage'.\DIRECTORY_SEPARATOR.'TokenStorageInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'service-contracts'.\DIRECTORY_SEPARATOR.'ServiceSubscriberInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core'.\DIRECTORY_SEPARATOR.'Authentication'.\DIRECTORY_SEPARATOR.'Token'.\DIRECTORY_SEPARATOR.'Storage'.\DIRECTORY_SEPARATOR.'UsageTrackingTokenStorage.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core'.\DIRECTORY_SEPARATOR.'Authentication'.\DIRECTORY_SEPARATOR.'Token'.\DIRECTORY_SEPARATOR.'Storage'.\DIRECTORY_SEPARATOR.'TokenStorage.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core'.\DIRECTORY_SEPARATOR.'Role'.\DIRECTORY_SEPARATOR.'RoleHierarchyInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core'.\DIRECTORY_SEPARATOR.'Role'.\DIRECTORY_SEPARATOR.'RoleHierarchy.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-http'.\DIRECTORY_SEPARATOR.'FirewallMapInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-bundle'.\DIRECTORY_SEPARATOR.'Security'.\DIRECTORY_SEPARATOR.'FirewallMap.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-http'.\DIRECTORY_SEPARATOR.'Logout'.\DIRECTORY_SEPARATOR.'LogoutUrlGenerator.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-http'.\DIRECTORY_SEPARATOR.'HttpUtils.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-http'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'IsGrantedAttributeListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'expression-language'.\DIRECTORY_SEPARATOR.'ExpressionLanguage.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core'.\DIRECTORY_SEPARATOR.'Authorization'.\DIRECTORY_SEPARATOR.'AccessDecisionManagerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core'.\DIRECTORY_SEPARATOR.'Authorization'.\DIRECTORY_SEPARATOR.'TraceableAccessDecisionManager.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core'.\DIRECTORY_SEPARATOR.'Authorization'.\DIRECTORY_SEPARATOR.'AccessDecisionManager.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core'.\DIRECTORY_SEPARATOR.'Authorization'.\DIRECTORY_SEPARATOR.'Strategy'.\DIRECTORY_SEPARATOR.'AccessDecisionStrategyInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core'.\DIRECTORY_SEPARATOR.'Authorization'.\DIRECTORY_SEPARATOR.'Strategy'.\DIRECTORY_SEPARATOR.'UnanimousStrategy.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-http'.\DIRECTORY_SEPARATOR.'Firewall.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-bundle'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'FirewallListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-bundle'.\DIRECTORY_SEPARATOR.'Debug'.\DIRECTORY_SEPARATOR.'TraceableFirewallListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-http'.\DIRECTORY_SEPARATOR.'Firewall'.\DIRECTORY_SEPARATOR.'FirewallListenerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-http'.\DIRECTORY_SEPARATOR.'Firewall'.\DIRECTORY_SEPARATOR.'AbstractListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-http'.\DIRECTORY_SEPARATOR.'Firewall'.\DIRECTORY_SEPARATOR.'ContextListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle'.\DIRECTORY_SEPARATOR.'Security'.\DIRECTORY_SEPARATOR.'TwoFactor'.\DIRECTORY_SEPARATOR.'TwoFactorFirewallConfig.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle'.\DIRECTORY_SEPARATOR.'Security'.\DIRECTORY_SEPARATOR.'Http'.\DIRECTORY_SEPARATOR.'Utils'.\DIRECTORY_SEPARATOR.'RequestDataReader.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle'.\DIRECTORY_SEPARATOR.'Security'.\DIRECTORY_SEPARATOR.'TwoFactor'.\DIRECTORY_SEPARATOR.'Event'.\DIRECTORY_SEPARATOR.'TwoFactorFormListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle'.\DIRECTORY_SEPARATOR.'Security'.\DIRECTORY_SEPARATOR.'TwoFactor'.\DIRECTORY_SEPARATOR.'Provider'.\DIRECTORY_SEPARATOR.'TwoFactorProviderPreparationListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-http'.\DIRECTORY_SEPARATOR.'RememberMe'.\DIRECTORY_SEPARATOR.'ResponseListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'DumpDataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'var-dumper'.\DIRECTORY_SEPARATOR.'Cloner'.\DIRECTORY_SEPARATOR.'ClonerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'var-dumper'.\DIRECTORY_SEPARATOR.'Cloner'.\DIRECTORY_SEPARATOR.'AbstractCloner.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'var-dumper'.\DIRECTORY_SEPARATOR.'Cloner'.\DIRECTORY_SEPARATOR.'VarCloner.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EventDispatcher'.\DIRECTORY_SEPARATOR.'EventDispatcherInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EventDispatcher'.\DIRECTORY_SEPARATOR.'EventDispatcher.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EventDispatcher'.\DIRECTORY_SEPARATOR.'LazyEventDispatcher.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer-bundle'.\DIRECTORY_SEPARATOR.'Debug'.\DIRECTORY_SEPARATOR.'TraceableEventDispatcher.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Type'.\DIRECTORY_SEPARATOR.'ParserInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Type'.\DIRECTORY_SEPARATOR.'Parser.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'metadata'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Cache'.\DIRECTORY_SEPARATOR.'CacheInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'metadata'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Cache'.\DIRECTORY_SEPARATOR.'ClearableCacheInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'metadata'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Cache'.\DIRECTORY_SEPARATOR.'FileCache.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Expression'.\DIRECTORY_SEPARATOR.'CompilableExpressionEvaluatorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Expression'.\DIRECTORY_SEPARATOR.'ExpressionEvaluatorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Expression'.\DIRECTORY_SEPARATOR.'ExpressionEvaluator.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer-bundle'.\DIRECTORY_SEPARATOR.'ExpressionLanguage'.\DIRECTORY_SEPARATOR.'BasicSerializerFunctionsProvider.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer-bundle'.\DIRECTORY_SEPARATOR.'Debug'.\DIRECTORY_SEPARATOR.'RunsListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'metadata'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'MetadataFactoryInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'metadata'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'AdvancedMetadataFactoryInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer-bundle'.\DIRECTORY_SEPARATOR.'Debug'.\DIRECTORY_SEPARATOR.'TraceableMetadataFactory.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'metadata'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'MetadataFactory.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'metadata'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Driver'.\DIRECTORY_SEPARATOR.'DriverInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'metadata'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Driver'.\DIRECTORY_SEPARATOR.'LazyLoadingDriver.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'HandlerRegistryInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer-bundle'.\DIRECTORY_SEPARATOR.'Debug'.\DIRECTORY_SEPARATOR.'TraceableHandlerRegistry.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'HandlerRegistry.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'LazyHandlerRegistry.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'metadata'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Driver'.\DIRECTORY_SEPARATOR.'FileLocatorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'metadata'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Driver'.\DIRECTORY_SEPARATOR.'AdvancedFileLocatorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer-bundle'.\DIRECTORY_SEPARATOR.'Debug'.\DIRECTORY_SEPARATOR.'TraceableFileLocator.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'metadata'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Driver'.\DIRECTORY_SEPARATOR.'TraceableFileLocatorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'metadata'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Driver'.\DIRECTORY_SEPARATOR.'FileLocator.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'Request'.\DIRECTORY_SEPARATOR.'ParamFetcherInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'Util'.\DIRECTORY_SEPARATOR.'ResolverTrait.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'Request'.\DIRECTORY_SEPARATOR.'ParamFetcher.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'Request'.\DIRECTORY_SEPARATOR.'ParamReaderInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'Request'.\DIRECTORY_SEPARATOR.'ParamReader.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'Serializer'.\DIRECTORY_SEPARATOR.'Serializer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'Serializer'.\DIRECTORY_SEPARATOR.'JMSSerializerAdapter.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'Util'.\DIRECTORY_SEPARATOR.'ExceptionValueMap.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'ResponseStatusCodeListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'ViewResponseListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'BodyListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'Decoder'.\DIRECTORY_SEPARATOR.'DecoderProviderInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'Decoder'.\DIRECTORY_SEPARATOR.'ContainerDecoderProvider.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'ArrayNormalizerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'Normalizer'.\DIRECTORY_SEPARATOR.'CamelKeysNormalizer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'FormatListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'willdurand'.\DIRECTORY_SEPARATOR.'negotiation'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Negotiation'.\DIRECTORY_SEPARATOR.'AbstractNegotiator.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'willdurand'.\DIRECTORY_SEPARATOR.'negotiation'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Negotiation'.\DIRECTORY_SEPARATOR.'Negotiator.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'Negotiation'.\DIRECTORY_SEPARATOR.'FormatNegotiator.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-foundation'.\DIRECTORY_SEPARATOR.'RequestMatcherInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-foundation'.\DIRECTORY_SEPARATOR.'ChainRequestMatcher.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-foundation'.\DIRECTORY_SEPARATOR.'RequestMatcher'.\DIRECTORY_SEPARATOR.'PathRequestMatcher.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'ParamFetcherListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'ZoneMatcherListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-foundation'.\DIRECTORY_SEPARATOR.'RequestMatcher'.\DIRECTORY_SEPARATOR.'MethodRequestMatcher.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-foundation'.\DIRECTORY_SEPARATOR.'RequestMatcher'.\DIRECTORY_SEPARATOR.'IpsRequestMatcher.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'cors-bundle'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'CorsListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'cors-bundle'.\DIRECTORY_SEPARATOR.'Options'.\DIRECTORY_SEPARATOR.'ResolverInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'cors-bundle'.\DIRECTORY_SEPARATOR.'Options'.\DIRECTORY_SEPARATOR.'Resolver.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'cors-bundle'.\DIRECTORY_SEPARATOR.'Options'.\DIRECTORY_SEPARATOR.'ProviderInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'cors-bundle'.\DIRECTORY_SEPARATOR.'Options'.\DIRECTORY_SEPARATOR.'ConfigProvider.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'cors-bundle'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'CacheableResponseVaryListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'webpack-encore-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Asset'.\DIRECTORY_SEPARATOR.'EntrypointLookupCollectionInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'webpack-encore-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Asset'.\DIRECTORY_SEPARATOR.'EntrypointLookupCollection.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'webpack-encore-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'ResetAssetsEventListener.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Helper'.\DIRECTORY_SEPARATOR.'ContextHelper.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core'.\DIRECTORY_SEPARATOR.'Authentication'.\DIRECTORY_SEPARATOR.'AuthenticationTrustResolverInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle'.\DIRECTORY_SEPARATOR.'Security'.\DIRECTORY_SEPARATOR.'Authentication'.\DIRECTORY_SEPARATOR.'AuthenticationTrustResolver.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core'.\DIRECTORY_SEPARATOR.'Authentication'.\DIRECTORY_SEPARATOR.'AuthenticationTrustResolver.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle'.\DIRECTORY_SEPARATOR.'Security'.\DIRECTORY_SEPARATOR.'TwoFactor'.\DIRECTORY_SEPARATOR.'Provider'.\DIRECTORY_SEPARATOR.'TwoFactorProviderRegistry.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle'.\DIRECTORY_SEPARATOR.'Security'.\DIRECTORY_SEPARATOR.'TwoFactor'.\DIRECTORY_SEPARATOR.'Provider'.\DIRECTORY_SEPARATOR.'PreparationRecorderInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle'.\DIRECTORY_SEPARATOR.'Security'.\DIRECTORY_SEPARATOR.'TwoFactor'.\DIRECTORY_SEPARATOR.'Provider'.\DIRECTORY_SEPARATOR.'TokenPreparationRecorder.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-client'.\DIRECTORY_SEPARATOR.'TraceableHttpClient.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-client'.\DIRECTORY_SEPARATOR.'DecoratorTrait.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-client'.\DIRECTORY_SEPARATOR.'UriTemplateHttpClient.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'psr'.\DIRECTORY_SEPARATOR.'event-dispatcher'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EventDispatcherInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'event-dispatcher-contracts'.\DIRECTORY_SEPARATOR.'EventDispatcherInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'event-dispatcher'.\DIRECTORY_SEPARATOR.'EventDispatcherInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'event-dispatcher'.\DIRECTORY_SEPARATOR.'Debug'.\DIRECTORY_SEPARATOR.'TraceableEventDispatcher.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'event-dispatcher'.\DIRECTORY_SEPARATOR.'EventDispatcher.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'translation'.\DIRECTORY_SEPARATOR.'DataCollectorTranslator.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'routing'.\DIRECTORY_SEPARATOR.'RequestContextAwareInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'routing'.\DIRECTORY_SEPARATOR.'Matcher'.\DIRECTORY_SEPARATOR.'UrlMatcherInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'routing'.\DIRECTORY_SEPARATOR.'Generator'.\DIRECTORY_SEPARATOR.'UrlGeneratorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'routing'.\DIRECTORY_SEPARATOR.'RouterInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'routing'.\DIRECTORY_SEPARATOR.'Matcher'.\DIRECTORY_SEPARATOR.'RequestMatcherInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'routing'.\DIRECTORY_SEPARATOR.'Router.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'framework-bundle'.\DIRECTORY_SEPARATOR.'Routing'.\DIRECTORY_SEPARATOR.'Router.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'ContextFactory'.\DIRECTORY_SEPARATOR.'SerializationContextFactoryInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'ContextFactory'.\DIRECTORY_SEPARATOR.'DeserializationContextFactoryInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer-bundle'.\DIRECTORY_SEPARATOR.'ContextFactory'.\DIRECTORY_SEPARATOR.'ConfiguredContextFactory.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'SerializerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'ArrayTransformerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Serializer.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'GraphNavigator'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'GraphNavigatorFactoryInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'GraphNavigator'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'DeserializationGraphNavigatorFactory.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Construction'.\DIRECTORY_SEPARATOR.'ObjectConstructorInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Construction'.\DIRECTORY_SEPARATOR.'DoctrineObjectConstructor.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Construction'.\DIRECTORY_SEPARATOR.'UnserializeObjectConstructor.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Accessor'.\DIRECTORY_SEPARATOR.'AccessorStrategyInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Accessor'.\DIRECTORY_SEPARATOR.'DefaultAccessorStrategy.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'GraphNavigator'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'SerializationGraphNavigatorFactory.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Visitor'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'SerializationVisitorFactory.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Visitor'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'JsonSerializationVisitorFactory.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Visitor'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'XmlSerializationVisitorFactory.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Visitor'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'DeserializationVisitorFactory.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Visitor'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'JsonDeserializationVisitorFactory.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Visitor'.\DIRECTORY_SEPARATOR.'Factory'.\DIRECTORY_SEPARATOR.'XmlDeserializationVisitorFactory.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'View'.\DIRECTORY_SEPARATOR.'ViewHandlerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'View'.\DIRECTORY_SEPARATOR.'ConfigurableViewHandlerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'.\DIRECTORY_SEPARATOR.'View'.\DIRECTORY_SEPARATOR.'ViewHandler.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core'.\DIRECTORY_SEPARATOR.'Authorization'.\DIRECTORY_SEPARATOR.'AuthorizationCheckerInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core'.\DIRECTORY_SEPARATOR.'Authorization'.\DIRECTORY_SEPARATOR.'AuthorizationChecker.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'Debug'.\DIRECTORY_SEPARATOR.'TraceableEventDispatcher.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'monolog'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Monolog'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'NullHandler.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'Profiler'.\DIRECTORY_SEPARATOR.'Profiler.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'Profiler'.\DIRECTORY_SEPARATOR.'ProfilerStorageInterface.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'Profiler'.\DIRECTORY_SEPARATOR.'FileProfilerStorage.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'console'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'CommandDataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'TimeDataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'MemoryDataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'ValidatorDataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'AjaxDataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'ExceptionDataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'LoggerDataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'EventDataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'translation'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'TranslationDataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-bundle'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'SecurityDataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bridge'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'TwigDataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-client'.\DIRECTORY_SEPARATOR.'HttpClientTrait.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-client'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'HttpClientDataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'doctrine-bridge'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'DoctrineDataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'DoctrineDataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'mailer'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'MessageDataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer-bundle'.\DIRECTORY_SEPARATOR.'Debug'.\DIRECTORY_SEPARATOR.'DataCollector.php';
            include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'ConfigDataCollector.php';
        };
    }

    public function compile(): void
    {
        throw new LogicException('You cannot compile a dumped container that was already compiled.');
    }

    public function isCompiled(): bool
    {
        return true;
    }

    public function getRemovedIds(): array
    {
        return require $this->containerDir.\DIRECTORY_SEPARATOR.'removed-ids.php';
    }

    protected function load($file, $lazyLoad = true): mixed
    {
        if (class_exists($class = __NAMESPACE__.'\\'.$file, false)) {
            return $class::do($this, $lazyLoad);
        }

        if ('.' === $file[-4]) {
            $class = substr($class, 0, -4);
        } else {
            $file .= '.php';
        }

        $service = require $this->containerDir.\DIRECTORY_SEPARATOR.$file;

        return class_exists($class, false) ? $class::do($this, $lazyLoad) : $service;
    }

    protected function createProxy($class, \Closure $factory)
    {
        class_exists($class, false) || require __DIR__.'/'.$class.'.php';

        return $factory();
    }

    /**
     * Gets the public '.container.private.profiler' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Profiler\Profiler
     */
    protected static function get_Container_Private_ProfilerService($container)
    {
        $a = new \Monolog\Logger('profiler');
        $a->pushProcessor([($container->privates['App\\Logger\\LogProcessor'] ??= new \App\Logger\LogProcessor()), '__invoke']);
        $a->pushHandler(($container->privates['monolog.handler.console'] ?? self::getMonolog_Handler_ConsoleService($container)));
        $a->pushHandler(($container->privates['monolog.handler.main'] ?? self::getMonolog_Handler_MainService($container)));
        ($container->privates['debug.debug_logger_configurator'] ?? self::getDebug_DebugLoggerConfiguratorService($container))->pushDebugLogger($a);

        $container->services['.container.private.profiler'] = $instance = new \Symfony\Component\HttpKernel\Profiler\Profiler(new \Symfony\Component\HttpKernel\Profiler\FileProfilerStorage(('file:'.$container->targetDir.''.'/profiler')), $a, true);

        $b = ($container->services['kernel'] ?? $container->get('kernel'));
        $c = ($container->services['.virtual_request_stack'] ?? self::get_VirtualRequestStackService($container));
        $d = new \Symfony\Component\HttpClient\DataCollector\HttpClientDataCollector();
        $d->registerClient('http_client', ($container->privates['.debug.http_client'] ?? self::get_Debug_HttpClientService($container)));
        $e = new \Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector();
        if ($container->has('kernel')) {
            $e->setKernel($b);
        }

        $instance->add(($container->privates['data_collector.request'] ?? self::getDataCollector_RequestService($container)));
        $instance->add(new \Symfony\Component\Console\DataCollector\CommandDataCollector());
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\TimeDataCollector($b, ($container->services['debug.stopwatch'] ??= new \Symfony\Component\Stopwatch\Stopwatch(true))));
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector());
        $instance->add(new \Symfony\Component\Validator\DataCollector\ValidatorDataCollector(($container->privates['debug.validator'] ?? self::getDebug_ValidatorService($container))));
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector());
        $instance->add(($container->privates['data_collector.form'] ?? self::getDataCollector_FormService($container)));
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector());
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector($a, ($container->targetDir.''.'/App_KernelDevDebugContainer'), $c));
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\EventDataCollector(new RewindableGenerator(function () use ($container) {
            yield 'event_dispatcher' => ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container));
            yield 'security.event_dispatcher.api' => ($container->privates['debug.security.event_dispatcher.api'] ?? $container->load('getDebug_Security_EventDispatcher_ApiService'));
            yield 'security.event_dispatcher.secured_area' => ($container->privates['debug.security.event_dispatcher.secured_area'] ?? self::getDebug_Security_EventDispatcher_SecuredAreaService($container));
        }, 3), $c));
        $instance->add(($container->privates['data_collector.router'] ??= new \Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector()));
        $instance->add(($container->services['data_collector.cache'] ?? self::getDataCollector_CacheService($container)));
        $instance->add(new \Symfony\Component\Translation\DataCollector\TranslationDataCollector(($container->services['translator'] ?? self::getTranslatorService($container))));
        $instance->add(new \Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector(($container->privates['security.untracked_token_storage'] ??= new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage()), ($container->privates['security.role_hierarchy'] ?? self::getSecurity_RoleHierarchyService($container)), ($container->privates['security.logout_url_generator'] ?? self::getSecurity_LogoutUrlGeneratorService($container)), ($container->privates['debug.security.access.decision_manager'] ?? self::getDebug_Security_Access_DecisionManagerService($container)), ($container->privates['security.firewall.map'] ?? self::getSecurity_Firewall_MapService($container)), ($container->privates['debug.security.firewall'] ?? self::getDebug_Security_FirewallService($container))));
        $instance->add(new \Symfony\Bridge\Twig\DataCollector\TwigDataCollector(($container->privates['twig.profile'] ??= new \Twig\Profiler\Profile()), ($container->privates['twig'] ?? self::getTwigService($container))));
        $instance->add($d);
        $instance->add(new \Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector(($container->services['doctrine'] ?? self::getDoctrineService($container)), true, ($container->privates['doctrine.debug_data_holder'] ??= new \Doctrine\Bundle\DoctrineBundle\Middleware\BacktraceDebugDataHolder([]))));
        $instance->add(($container->services['data_collector.dump'] ?? self::getDataCollector_DumpService($container)));
        $instance->add(new \Symfony\Component\Mailer\DataCollector\MessageDataCollector(($container->privates['mailer.message_logger_listener'] ??= new \Symfony\Component\Mailer\EventListener\MessageLoggerListener())));
        $instance->add(new \JMS\SerializerBundle\Debug\DataCollector('default', [], ($container->privates['jms_serializer.event_dispatcher'] ?? self::getJmsSerializer_EventDispatcherService($container)), ($container->privates['jms_serializer.traceable_handler_registry'] ?? self::getJmsSerializer_TraceableHandlerRegistryService($container)), ($container->privates['jms_serializer.traceable_metadata_factory'] ?? self::getJmsSerializer_TraceableMetadataFactoryService($container)), ($container->privates['jms_serializer.metadata.traceable_file_locator'] ?? self::getJmsSerializer_Metadata_TraceableFileLocatorService($container)), ($container->privates['jms_serializer.traceable_runs_listener'] ??= new \JMS\SerializerBundle\Debug\RunsListener())));
        $instance->add($e);

        return $instance;
    }

    /**
     * Gets the public '.virtual_request_stack' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Debug\VirtualRequestStack
     */
    protected static function get_VirtualRequestStackService($container)
    {
        return $container->services['.virtual_request_stack'] = new \Symfony\Component\HttpKernel\Debug\VirtualRequestStack(($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()));
    }

    /**
     * Gets the public 'cache.app' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected static function getCache_AppService($container)
    {
        $a = new \Symfony\Component\Cache\Adapter\FilesystemAdapter('Yc6GDvfwbS', 0, ($container->targetDir.''.'/pools/app'), ($container->privates['cache.default_marshaller'] ??= new \Symfony\Component\Cache\Marshaller\DefaultMarshaller(NULL, true)));
        $a->setLogger(($container->privates['monolog.logger.cache'] ?? self::getMonolog_Logger_CacheService($container)));

        return $container->services['cache.app'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter($a);
    }

    /**
     * Gets the public 'cache.rate_limiter' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected static function getCache_RateLimiterService($container)
    {
        $a = new \Symfony\Component\Cache\Adapter\FilesystemAdapter('U7jNMMRLZC', 0, ($container->targetDir.''.'/pools/app'), ($container->privates['cache.default_marshaller'] ??= new \Symfony\Component\Cache\Marshaller\DefaultMarshaller(NULL, true)));
        $a->setLogger(($container->privates['monolog.logger.cache'] ?? self::getMonolog_Logger_CacheService($container)));

        return $container->services['cache.rate_limiter'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter($a);
    }

    /**
     * Gets the public 'cache.security_is_granted_attribute_expression_language' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected static function getCache_SecurityIsGrantedAttributeExpressionLanguageService($container)
    {
        return $container->services['cache.security_is_granted_attribute_expression_language'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter(\Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('gC4cEg5izL', 0, $container->getParameter('container.build_id'), ($container->targetDir.''.'/pools/system'), ($container->privates['monolog.logger.cache'] ?? self::getMonolog_Logger_CacheService($container))));
    }

    /**
     * Gets the public 'cache.system' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected static function getCache_SystemService($container)
    {
        return $container->services['cache.system'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter(\Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('gcE5U+3c0f', 0, $container->getParameter('container.build_id'), ($container->targetDir.''.'/pools/system'), ($container->privates['monolog.logger.cache'] ?? self::getMonolog_Logger_CacheService($container))));
    }

    /**
     * Gets the public 'cache.validator_expression_language' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected static function getCache_ValidatorExpressionLanguageService($container)
    {
        return $container->services['cache.validator_expression_language'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter(\Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('QTMmlxd-YN', 0, $container->getParameter('container.build_id'), ($container->targetDir.''.'/pools/system'), ($container->privates['monolog.logger.cache'] ?? self::getMonolog_Logger_CacheService($container))));
    }

    /**
     * Gets the public 'data_collector.cache' shared service.
     *
     * @return \Symfony\Component\Cache\DataCollector\CacheDataCollector
     */
    protected static function getDataCollector_CacheService($container)
    {
        $container->services['data_collector.cache'] = $instance = new \Symfony\Component\Cache\DataCollector\CacheDataCollector();

        $instance->addInstance('cache.app', ($container->services['cache.app'] ?? self::getCache_AppService($container)));
        $instance->addInstance('cache.system', ($container->services['cache.system'] ?? self::getCache_SystemService($container)));
        $instance->addInstance('cache.validator', ($container->privates['cache.validator'] ?? self::getCache_ValidatorService($container)));
        $instance->addInstance('cache.serializer', ($container->privates['cache.serializer'] ?? self::getCache_SerializerService($container)));
        $instance->addInstance('cache.annotations', ($container->privates['cache.annotations'] ?? self::getCache_AnnotationsService($container)));
        $instance->addInstance('cache.property_info', ($container->privates['cache.property_info'] ?? self::getCache_PropertyInfoService($container)));
        $instance->addInstance('cache.rate_limiter', ($container->services['cache.rate_limiter'] ?? self::getCache_RateLimiterService($container)));
        $instance->addInstance('doctrine.result_cache_pool', ($container->privates['doctrine.result_cache_pool'] ?? self::getDoctrine_ResultCachePoolService($container)));
        $instance->addInstance('doctrine.system_cache_pool', ($container->privates['doctrine.system_cache_pool'] ?? self::getDoctrine_SystemCachePoolService($container)));
        $instance->addInstance('cache.validator_expression_language', ($container->services['cache.validator_expression_language'] ?? self::getCache_ValidatorExpressionLanguageService($container)));
        $instance->addInstance('cache.doctrine.orm.default.result', ($container->privates['cache.doctrine.orm.default.result'] ?? self::getCache_Doctrine_Orm_Default_ResultService($container)));
        $instance->addInstance('cache.doctrine.orm.default.query', ($container->privates['cache.doctrine.orm.default.query'] ?? self::getCache_Doctrine_Orm_Default_QueryService($container)));
        $instance->addInstance('cache.security_expression_language', ($container->privates['cache.security_expression_language'] ?? self::getCache_SecurityExpressionLanguageService($container)));
        $instance->addInstance('cache.security_is_granted_attribute_expression_language', ($container->services['cache.security_is_granted_attribute_expression_language'] ?? self::getCache_SecurityIsGrantedAttributeExpressionLanguageService($container)));
        $instance->addInstance('security.authenticator.cache.expired_links', ($container->privates['security.authenticator.cache.expired_links'] ?? self::getSecurity_Authenticator_Cache_ExpiredLinksService($container)));
        $instance->addInstance('cache.security_token_verifier', ($container->privates['cache.security_token_verifier'] ?? self::getCache_SecurityTokenVerifierService($container)));
        $instance->addInstance('cache.webpack_encore', ($container->privates['cache.webpack_encore'] ?? self::getCache_WebpackEncoreService($container)));

        return $instance;
    }

    /**
     * Gets the public 'data_collector.dump' shared service.
     *
     * @return \Symfony\Component\HttpKernel\DataCollector\DumpDataCollector
     */
    protected static function getDataCollector_DumpService($container)
    {
        return $container->services['data_collector.dump'] = new \Symfony\Component\HttpKernel\DataCollector\DumpDataCollector(($container->services['debug.stopwatch'] ??= new \Symfony\Component\Stopwatch\Stopwatch(true)), ($container->privates['debug.file_link_formatter'] ?? self::getDebug_FileLinkFormatterService($container)), 'UTF-8', ($container->services['.virtual_request_stack'] ?? self::get_VirtualRequestStackService($container)), NULL);
    }

    /**
     * Gets the public 'debug.stopwatch' shared service.
     *
     * @return \Symfony\Component\Stopwatch\Stopwatch
     */
    protected static function getDebug_StopwatchService($container)
    {
        return $container->services['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true);
    }

    /**
     * Gets the public 'doctrine' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Registry
     */
    protected static function getDoctrineService($container)
    {
        return $container->services['doctrine'] = new \Doctrine\Bundle\DoctrineBundle\Registry($container, $container->parameters['doctrine.connections'], $container->parameters['doctrine.entity_managers'], 'default', 'default');
    }

    /**
     * Gets the public 'doctrine.dbal.default_connection' shared service.
     *
     * @return \Doctrine\DBAL\Connection
     */
    protected static function getDoctrine_Dbal_DefaultConnectionService($container)
    {
        $a = ($container->privates['doctrine.dbal.default_connection.event_manager'] ?? self::getDoctrine_Dbal_DefaultConnection_EventManagerService($container));

        if (isset($container->services['doctrine.dbal.default_connection'])) {
            return $container->services['doctrine.dbal.default_connection'];
        }
        $b = new \Doctrine\DBAL\Configuration();

        $c = new \Monolog\Logger('doctrine');
        $c->pushProcessor([($container->privates['App\\Logger\\LogProcessor'] ??= new \App\Logger\LogProcessor()), '__invoke']);
        $c->pushHandler(($container->privates['monolog.handler.main'] ?? self::getMonolog_Handler_MainService($container)));
        ($container->privates['debug.debug_logger_configurator'] ?? self::getDebug_DebugLoggerConfiguratorService($container))->pushDebugLogger($c);
        $d = new \Doctrine\Bundle\DoctrineBundle\Middleware\DebugMiddleware(($container->privates['doctrine.debug_data_holder'] ??= new \Doctrine\Bundle\DoctrineBundle\Middleware\BacktraceDebugDataHolder([])), ($container->services['debug.stopwatch'] ??= new \Symfony\Component\Stopwatch\Stopwatch(true)));
        $d->setConnectionName('default');

        $b->setSchemaManagerFactory(new \Doctrine\DBAL\Schema\DefaultSchemaManagerFactory());
        $b->setMiddlewares([new \Doctrine\DBAL\Logging\Middleware($c), $d]);

        return $container->services['doctrine.dbal.default_connection'] = (new \Doctrine\Bundle\DoctrineBundle\ConnectionFactory($container->parameters['doctrine.dbal.connection_factory.types'], new \Doctrine\DBAL\Tools\DsnParser(['db2' => 'ibm_db2', 'mssql' => 'pdo_sqlsrv', 'mysql' => 'pdo_mysql', 'mysql2' => 'pdo_mysql', 'postgres' => 'pdo_pgsql', 'postgresql' => 'pdo_pgsql', 'pgsql' => 'pdo_pgsql', 'sqlite' => 'pdo_sqlite', 'sqlite3' => 'pdo_sqlite'])))->createConnection(['url' => $container->getEnv('DATABASE_URL'), 'driver' => 'pdo_mysql', 'charset' => 'utf8mb4', 'idle_connection_ttl' => 600, 'host' => 'localhost', 'port' => NULL, 'user' => 'root', 'password' => NULL, 'driverOptions' => [], 'defaultTableOptions' => ['charset' => 'utf8mb4', 'collation' => 'utf8mb4_unicode_ci']], $b, $a, []);
    }

    /**
     * Gets the public 'doctrine.orm.default_entity_manager' shared service.
     *
     * @return \Doctrine\ORM\EntityManager
     */
    protected static function getDoctrine_Orm_DefaultEntityManagerService($container, $lazyLoad = true)
    {
        if (true === $lazyLoad) {
            return $container->services['doctrine.orm.default_entity_manager'] = $container->createProxy('EntityManagerGhostEbeb667', static fn () => \EntityManagerGhostEbeb667::createLazyGhost(static fn ($proxy) => self::getDoctrine_Orm_DefaultEntityManagerService($container, $proxy)));
        }

        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'common'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Proxy'.\DIRECTORY_SEPARATOR.'Autoloader.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'orm'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Proxy'.\DIRECTORY_SEPARATOR.'Autoloader.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'persistence'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Persistence'.\DIRECTORY_SEPARATOR.'ObjectManager.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'orm'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EntityManagerInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'orm'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EntityManager.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'orm'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Configuration.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'persistence'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Persistence'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'Driver'.\DIRECTORY_SEPARATOR.'MappingDriver.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'MappingDriver.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'persistence'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Persistence'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'Driver'.\DIRECTORY_SEPARATOR.'MappingDriverChain.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'orm'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'Driver'.\DIRECTORY_SEPARATOR.'CompatibilityAnnotationDriver.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'persistence'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Persistence'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'Driver'.\DIRECTORY_SEPARATOR.'ColocatedMappingDriver.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'orm'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'Driver'.\DIRECTORY_SEPARATOR.'ReflectionBasedDriver.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'orm'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'Driver'.\DIRECTORY_SEPARATOR.'AttributeDriver.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'orm'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'NamingStrategy.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'orm'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'UnderscoreNamingStrategy.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'orm'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'QuoteStrategy.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'orm'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Internal'.\DIRECTORY_SEPARATOR.'SQLResultCasing.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'orm'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'DefaultQuoteStrategy.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'orm'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'TypedFieldMapper.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'orm'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'DefaultTypedFieldMapper.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'orm'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'EntityListenerResolver.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'EntityListenerServiceResolver.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Mapping'.\DIRECTORY_SEPARATOR.'ContainerEntityListenerResolver.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'orm'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Repository'.\DIRECTORY_SEPARATOR.'RepositoryFactory.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Repository'.\DIRECTORY_SEPARATOR.'RepositoryFactoryCompatibility.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Repository'.\DIRECTORY_SEPARATOR.'ContainerRepositoryFactory.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'ManagerConfigurator.php';

        $a = new \Doctrine\ORM\Configuration();

        $b = new \Doctrine\Persistence\Mapping\Driver\MappingDriverChain();
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\AttributeDriver([(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Entity')], true), 'App\\Entity');

        $a->setEntityNamespaces(['Kimai' => 'App\\Entity']);
        $a->setMetadataCache(new \Symfony\Component\Cache\Adapter\ArrayAdapter());
        $a->setQueryCache(($container->privates['cache.doctrine.orm.default.query'] ?? self::getCache_Doctrine_Orm_Default_QueryService($container)));
        $a->setResultCache(($container->privates['cache.doctrine.orm.default.result'] ?? self::getCache_Doctrine_Orm_Default_ResultService($container)));
        $a->setMetadataDriverImpl(new \Doctrine\Bundle\DoctrineBundle\Mapping\MappingDriver($b, new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'doctrine.ulid_generator' => ['privates', 'doctrine.ulid_generator', 'getDoctrine_UlidGeneratorService', true],
            'doctrine.uuid_generator' => ['privates', 'doctrine.uuid_generator', 'getDoctrine_UuidGeneratorService', true],
        ], [
            'doctrine.ulid_generator' => '?',
            'doctrine.uuid_generator' => '?',
        ])));
        $a->setProxyDir(($container->targetDir.''.'/doctrine/orm/Proxies'));
        $a->setProxyNamespace('Proxies');
        $a->setAutoGenerateProxyClasses(true);
        $a->setSchemaIgnoreClasses([]);
        $a->setClassMetadataFactoryName('Doctrine\\Bundle\\DoctrineBundle\\Mapping\\ClassMetadataFactory');
        $a->setDefaultRepositoryClassName('Doctrine\\ORM\\EntityRepository');
        $a->setNamingStrategy(new \Doctrine\ORM\Mapping\UnderscoreNamingStrategy(0, true));
        $a->setQuoteStrategy(new \Doctrine\ORM\Mapping\DefaultQuoteStrategy());
        $a->setTypedFieldMapper(new \Doctrine\ORM\Mapping\DefaultTypedFieldMapper());
        $a->setEntityListenerResolver(new \Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver($container));
        $a->setLazyGhostObjectEnabled(true);
        $a->setIdentityGenerationPreferences([]);
        $a->setRepositoryFactory(new \Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory(($container->privates['.service_locator.Xbsa8iG'] ??= new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [], []))));
        $a->addCustomDatetimeFunction('date', 'App\\Doctrine\\Extensions\\Date');
        $a->addCustomDatetimeFunction('day', 'App\\Doctrine\\Extensions\\Day');
        $a->addCustomDatetimeFunction('month', 'App\\Doctrine\\Extensions\\Month');
        $a->addCustomDatetimeFunction('year', 'App\\Doctrine\\Extensions\\Year');

        $instance = ($lazyLoad->__construct(($container->services['doctrine.dbal.default_connection'] ?? self::getDoctrine_Dbal_DefaultConnectionService($container)), $a, ($container->privates['doctrine.dbal.default_connection.event_manager'] ?? self::getDoctrine_Dbal_DefaultConnection_EventManagerService($container))) && false ?: $lazyLoad);

        (new \Doctrine\Bundle\DoctrineBundle\ManagerConfigurator([], []))->configure($instance);

        return $instance;
    }

    /**
     * Gets the public 'event_dispatcher' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher
     */
    protected static function getEventDispatcherService($container)
    {
        $a = new \Monolog\Logger('event');
        $a->pushProcessor([($container->privates['App\\Logger\\LogProcessor'] ??= new \App\Logger\LogProcessor()), '__invoke']);
        $a->pushHandler(new \Monolog\Handler\NullHandler());
        ($container->privates['debug.debug_logger_configurator'] ?? self::getDebug_DebugLoggerConfiguratorService($container))->pushDebugLogger($a);

        $container->services['event_dispatcher'] = $instance = new \Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher(new \Symfony\Component\EventDispatcher\EventDispatcher(), ($container->services['debug.stopwatch'] ??= new \Symfony\Component\Stopwatch\Stopwatch(true)), $a, ($container->services['.virtual_request_stack'] ?? self::get_VirtualRequestStackService($container)));

        $instance->addListener('kernel.controller', [#[\Closure(name: 'data_collector.router', class: 'Symfony\\Bundle\\FrameworkBundle\\DataCollector\\RouterDataCollector')] fn () => ($container->privates['data_collector.router'] ??= new \Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector()), 'onKernelController'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [#[\Closure(name: 'security.listener.user_provider', class: 'Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener')] fn () => ($container->privates['security.listener.user_provider'] ?? $container->load('getSecurity_Listener_UserProviderService')), 'checkPassport'], 1024);
        $instance->addListener('kernel.response', [#[\Closure(name: 'security.context_listener.0', class: 'Symfony\\Component\\Security\\Http\\Firewall\\ContextListener')] fn () => ($container->privates['security.context_listener.0'] ?? self::getSecurity_ContextListener_0Service($container)), 'onKernelResponse'], 0);
        $instance->addListener('kernel.request', [#[\Closure(name: 'fos_rest.body_listener', class: 'FOS\\RestBundle\\EventListener\\BodyListener')] fn () => ($container->privates['fos_rest.body_listener'] ?? self::getFosRest_BodyListenerService($container)), 'onKernelRequest'], 10);
        $instance->addListener('kernel.request', [#[\Closure(name: 'fos_rest.format_listener', class: 'FOS\\RestBundle\\EventListener\\FormatListener')] fn () => ($container->privates['fos_rest.format_listener'] ?? self::getFosRest_FormatListenerService($container)), 'onKernelRequest'], 34);
        $instance->addListener('kernel.controller', [#[\Closure(name: 'fos_rest.param_fetcher_listener', class: 'FOS\\RestBundle\\EventListener\\ParamFetcherListener')] fn () => ($container->privates['fos_rest.param_fetcher_listener'] ?? self::getFosRest_ParamFetcherListenerService($container)), 'onKernelController'], 5);
        $instance->addListener('kernel.request', [#[\Closure(name: 'fos_rest.zone_matcher_listener', class: 'FOS\\RestBundle\\EventListener\\ZoneMatcherListener')] fn () => ($container->privates['fos_rest.zone_matcher_listener'] ?? self::getFosRest_ZoneMatcherListenerService($container)), 'onKernelRequest'], 248);
        $instance->addListener('kernel.request', [#[\Closure(name: 'nelmio_cors.cors_listener', class: 'Nelmio\\CorsBundle\\EventListener\\CorsListener')] fn () => ($container->privates['nelmio_cors.cors_listener'] ?? self::getNelmioCors_CorsListenerService($container)), 'onKernelRequest'], 250);
        $instance->addListener('kernel.response', [#[\Closure(name: 'nelmio_cors.cors_listener', class: 'Nelmio\\CorsBundle\\EventListener\\CorsListener')] fn () => ($container->privates['nelmio_cors.cors_listener'] ?? self::getNelmioCors_CorsListenerService($container)), 'onKernelResponse'], 0);
        $instance->addListener('kernel.response', [#[\Closure(name: 'nelmio_cors.cacheable_response_vary_listener', class: 'Nelmio\\CorsBundle\\EventListener\\CacheableResponseVaryListener')] fn () => ($container->privates['nelmio_cors.cacheable_response_vary_listener'] ??= new \Nelmio\CorsBundle\EventListener\CacheableResponseVaryListener()), 'onResponse'], -10);
        $instance->addListener('kernel.exception', [#[\Closure(name: 'webpack_encore.exception_listener', class: 'Symfony\\WebpackEncoreBundle\\EventListener\\ExceptionListener')] fn () => ($container->privates['webpack_encore.exception_listener'] ?? $container->load('getWebpackEncore_ExceptionListenerService')), 'onKernelException'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [#[\Closure(name: 'App\\API\\Authentication\\ApiTokenMigratingListener')] fn () => ($container->privates['App\\API\\Authentication\\ApiTokenMigratingListener'] ?? $container->load('getApiTokenMigratingListenerService')), 'onLoginSuccess'], 0);
        $instance->addListener('actions.activities', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\ActivitiesSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\ActivitiesSubscriber'] ?? $container->load('getActivitiesSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.activity', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\ActivitySubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\ActivitySubscriber'] ?? $container->load('getActivitySubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.customer', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\CustomerSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\CustomerSubscriber'] ?? $container->load('getCustomerSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.customers', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\CustomersSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\CustomersSubscriber'] ?? $container->load('getCustomersSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.dashboard', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\DashboardSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\DashboardSubscriber'] ?? $container->load('getDashboardSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.invoice_archive', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\InvoiceArchiveSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\InvoiceArchiveSubscriber'] ?? $container->load('getInvoiceArchiveSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.invoice_document', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\InvoiceDocumentSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\InvoiceDocumentSubscriber'] ?? $container->load('getInvoiceDocumentSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.invoice', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\InvoiceSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\InvoiceSubscriber'] ?? $container->load('getInvoiceSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.invoice_template', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\InvoiceTemplateSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\InvoiceTemplateSubscriber'] ?? $container->load('getInvoiceTemplateSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.invoice_templates', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\InvoiceTemplatesSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\InvoiceTemplatesSubscriber'] ?? $container->load('getInvoiceTemplatesSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.user_permissions', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\PermissionsSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\PermissionsSubscriber'] ?? $container->load('getPermissionsSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.plugin', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\PluginSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\PluginSubscriber'] ?? $container->load('getPluginSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.project', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\ProjectSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\ProjectSubscriber'] ?? $container->load('getProjectSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.projects', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\ProjectsSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\ProjectsSubscriber'] ?? $container->load('getProjectsSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.tag', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\TagSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\TagSubscriber'] ?? $container->load('getTagSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.tags', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\TagsSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\TagsSubscriber'] ?? $container->load('getTagsSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.team', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\TeamSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\TeamSubscriber'] ?? $container->load('getTeamSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.teams', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\TeamsSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\TeamsSubscriber'] ?? $container->load('getTeamsSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.timesheet', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\TimesheetSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\TimesheetSubscriber'] ?? $container->load('getTimesheetSubscriber2Service')), 'handleEvent'], 1000);
        $instance->addListener('actions.timesheet_team', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\TimesheetTeamSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\TimesheetTeamSubscriber'] ?? $container->load('getTimesheetTeamSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.timesheets', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\TimesheetsSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\TimesheetsSubscriber'] ?? $container->load('getTimesheetsSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.timesheets_team', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\TimesheetsTeamSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\TimesheetsTeamSubscriber'] ?? $container->load('getTimesheetsTeamSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.user_forms', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\UserFormsSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\UserFormsSubscriber'] ?? $container->load('getUserFormsSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.user', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\UserSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\UserSubscriber'] ?? $container->load('getUserSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('actions.users', [#[\Closure(name: 'App\\EventSubscriber\\Actions\\UsersSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\Actions\\UsersSubscriber'] ?? $container->load('getUsersSubscriberService')), 'handleEvent'], 1000);
        $instance->addListener('kernel.exception', [#[\Closure(name: 'App\\EventSubscriber\\AjaxAuthenticationSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\AjaxAuthenticationSubscriber'] ?? $container->load('getAjaxAuthenticationSubscriberService')), 'onCoreException'], 1);
        $instance->addListener('App\\Event\\EmailEvent', [#[\Closure(name: 'App\\EventSubscriber\\EmailSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\EmailSubscriber'] ?? $container->load('getEmailSubscriberService')), 'onMailEvent'], 100);
        $instance->addListener('App\\Event\\UserEmailEvent', [#[\Closure(name: 'App\\EventSubscriber\\EmailSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\EmailSubscriber'] ?? $container->load('getEmailSubscriberService')), 'onUserMailEvent'], 100);
        $instance->addListener('App\\Event\\UserInteractiveLoginEvent', [#[\Closure(name: 'App\\EventSubscriber\\LastLoginSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\LastLoginSubscriber'] ?? $container->load('getLastLoginSubscriberService')), 'onImplicitLogin'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [#[\Closure(name: 'App\\EventSubscriber\\LastLoginSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\LastLoginSubscriber'] ?? $container->load('getLastLoginSubscriberService')), 'onFormLogin'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LogoutEvent', [#[\Closure(name: 'App\\EventSubscriber\\LogoutSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\LogoutSubscriber'] ?? $container->load('getLogoutSubscriberService')), 'onLogout'], 0);
        $instance->addListener('KevinPapst\\TablerBundle\\Event\\MenuEvent', [#[\Closure(name: 'App\\EventSubscriber\\MenuBuilderSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\MenuBuilderSubscriber'] ?? $container->load('getMenuBuilderSubscriberService')), 'onSetupNavbar'], 100);
        $instance->addListener('App\\Event\\ConfigureMainMenuEvent', [#[\Closure(name: 'App\\EventSubscriber\\MenuSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\MenuSubscriber'] ?? $container->load('getMenuSubscriberService')), 'onMainMenuConfigure'], 100);
        $instance->addListener('KevinPapst\\TablerBundle\\Event\\NotificationEvent', [#[\Closure(name: 'App\\EventSubscriber\\NotificationsSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\NotificationsSubscriber'] ??= new \App\EventSubscriber\NotificationsSubscriber()), 'onNotificationEvent'], 100);
        $instance->addListener('kernel.exception', [#[\Closure(name: 'App\\EventSubscriber\\PagerfantaExceptionSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\PagerfantaExceptionSubscriber'] ??= new \App\EventSubscriber\PagerfantaExceptionSubscriber()), 'onCoreException'], 1);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [#[\Closure(name: 'App\\EventSubscriber\\ProfileSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\ProfileSubscriber'] ?? $container->load('getProfileSubscriberService')), 'onFormLogin'], 0);
        $instance->addListener('kernel.request', [#[\Closure(name: 'App\\EventSubscriber\\RedirectToLocaleSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\RedirectToLocaleSubscriber'] ?? self::getRedirectToLocaleSubscriberService($container)), 'onKernelRequest'], 0);
        $instance->addListener('kernel.controller', [#[\Closure(name: 'App\\EventSubscriber\\ThemeOptionsSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\ThemeOptionsSubscriber'] ?? self::getThemeOptionsSubscriberService($container)), 'setThemeOptions'], 100);
        $instance->addListener('KevinPapst\\TablerBundle\\Event\\UserDetailsEvent', [#[\Closure(name: 'App\\EventSubscriber\\UserDetailsSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\UserDetailsSubscriber'] ?? $container->load('getUserDetailsSubscriberService')), 'onUserDetailsEvent'], 100);
        $instance->addListener('kernel.request', [#[\Closure(name: 'App\\EventSubscriber\\UserEnvironmentSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\UserEnvironmentSubscriber'] ?? self::getUserEnvironmentSubscriberService($container)), 'prepareEnvironment'], -100);
        $instance->addListener('App\\Event\\PrepareUserEvent', [#[\Closure(name: 'App\\EventSubscriber\\UserPreferenceSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\UserPreferenceSubscriber'] ?? $container->load('getUserPreferenceSubscriberService')), 'loadUserPreferences'], 200);
        $instance->addListener('kernel.controller', [#[\Closure(name: 'App\\EventSubscriber\\UserProfileSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\UserProfileSubscriber'] ?? self::getUserProfileSubscriberService($container)), 'prepareUserProfile'], 200);
        $instance->addListener('kernel.request', [#[\Closure(name: 'App\\EventSubscriber\\WizardSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\WizardSubscriber'] ?? self::getWizardSubscriberService($container)), 'onKernelRequest'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [#[\Closure(name: 'App\\Ldap\\LdapCredentialsSubscriber')] fn () => ($container->privates['App\\Ldap\\LdapCredentialsSubscriber'] ?? $container->load('getLdapCredentialsSubscriberService')), 'onCheckPassport'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LogoutEvent', [#[\Closure(name: 'App\\Saml\\SamlLogoutSubscriber')] fn () => ($container->privates['App\\Saml\\SamlLogoutSubscriber'] ?? $container->load('getSamlLogoutSubscriberService')), 'logout'], 0);
        $instance->addListener('kernel.controller_arguments', [#[\Closure(name: 'argument_resolver.request_payload', class: 'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\RequestPayloadValueResolver')] fn () => ($container->privates['argument_resolver.request_payload'] ?? self::getArgumentResolver_RequestPayloadService($container)), 'onKernelControllerArguments'], 0);
        $instance->addListener('kernel.response', [#[\Closure(name: 'response_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\ResponseListener')] fn () => ($container->privates['response_listener'] ??= new \Symfony\Component\HttpKernel\EventListener\ResponseListener('UTF-8', true)), 'onKernelResponse'], 0);
        $instance->addListener('kernel.request', [#[\Closure(name: 'locale_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\LocaleListener')] fn () => ($container->privates['locale_listener'] ?? self::getLocaleListenerService($container)), 'setDefaultLocale'], 100);
        $instance->addListener('kernel.request', [#[\Closure(name: 'locale_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\LocaleListener')] fn () => ($container->privates['locale_listener'] ?? self::getLocaleListenerService($container)), 'onKernelRequest'], 16);
        $instance->addListener('kernel.finish_request', [#[\Closure(name: 'locale_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\LocaleListener')] fn () => ($container->privates['locale_listener'] ?? self::getLocaleListenerService($container)), 'onKernelFinishRequest'], 0);
        $instance->addListener('kernel.request', [#[\Closure(name: 'validate_request_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\ValidateRequestListener')] fn () => ($container->privates['validate_request_listener'] ??= new \Symfony\Component\HttpKernel\EventListener\ValidateRequestListener()), 'onKernelRequest'], 256);
        $instance->addListener('kernel.response', [#[\Closure(name: 'disallow_search_engine_index_response_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\DisallowRobotsIndexingListener')] fn () => ($container->privates['disallow_search_engine_index_response_listener'] ??= new \Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener()), 'onResponse'], -255);
        $instance->addListener('kernel.controller_arguments', [#[\Closure(name: 'exception_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\ErrorListener')] fn () => ($container->privates['exception_listener'] ?? self::getExceptionListenerService($container)), 'onControllerArguments'], 0);
        $instance->addListener('kernel.exception', [#[\Closure(name: 'exception_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\ErrorListener')] fn () => ($container->privates['exception_listener'] ?? self::getExceptionListenerService($container)), 'logKernelException'], 0);
        $instance->addListener('kernel.exception', [#[\Closure(name: 'exception_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\ErrorListener')] fn () => ($container->privates['exception_listener'] ?? self::getExceptionListenerService($container)), 'onKernelException'], -128);
        $instance->addListener('kernel.response', [#[\Closure(name: 'exception_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\ErrorListener')] fn () => ($container->privates['exception_listener'] ?? self::getExceptionListenerService($container)), 'removeCspHeader'], -128);
        $instance->addListener('kernel.controller_arguments', [#[\Closure(name: 'controller.cache_attribute_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\CacheAttributeListener')] fn () => ($container->privates['controller.cache_attribute_listener'] ??= new \Symfony\Component\HttpKernel\EventListener\CacheAttributeListener()), 'onKernelControllerArguments'], 10);
        $instance->addListener('kernel.response', [#[\Closure(name: 'controller.cache_attribute_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\CacheAttributeListener')] fn () => ($container->privates['controller.cache_attribute_listener'] ??= new \Symfony\Component\HttpKernel\EventListener\CacheAttributeListener()), 'onKernelResponse'], -10);
        $instance->addListener('kernel.request', [#[\Closure(name: 'locale_aware_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\LocaleAwareListener')] fn () => ($container->privates['locale_aware_listener'] ?? self::getLocaleAwareListenerService($container)), 'onKernelRequest'], 15);
        $instance->addListener('kernel.finish_request', [#[\Closure(name: 'locale_aware_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\LocaleAwareListener')] fn () => ($container->privates['locale_aware_listener'] ?? self::getLocaleAwareListenerService($container)), 'onKernelFinishRequest'], -15);
        $instance->addListener('console.error', [#[\Closure(name: 'console.error_listener', class: 'Symfony\\Component\\Console\\EventListener\\ErrorListener')] fn () => ($container->privates['console.error_listener'] ?? $container->load('getConsole_ErrorListenerService')), 'onConsoleError'], -128);
        $instance->addListener('console.terminate', [#[\Closure(name: 'console.error_listener', class: 'Symfony\\Component\\Console\\EventListener\\ErrorListener')] fn () => ($container->privates['console.error_listener'] ?? $container->load('getConsole_ErrorListenerService')), 'onConsoleTerminate'], -128);
        $instance->addListener('console.error', [#[\Closure(name: 'console.suggest_missing_package_subscriber', class: 'Symfony\\Bundle\\FrameworkBundle\\EventListener\\SuggestMissingPackageSubscriber')] fn () => ($container->privates['console.suggest_missing_package_subscriber'] ??= new \Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber()), 'onConsoleError'], 0);
        $instance->addListener('Symfony\\Component\\Mailer\\Event\\MessageEvent', [#[\Closure(name: 'mailer.envelope_listener', class: 'Symfony\\Component\\Mailer\\EventListener\\EnvelopeListener')] fn () => ($container->privates['mailer.envelope_listener'] ??= new \Symfony\Component\Mailer\EventListener\EnvelopeListener(NULL, NULL)), 'onMessage'], -255);
        $instance->addListener('Symfony\\Component\\Mailer\\Event\\MessageEvent', [#[\Closure(name: 'mailer.message_logger_listener', class: 'Symfony\\Component\\Mailer\\EventListener\\MessageLoggerListener')] fn () => ($container->privates['mailer.message_logger_listener'] ??= new \Symfony\Component\Mailer\EventListener\MessageLoggerListener()), 'onMessage'], -255);
        $instance->addListener('Symfony\\Component\\Mailer\\Event\\MessageEvent', [#[\Closure(name: 'mailer.messenger_transport_listener', class: 'Symfony\\Component\\Mailer\\EventListener\\MessengerTransportListener')] fn () => ($container->privates['mailer.messenger_transport_listener'] ??= new \Symfony\Component\Mailer\EventListener\MessengerTransportListener()), 'onMessage'], 0);
        $instance->addListener('kernel.request', [#[\Closure(name: 'debug.debug_handlers_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\DebugHandlersListener')] fn () => ($container->privates['debug.debug_handlers_listener'] ??= new \Symfony\Component\HttpKernel\EventListener\DebugHandlersListener(NULL, $container->getEnv('bool:default::key:web:default:kernel.runtime_mode:'))), 'configure'], 2048);
        $instance->addListener('console.command', [#[\Closure(name: 'debug.debug_handlers_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\DebugHandlersListener')] fn () => ($container->privates['debug.debug_handlers_listener'] ??= new \Symfony\Component\HttpKernel\EventListener\DebugHandlersListener(NULL, $container->getEnv('bool:default::key:web:default:kernel.runtime_mode:'))), 'configure'], 2048);
        $instance->addListener('kernel.request', [#[\Closure(name: 'router_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\RouterListener')] fn () => ($container->privates['router_listener'] ?? self::getRouterListenerService($container)), 'onKernelRequest'], 32);
        $instance->addListener('kernel.finish_request', [#[\Closure(name: 'router_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\RouterListener')] fn () => ($container->privates['router_listener'] ?? self::getRouterListenerService($container)), 'onKernelFinishRequest'], 0);
        $instance->addListener('kernel.exception', [#[\Closure(name: 'router_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\RouterListener')] fn () => ($container->privates['router_listener'] ?? self::getRouterListenerService($container)), 'onKernelException'], -64);
        $instance->addListener('kernel.request', [#[\Closure(name: 'session_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\SessionListener')] fn () => ($container->privates['session_listener'] ?? self::getSessionListenerService($container)), 'onKernelRequest'], 128);
        $instance->addListener('kernel.response', [#[\Closure(name: 'session_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\SessionListener')] fn () => ($container->privates['session_listener'] ?? self::getSessionListenerService($container)), 'onKernelResponse'], -1000);
        $instance->addListener('kernel.response', [#[\Closure(name: 'profiler_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\ProfilerListener')] fn () => ($container->privates['profiler_listener'] ?? self::getProfilerListenerService($container)), 'onKernelResponse'], -100);
        $instance->addListener('kernel.exception', [#[\Closure(name: 'profiler_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\ProfilerListener')] fn () => ($container->privates['profiler_listener'] ?? self::getProfilerListenerService($container)), 'onKernelException'], 0);
        $instance->addListener('kernel.terminate', [#[\Closure(name: 'profiler_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\ProfilerListener')] fn () => ($container->privates['profiler_listener'] ?? self::getProfilerListenerService($container)), 'onKernelTerminate'], -1024);
        $instance->addListener('console.command', [#[\Closure(name: 'console_profiler_listener', class: 'Symfony\\Bundle\\FrameworkBundle\\EventListener\\ConsoleProfilerListener')] fn () => ($container->privates['console_profiler_listener'] ?? $container->load('getConsoleProfilerListenerService')), 'initialize'], 4096);
        $instance->addListener('console.error', [#[\Closure(name: 'console_profiler_listener', class: 'Symfony\\Bundle\\FrameworkBundle\\EventListener\\ConsoleProfilerListener')] fn () => ($container->privates['console_profiler_listener'] ?? $container->load('getConsoleProfilerListenerService')), 'catch'], -2048);
        $instance->addListener('console.terminate', [#[\Closure(name: 'console_profiler_listener', class: 'Symfony\\Bundle\\FrameworkBundle\\EventListener\\ConsoleProfilerListener')] fn () => ($container->privates['console_profiler_listener'] ?? $container->load('getConsoleProfilerListenerService')), 'profile'], -4096);
        $instance->addListener('kernel.controller', [#[\Closure(name: 'data_collector.request', class: 'Symfony\\Component\\HttpKernel\\DataCollector\\RequestDataCollector')] fn () => ($container->privates['data_collector.request'] ?? self::getDataCollector_RequestService($container)), 'onKernelController'], 0);
        $instance->addListener('kernel.response', [#[\Closure(name: 'data_collector.request', class: 'Symfony\\Component\\HttpKernel\\DataCollector\\RequestDataCollector')] fn () => ($container->privates['data_collector.request'] ?? self::getDataCollector_RequestService($container)), 'onKernelResponse'], 0);
        $instance->addListener('console.command', [#[\Closure(name: 'monolog.handler.console', class: 'Symfony\\Bridge\\Monolog\\Handler\\ConsoleHandler')] fn () => ($container->privates['monolog.handler.console'] ?? self::getMonolog_Handler_ConsoleService($container)), 'onCommand'], 255);
        $instance->addListener('console.terminate', [#[\Closure(name: 'monolog.handler.console', class: 'Symfony\\Bridge\\Monolog\\Handler\\ConsoleHandler')] fn () => ($container->privates['monolog.handler.console'] ?? self::getMonolog_Handler_ConsoleService($container)), 'onTerminate'], -255);
        $instance->addListener('kernel.response', [#[\Closure(name: 'web_profiler.debug_toolbar', class: 'Symfony\\Bundle\\WebProfilerBundle\\EventListener\\WebDebugToolbarListener')] fn () => ($container->privates['web_profiler.debug_toolbar'] ?? self::getWebProfiler_DebugToolbarService($container)), 'onKernelResponse'], -128);
        $instance->addListener('kernel.view', [#[\Closure(name: 'controller.template_attribute_listener', class: 'Symfony\\Bridge\\Twig\\EventListener\\TemplateAttributeListener')] fn () => ($container->privates['controller.template_attribute_listener'] ?? $container->load('getController_TemplateAttributeListenerService')), 'onKernelView'], -128);
        $instance->addListener('Symfony\\Component\\Mailer\\Event\\MessageEvent', [#[\Closure(name: 'twig.mailer.message_listener', class: 'Symfony\\Component\\Mailer\\EventListener\\MessageListener')] fn () => ($container->privates['twig.mailer.message_listener'] ?? $container->load('getTwig_Mailer_MessageListenerService')), 'onMessage'], 0);
        $instance->addListener('kernel.controller_arguments', [#[\Closure(name: 'controller.is_granted_attribute_listener', class: 'Symfony\\Component\\Security\\Http\\EventListener\\IsGrantedAttributeListener')] fn () => ($container->privates['controller.is_granted_attribute_listener'] ?? self::getController_IsGrantedAttributeListenerService($container)), 'onKernelControllerArguments'], 20);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [#[\Closure(name: 'security.listener.check_authenticator_credentials', class: 'Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener')] fn () => ($container->privates['security.listener.check_authenticator_credentials'] ?? $container->load('getSecurity_Listener_CheckAuthenticatorCredentialsService')), 'checkPassport'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [#[\Closure(name: 'security.listener.password_migrating', class: 'Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener')] fn () => ($container->privates['security.listener.password_migrating'] ?? $container->load('getSecurity_Listener_PasswordMigratingService')), 'onLoginSuccess'], 0);
        $instance->addListener('debug.security.authorization.vote', [#[\Closure(name: 'debug.security.voter.vote_listener', class: 'Symfony\\Bundle\\SecurityBundle\\EventListener\\VoteListener')] fn () => ($container->privates['debug.security.voter.vote_listener'] ?? $container->load('getDebug_Security_Voter_VoteListenerService')), 'onVoterVote'], 0);
        $instance->addListener('kernel.request', [#[\Closure(name: 'debug.security.firewall', class: 'Symfony\\Bundle\\SecurityBundle\\Debug\\TraceableFirewallListener')] fn () => ($container->privates['debug.security.firewall'] ?? self::getDebug_Security_FirewallService($container)), 'configureLogoutUrlGenerator'], 8);
        $instance->addListener('kernel.request', [#[\Closure(name: 'debug.security.firewall', class: 'Symfony\\Bundle\\SecurityBundle\\Debug\\TraceableFirewallListener')] fn () => ($container->privates['debug.security.firewall'] ?? self::getDebug_Security_FirewallService($container)), 'onKernelRequest'], 8);
        $instance->addListener('kernel.finish_request', [#[\Closure(name: 'debug.security.firewall', class: 'Symfony\\Bundle\\SecurityBundle\\Debug\\TraceableFirewallListener')] fn () => ($container->privates['debug.security.firewall'] ?? self::getDebug_Security_FirewallService($container)), 'onKernelFinishRequest'], 0);
        $instance->addListener('kernel.exception', [#[\Closure(name: 'security.authentication.kernel_exception_listener.two_factor.secured_area', class: 'Scheb\\TwoFactorBundle\\Security\\Http\\Firewall\\ExceptionListener')] fn () => ($container->privates['security.authentication.kernel_exception_listener.two_factor.secured_area'] ?? $container->load('getSecurity_Authentication_KernelExceptionListener_TwoFactor_SecuredAreaService')), 'onKernelException'], 2);
        $instance->addListener('kernel.request', [#[\Closure(name: 'security.authentication.form_listener.two_factor.secured_area', class: 'Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Event\\TwoFactorFormListener')] fn () => ($container->privates['security.authentication.form_listener.two_factor.secured_area'] ?? self::getSecurity_Authentication_FormListener_TwoFactor_SecuredAreaService($container)), 'onKernelRequest'], 0);
        $instance->addListener('security.authentication.success', [#[\Closure(name: 'security.authentication.provider_preparation_listener.two_factor.secured_area', class: 'Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Provider\\TwoFactorProviderPreparationListener')] fn () => ($container->privates['security.authentication.provider_preparation_listener.two_factor.secured_area'] ?? self::getSecurity_Authentication_ProviderPreparationListener_TwoFactor_SecuredAreaService($container)), 'onLogin'], 9223372036854775807);
        $instance->addListener('scheb_two_factor.authentication.require', [#[\Closure(name: 'security.authentication.provider_preparation_listener.two_factor.secured_area', class: 'Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Provider\\TwoFactorProviderPreparationListener')] fn () => ($container->privates['security.authentication.provider_preparation_listener.two_factor.secured_area'] ?? self::getSecurity_Authentication_ProviderPreparationListener_TwoFactor_SecuredAreaService($container)), 'onAccessDenied'], 0);
        $instance->addListener('scheb_two_factor.authentication.form', [#[\Closure(name: 'security.authentication.provider_preparation_listener.two_factor.secured_area', class: 'Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Provider\\TwoFactorProviderPreparationListener')] fn () => ($container->privates['security.authentication.provider_preparation_listener.two_factor.secured_area'] ?? self::getSecurity_Authentication_ProviderPreparationListener_TwoFactor_SecuredAreaService($container)), 'onTwoFactorForm'], 0);
        $instance->addListener('kernel.response', [#[\Closure(name: 'security.authentication.provider_preparation_listener.two_factor.secured_area', class: 'Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Provider\\TwoFactorProviderPreparationListener')] fn () => ($container->privates['security.authentication.provider_preparation_listener.two_factor.secured_area'] ?? self::getSecurity_Authentication_ProviderPreparationListener_TwoFactor_SecuredAreaService($container)), 'onKernelResponse'], 1);
        $instance->addListener('kernel.response', [#[\Closure(name: 'security.rememberme.response_listener', class: 'Symfony\\Component\\Security\\Http\\RememberMe\\ResponseListener')] fn () => ($container->privates['security.rememberme.response_listener'] ??= new \Symfony\Component\Security\Http\RememberMe\ResponseListener()), 'onKernelResponse'], 0);
        $instance->addListener('console.command', [#[\Closure(name: 'debug.dump_listener', class: 'Symfony\\Component\\HttpKernel\\EventListener\\DumpListener')] fn () => ($container->privates['debug.dump_listener'] ?? $container->load('getDebug_DumpListenerService')), 'configure'], 1024);
        $instance->addListener('kernel.exception', [#[\Closure(name: 'fos_rest.exception.response_status_code_listener', class: 'FOS\\RestBundle\\EventListener\\ResponseStatusCodeListener')] fn () => ($container->privates['fos_rest.exception.response_status_code_listener'] ?? self::getFosRest_Exception_ResponseStatusCodeListenerService($container)), 'getResponseStatusCodeFromThrowable'], 0);
        $instance->addListener('kernel.response', [#[\Closure(name: 'fos_rest.exception.response_status_code_listener', class: 'FOS\\RestBundle\\EventListener\\ResponseStatusCodeListener')] fn () => ($container->privates['fos_rest.exception.response_status_code_listener'] ?? self::getFosRest_Exception_ResponseStatusCodeListenerService($container)), 'setResponseStatusCode'], 0);
        $instance->addListener('kernel.controller', [#[\Closure(name: 'fos_rest.view_response_listener', class: 'FOS\\RestBundle\\EventListener\\ViewResponseListener')] fn () => ($container->privates['fos_rest.view_response_listener'] ?? self::getFosRest_ViewResponseListenerService($container)), 'onKernelController'], 0);
        $instance->addListener('kernel.view', [#[\Closure(name: 'fos_rest.view_response_listener', class: 'FOS\\RestBundle\\EventListener\\ViewResponseListener')] fn () => ($container->privates['fos_rest.view_response_listener'] ?? self::getFosRest_ViewResponseListenerService($container)), 'onKernelView'], 30);
        $instance->addListener('kernel.finish_request', [#[\Closure(name: 'Symfony\\WebpackEncoreBundle\\EventListener\\ResetAssetsEventListener')] fn () => ($container->privates['Symfony\\WebpackEncoreBundle\\EventListener\\ResetAssetsEventListener'] ?? self::getResetAssetsEventListenerService($container)), 'resetAssets'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [#[\Closure(name: 'scheb_two_factor.security.listener.check_two_factor_code', class: 'Scheb\\TwoFactorBundle\\Security\\Http\\EventListener\\CheckTwoFactorCodeListener')] fn () => ($container->privates['scheb_two_factor.security.listener.check_two_factor_code'] ?? $container->load('getSchebTwoFactor_Security_Listener_CheckTwoFactorCodeService')), 'checkPassport'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [#[\Closure(name: 'scheb_two_factor.security.listener.suppress_remember_me', class: 'Scheb\\TwoFactorBundle\\Security\\Http\\EventListener\\SuppressRememberMeListener')] fn () => ($container->privates['scheb_two_factor.security.listener.suppress_remember_me'] ??= new \Scheb\TwoFactorBundle\Security\Http\EventListener\SuppressRememberMeListener()), 'onSuccessfulLogin'], -63);
        $instance->addListener('security.authentication.success', [#[\Closure(name: 'scheb_two_factor.security.authentication_success_event_suppressor', class: 'Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Event\\AuthenticationSuccessEventSuppressor')] fn () => ($container->privates['scheb_two_factor.security.authentication_success_event_suppressor'] ??= new \Scheb\TwoFactorBundle\Security\TwoFactor\Event\AuthenticationSuccessEventSuppressor()), 'onLogin'], 9223372036854775806);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [#[\Closure(name: 'security.listener.csrf_protection', class: 'Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener')] fn () => ($container->privates['security.listener.csrf_protection'] ?? $container->load('getSecurity_Listener_CsrfProtectionService')), 'checkPassport'], 512);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LogoutEvent', [#[\Closure(name: 'security.logout.listener.csrf_token_clearing', class: 'Symfony\\Component\\Security\\Http\\EventListener\\CsrfTokenClearingLogoutListener')] fn () => ($container->privates['security.logout.listener.csrf_token_clearing'] ?? $container->load('getSecurity_Logout_Listener_CsrfTokenClearingService')), 'onLogout'], 0);

        return $instance;
    }

    /**
     * Gets the public 'fos_rest.view_handler' shared service.
     *
     * @return \FOS\RestBundle\View\ViewHandler
     */
    protected static function getFosRest_ViewHandlerService($container)
    {
        $a = ($container->privates['fos_rest.serializer.jms'] ?? self::getFosRest_Serializer_JmsService($container));

        if (isset($container->services['fos_rest.view_handler'])) {
            return $container->services['fos_rest.view_handler'];
        }

        return $container->services['fos_rest.view_handler'] = \FOS\RestBundle\View\ViewHandler::create(($container->services['router'] ?? self::getRouterService($container)), $a, ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()), ['json' => false], 400, 204, false, ['serializeNullStrategy' => true]);
    }

    /**
     * Gets the public 'http_kernel' shared service.
     *
     * @return \Symfony\Component\HttpKernel\HttpKernel
     */
    protected static function getHttpKernelService($container)
    {
        $a = ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container));

        if (isset($container->services['http_kernel'])) {
            return $container->services['http_kernel'];
        }
        $b = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver($container, ($container->privates['monolog.logger.request'] ?? self::getMonolog_Logger_RequestService($container)));
        $b->allowControllers(['Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController', 'Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController']);
        $b->allowControllers(['App\\Kernel', 'App\\API\\ActionsController', 'App\\API\\ActivityController', 'App\\API\\ConfigurationController', 'App\\API\\CustomerController', 'App\\API\\InvoiceController', 'App\\API\\ProjectController', 'App\\API\\StatusController', 'App\\API\\TagController', 'App\\API\\TeamController', 'App\\API\\TimesheetController', 'App\\API\\UserController', 'App\\Controller\\AboutController', 'App\\Controller\\ActivityController', 'App\\Controller\\Auth\\SamlController', 'App\\Controller\\BookmarkController', 'App\\Controller\\CalendarController', 'App\\Controller\\ContractController', 'App\\Controller\\CustomerController', 'App\\Controller\\DashboardController', 'App\\Controller\\DoctorController', 'App\\Controller\\ExportController', 'App\\Controller\\FavoriteController', 'App\\Controller\\HelpController', 'App\\Controller\\HomepageController', 'App\\Controller\\InvoiceController', 'App\\Controller\\PermissionController', 'App\\Controller\\PluginController', 'App\\Controller\\ProfileController', 'App\\Controller\\ProjectController', 'App\\Controller\\QuickEntryController', 'App\\Controller\\ReportingController', 'App\\Controller\\Reporting\\CustomerMonthlyProjectsController', 'App\\Controller\\Reporting\\ProjectDateRangeController', 'App\\Controller\\Reporting\\ProjectDetailsController', 'App\\Controller\\Reporting\\ProjectInactiveController', 'App\\Controller\\Reporting\\ProjectViewController', 'App\\Controller\\Reporting\\ReportUsersMonthController', 'App\\Controller\\Reporting\\ReportUsersWeekController', 'App\\Controller\\Reporting\\ReportUsersYearController', 'App\\Controller\\Reporting\\UserMonthController', 'App\\Controller\\Reporting\\UserWeekController', 'App\\Controller\\Reporting\\UserYearController', 'App\\Controller\\Security\\LoginLinkController', 'App\\Controller\\Security\\PasswordResetController', 'App\\Controller\\Security\\SecurityController', 'App\\Controller\\Security\\SelfRegistrationController', 'App\\Controller\\SystemConfigurationController', 'App\\Controller\\TagController', 'App\\Controller\\TeamController', 'App\\Controller\\TimesheetController', 'App\\Controller\\TimesheetTeamController', 'App\\Controller\\UserController', 'App\\Controller\\WidgetController', 'App\\Controller\\WizardController', 'Doctrine\\Bundle\\DoctrineBundle\\Controller\\ProfilerController']);
        $c = ($container->services['debug.stopwatch'] ??= new \Symfony\Component\Stopwatch\Stopwatch(true));

        return $container->services['http_kernel'] = new \Symfony\Component\HttpKernel\HttpKernel($a, new \Symfony\Component\HttpKernel\Controller\TraceableControllerResolver($b, $c), ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()), new \Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver(new \Symfony\Component\HttpKernel\Controller\ArgumentResolver(($container->privates['argument_metadata_factory'] ??= new \Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory()), new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['.debug.value_resolver.security.user_value_resolver'] ?? $container->load('get_Debug_ValueResolver_Security_UserValueResolverService'));
            yield 1 => ($container->privates['.debug.value_resolver.security.security_token_value_resolver'] ?? $container->load('get_Debug_ValueResolver_Security_SecurityTokenValueResolverService'));
            yield 2 => ($container->privates['.debug.value_resolver.doctrine.orm.entity_value_resolver'] ?? $container->load('get_Debug_ValueResolver_Doctrine_Orm_EntityValueResolverService'));
            yield 3 => ($container->privates['.debug.value_resolver.argument_resolver.backed_enum_resolver'] ?? $container->load('get_Debug_ValueResolver_ArgumentResolver_BackedEnumResolverService'));
            yield 4 => ($container->privates['.debug.value_resolver.argument_resolver.datetime'] ?? $container->load('get_Debug_ValueResolver_ArgumentResolver_DatetimeService'));
            yield 5 => ($container->privates['.debug.value_resolver.argument_resolver.request_attribute'] ?? $container->load('get_Debug_ValueResolver_ArgumentResolver_RequestAttributeService'));
            yield 6 => ($container->privates['.debug.value_resolver.argument_resolver.request'] ?? $container->load('get_Debug_ValueResolver_ArgumentResolver_RequestService'));
            yield 7 => ($container->privates['.debug.value_resolver.argument_resolver.session'] ?? $container->load('get_Debug_ValueResolver_ArgumentResolver_SessionService'));
            yield 8 => ($container->privates['.debug.value_resolver.argument_resolver.service'] ?? $container->load('get_Debug_ValueResolver_ArgumentResolver_ServiceService'));
            yield 9 => ($container->privates['.debug.value_resolver.argument_resolver.default'] ?? $container->load('get_Debug_ValueResolver_ArgumentResolver_DefaultService'));
            yield 10 => ($container->privates['.debug.value_resolver.argument_resolver.variadic'] ?? $container->load('get_Debug_ValueResolver_ArgumentResolver_VariadicService'));
            yield 11 => ($container->privates['.debug.value_resolver.argument_resolver.not_tagged_controller'] ?? $container->load('get_Debug_ValueResolver_ArgumentResolver_NotTaggedControllerService'));
        }, 12), new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'Symfony\\Bridge\\Doctrine\\ArgumentResolver\\EntityValueResolver' => ['privates', '.debug.value_resolver.doctrine.orm.entity_value_resolver', 'get_Debug_ValueResolver_Doctrine_Orm_EntityValueResolverService', true],
            'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\BackedEnumValueResolver' => ['privates', '.debug.value_resolver.argument_resolver.backed_enum_resolver', 'get_Debug_ValueResolver_ArgumentResolver_BackedEnumResolverService', true],
            'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\DateTimeValueResolver' => ['privates', '.debug.value_resolver.argument_resolver.datetime', 'get_Debug_ValueResolver_ArgumentResolver_DatetimeService', true],
            'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\DefaultValueResolver' => ['privates', '.debug.value_resolver.argument_resolver.default', 'get_Debug_ValueResolver_ArgumentResolver_DefaultService', true],
            'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\QueryParameterValueResolver' => ['privates', '.debug.value_resolver.argument_resolver.query_parameter_value_resolver', 'get_Debug_ValueResolver_ArgumentResolver_QueryParameterValueResolverService', true],
            'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\RequestAttributeValueResolver' => ['privates', '.debug.value_resolver.argument_resolver.request_attribute', 'get_Debug_ValueResolver_ArgumentResolver_RequestAttributeService', true],
            'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\RequestPayloadValueResolver' => ['privates', '.debug.value_resolver.argument_resolver.request_payload', 'get_Debug_ValueResolver_ArgumentResolver_RequestPayloadService', true],
            'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\RequestValueResolver' => ['privates', '.debug.value_resolver.argument_resolver.request', 'get_Debug_ValueResolver_ArgumentResolver_RequestService', true],
            'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\ServiceValueResolver' => ['privates', '.debug.value_resolver.argument_resolver.service', 'get_Debug_ValueResolver_ArgumentResolver_ServiceService', true],
            'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\SessionValueResolver' => ['privates', '.debug.value_resolver.argument_resolver.session', 'get_Debug_ValueResolver_ArgumentResolver_SessionService', true],
            'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\VariadicValueResolver' => ['privates', '.debug.value_resolver.argument_resolver.variadic', 'get_Debug_ValueResolver_ArgumentResolver_VariadicService', true],
            'Symfony\\Component\\Security\\Http\\Controller\\SecurityTokenValueResolver' => ['privates', '.debug.value_resolver.security.security_token_value_resolver', 'get_Debug_ValueResolver_Security_SecurityTokenValueResolverService', true],
            'Symfony\\Component\\Security\\Http\\Controller\\UserValueResolver' => ['privates', '.debug.value_resolver.security.user_value_resolver', 'get_Debug_ValueResolver_Security_UserValueResolverService', true],
            'argument_resolver.not_tagged_controller' => ['privates', '.debug.value_resolver.argument_resolver.not_tagged_controller', 'get_Debug_ValueResolver_ArgumentResolver_NotTaggedControllerService', true],
        ], [
            'Symfony\\Bridge\\Doctrine\\ArgumentResolver\\EntityValueResolver' => '?',
            'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\BackedEnumValueResolver' => '?',
            'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\DateTimeValueResolver' => '?',
            'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\DefaultValueResolver' => '?',
            'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\QueryParameterValueResolver' => '?',
            'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\RequestAttributeValueResolver' => '?',
            'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\RequestPayloadValueResolver' => '?',
            'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\RequestValueResolver' => '?',
            'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\ServiceValueResolver' => '?',
            'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\SessionValueResolver' => '?',
            'Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\VariadicValueResolver' => '?',
            'Symfony\\Component\\Security\\Http\\Controller\\SecurityTokenValueResolver' => '?',
            'Symfony\\Component\\Security\\Http\\Controller\\UserValueResolver' => '?',
            'argument_resolver.not_tagged_controller' => '?',
        ])), $c), true);
    }

    /**
     * Gets the public 'jms_serializer' shared service.
     *
     * @return \JMS\Serializer\Serializer
     */
    protected static function getJmsSerializerService($container)
    {
        $a = ($container->privates['jms_serializer.traceable_handler_registry'] ?? self::getJmsSerializer_TraceableHandlerRegistryService($container));

        if (isset($container->services['jms_serializer'])) {
            return $container->services['jms_serializer'];
        }
        $b = ($container->privates['jms_serializer.traceable_metadata_factory'] ?? self::getJmsSerializer_TraceableMetadataFactoryService($container));
        $c = ($container->privates['jms_serializer.expression_evaluator'] ?? self::getJmsSerializer_ExpressionEvaluatorService($container));

        $d = new \JMS\Serializer\Accessor\DefaultAccessorStrategy($c);
        $e = ($container->privates['jms_serializer.event_dispatcher'] ?? self::getJmsSerializer_EventDispatcherService($container));
        $f = new \JMS\Serializer\Visitor\Factory\JsonSerializationVisitorFactory();
        $f->setOptions(1088);
        $g = new \JMS\Serializer\Visitor\Factory\XmlSerializationVisitorFactory();
        $g->setFormatOutput(true);
        $h = new \JMS\Serializer\Visitor\Factory\JsonDeserializationVisitorFactory(false);
        $h->setOptions(0);

        return $container->services['jms_serializer'] = new \JMS\Serializer\Serializer($b, [2 => new \JMS\Serializer\GraphNavigator\Factory\DeserializationGraphNavigatorFactory($b, $a, new \JMS\Serializer\Construction\DoctrineObjectConstructor(($container->services['doctrine'] ?? self::getDoctrineService($container)), new \JMS\Serializer\Construction\UnserializeObjectConstructor(), 'null'), $d, $e, $c), 1 => new \JMS\Serializer\GraphNavigator\Factory\SerializationGraphNavigatorFactory($b, $a, $d, $e, $c)], ['json' => $f, 'xml' => $g], ['json' => $h, 'xml' => new \JMS\Serializer\Visitor\Factory\XmlDeserializationVisitorFactory()], ($container->services['jms_serializer.serialization_context_factory'] ??= new \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory()), ($container->services['jms_serializer.deserialization_context_factory'] ??= new \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory()), ($container->privates['jms_serializer.type_parser'] ??= new \JMS\Serializer\Type\Parser()));
    }

    /**
     * Gets the public 'jms_serializer.authorization_checker' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\AuthorizationChecker
     */
    protected static function getJmsSerializer_AuthorizationCheckerService($container)
    {
        $a = ($container->privates['debug.security.access.decision_manager'] ?? self::getDebug_Security_Access_DecisionManagerService($container));

        if (isset($container->services['jms_serializer.authorization_checker'])) {
            return $container->services['jms_serializer.authorization_checker'];
        }

        return $container->services['jms_serializer.authorization_checker'] = new \Symfony\Component\Security\Core\Authorization\AuthorizationChecker(($container->privates['security.token_storage'] ?? self::getSecurity_TokenStorageService($container)), $a, false, false);
    }

    /**
     * Gets the public 'jms_serializer.deserialization_context_factory' shared service.
     *
     * @return \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory
     */
    protected static function getJmsSerializer_DeserializationContextFactoryService($container)
    {
        return $container->services['jms_serializer.deserialization_context_factory'] = new \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory();
    }

    /**
     * Gets the public 'jms_serializer.serialization_context_factory' shared service.
     *
     * @return \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory
     */
    protected static function getJmsSerializer_SerializationContextFactoryService($container)
    {
        return $container->services['jms_serializer.serialization_context_factory'] = new \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory();
    }

    /**
     * Gets the public 'request_stack' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\RequestStack
     */
    protected static function getRequestStackService($container)
    {
        return $container->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack();
    }

    /**
     * Gets the public 'router' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Routing\Router
     */
    protected static function getRouterService($container)
    {
        $a = new \Monolog\Logger('router');
        $a->pushProcessor([($container->privates['App\\Logger\\LogProcessor'] ??= new \App\Logger\LogProcessor()), '__invoke']);
        $a->pushHandler(($container->privates['monolog.handler.console'] ?? self::getMonolog_Handler_ConsoleService($container)));
        $a->pushHandler(($container->privates['monolog.handler.main'] ?? self::getMonolog_Handler_MainService($container)));
        ($container->privates['debug.debug_logger_configurator'] ?? self::getDebug_DebugLoggerConfiguratorService($container))->pushDebugLogger($a);

        $container->services['router'] = $instance = new \Symfony\Bundle\FrameworkBundle\Routing\Router((new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'routing.loader' => ['services', 'routing.loader', 'getRouting_LoaderService', true],
        ], [
            'routing.loader' => 'Symfony\\Component\\Config\\Loader\\LoaderInterface',
        ]))->withContext('router.default', $container), 'kernel::loadRoutes', ['cache_dir' => $container->targetDir.'', 'debug' => true, 'generator_class' => 'Symfony\\Component\\Routing\\Generator\\CompiledUrlGenerator', 'generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\CompiledUrlGeneratorDumper', 'matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableCompiledUrlMatcher', 'matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\CompiledUrlMatcherDumper', 'strict_requirements' => true, 'resource_type' => 'service'], ($container->privates['router.request_context'] ?? self::getRouter_RequestContextService($container)), ($container->privates['parameter_bag'] ??= new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($container)), $a, 'en');

        $instance->setConfigCacheFactory(($container->privates['config_cache_factory'] ?? self::getConfigCacheFactoryService($container)));
        $instance->addExpressionLanguageProvider(($container->privates['router.expression_language_provider'] ?? self::getRouter_ExpressionLanguageProviderService($container)));

        return $instance;
    }

    /**
     * Gets the public 'translator' shared service.
     *
     * @return \Symfony\Component\Translation\DataCollectorTranslator
     */
    protected static function getTranslatorService($container)
    {
        return $container->services['translator'] = new \Symfony\Component\Translation\DataCollectorTranslator(($container->privates['translator.default'] ?? self::getTranslator_DefaultService($container)));
    }

    /**
     * Gets the public 'var_dumper.cloner' shared service.
     *
     * @return \Symfony\Component\VarDumper\Cloner\VarCloner
     */
    protected static function getVarDumper_ClonerService($container)
    {
        $container->services['var_dumper.cloner'] = $instance = new \Symfony\Component\VarDumper\Cloner\VarCloner();

        $instance->setMaxItems(2500);
        $instance->setMinDepth(1);
        $instance->setMaxString(-1);
        $instance->addCasters(['Closure' => 'Symfony\\Component\\VarDumper\\Caster\\ReflectionCaster::unsetClosureFileInfo']);

        return $instance;
    }

    /**
     * Gets the private '.debug.http_client' shared service.
     *
     * @return \Symfony\Component\HttpClient\TraceableHttpClient
     */
    protected static function get_Debug_HttpClientService($container)
    {
        return $container->privates['.debug.http_client'] = new \Symfony\Component\HttpClient\TraceableHttpClient(new \Symfony\Component\HttpClient\UriTemplateHttpClient(($container->privates['http_client.transport'] ?? self::getHttpClient_TransportService($container)), NULL, []), ($container->services['debug.stopwatch'] ??= new \Symfony\Component\Stopwatch\Stopwatch(true)));
    }

    /**
     * Gets the private '.service_locator.RFTfNqi' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected static function get_ServiceLocator_RFTfNqiService($container)
    {
        return $container->privates['.service_locator.RFTfNqi'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'security.firewall.map.context.api' => ['privates', 'security.firewall.map.context.api', 'getSecurity_Firewall_Map_Context_ApiService', true],
            'security.firewall.map.context.dev' => ['privates', 'security.firewall.map.context.dev', 'getSecurity_Firewall_Map_Context_DevService', true],
            'security.firewall.map.context.secured_area' => ['privates', 'security.firewall.map.context.secured_area', 'getSecurity_Firewall_Map_Context_SecuredAreaService', true],
        ], [
            'security.firewall.map.context.api' => '?',
            'security.firewall.map.context.dev' => '?',
            'security.firewall.map.context.secured_area' => '?',
        ]);
    }

    /**
     * Gets the private 'App\Configuration\ConfigurationService' shared autowired service.
     *
     * @return \App\Configuration\ConfigurationService
     */
    protected static function getConfigurationServiceService($container)
    {
        $a = ($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container));

        if (isset($container->privates['App\\Configuration\\ConfigurationService'])) {
            return $container->privates['App\\Configuration\\ConfigurationService'];
        }

        return $container->privates['App\\Configuration\\ConfigurationService'] = new \App\Configuration\ConfigurationService($a->getRepository('App\\Entity\\Configuration'), ($container->services['cache.app'] ?? self::getCache_AppService($container)));
    }

    /**
     * Gets the private 'App\Configuration\LocaleService' shared autowired service.
     *
     * @return \App\Configuration\LocaleService
     */
    protected static function getLocaleServiceService($container)
    {
        return $container->privates['App\\Configuration\\LocaleService'] = new \App\Configuration\LocaleService($container->parameters['kimai.languages']);
    }

    /**
     * Gets the private 'App\Configuration\SystemConfiguration' shared autowired service.
     *
     * @return \App\Configuration\SystemConfiguration
     */
    protected static function getSystemConfigurationService($container)
    {
        $a = ($container->privates['App\\Configuration\\ConfigurationService'] ?? self::getConfigurationServiceService($container));

        if (isset($container->privates['App\\Configuration\\SystemConfiguration'])) {
            return $container->privates['App\\Configuration\\SystemConfiguration'];
        }

        return $container->privates['App\\Configuration\\SystemConfiguration'] = new \App\Configuration\SystemConfiguration($a, $container->parameters['kimai.config']);
    }

    /**
     * Gets the private 'App\EventSubscriber\RedirectToLocaleSubscriber' shared autowired service.
     *
     * @return \App\EventSubscriber\RedirectToLocaleSubscriber
     */
    protected static function getRedirectToLocaleSubscriberService($container)
    {
        return $container->privates['App\\EventSubscriber\\RedirectToLocaleSubscriber'] = new \App\EventSubscriber\RedirectToLocaleSubscriber(($container->services['router'] ?? self::getRouterService($container)), ($container->privates['App\\Configuration\\LocaleService'] ?? self::getLocaleServiceService($container)));
    }

    /**
     * Gets the private 'App\EventSubscriber\ThemeOptionsSubscriber' shared autowired service.
     *
     * @return \App\EventSubscriber\ThemeOptionsSubscriber
     */
    protected static function getThemeOptionsSubscriberService($container)
    {
        return $container->privates['App\\EventSubscriber\\ThemeOptionsSubscriber'] = new \App\EventSubscriber\ThemeOptionsSubscriber(($container->privates['security.token_storage'] ?? self::getSecurity_TokenStorageService($container)), ($container->privates['tabler_bundle.context_helper'] ?? self::getTablerBundle_ContextHelperService($container)), ($container->privates['App\\Configuration\\LocaleService'] ?? self::getLocaleServiceService($container)));
    }

    /**
     * Gets the private 'App\EventSubscriber\UserEnvironmentSubscriber' shared autowired service.
     *
     * @return \App\EventSubscriber\UserEnvironmentSubscriber
     */
    protected static function getUserEnvironmentSubscriberService($container)
    {
        $a = ($container->services['jms_serializer.authorization_checker'] ?? self::getJmsSerializer_AuthorizationCheckerService($container));

        if (isset($container->privates['App\\EventSubscriber\\UserEnvironmentSubscriber'])) {
            return $container->privates['App\\EventSubscriber\\UserEnvironmentSubscriber'];
        }

        return $container->privates['App\\EventSubscriber\\UserEnvironmentSubscriber'] = new \App\EventSubscriber\UserEnvironmentSubscriber(($container->privates['security.token_storage'] ?? self::getSecurity_TokenStorageService($container)), $a, ($container->privates['App\\Twig\\LocaleFormatExtensions'] ?? self::getLocaleFormatExtensionsService($container)));
    }

    /**
     * Gets the private 'App\EventSubscriber\UserProfileSubscriber' shared autowired service.
     *
     * @return \App\EventSubscriber\UserProfileSubscriber
     */
    protected static function getUserProfileSubscriberService($container)
    {
        $a = ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container));

        if (isset($container->privates['App\\EventSubscriber\\UserProfileSubscriber'])) {
            return $container->privates['App\\EventSubscriber\\UserProfileSubscriber'];
        }

        return $container->privates['App\\EventSubscriber\\UserProfileSubscriber'] = new \App\EventSubscriber\UserProfileSubscriber($a, ($container->privates['security.token_storage'] ?? self::getSecurity_TokenStorageService($container)));
    }

    /**
     * Gets the private 'App\EventSubscriber\WizardSubscriber' shared autowired service.
     *
     * @return \App\EventSubscriber\WizardSubscriber
     */
    protected static function getWizardSubscriberService($container)
    {
        $a = ($container->services['jms_serializer.authorization_checker'] ?? self::getJmsSerializer_AuthorizationCheckerService($container));

        if (isset($container->privates['App\\EventSubscriber\\WizardSubscriber'])) {
            return $container->privates['App\\EventSubscriber\\WizardSubscriber'];
        }

        return $container->privates['App\\EventSubscriber\\WizardSubscriber'] = new \App\EventSubscriber\WizardSubscriber(($container->services['router'] ?? self::getRouterService($container)), $a, ($container->privates['security.token_storage'] ?? self::getSecurity_TokenStorageService($container)));
    }

    /**
     * Gets the private 'App\Repository\BookmarkRepository' shared autowired service.
     *
     * @return \App\Repository\BookmarkRepository
     */
    protected static function getBookmarkRepositoryService($container)
    {
        return $container->privates['App\\Repository\\BookmarkRepository'] = ($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container))->getRepository('App\\Entity\\Bookmark');
    }

    /**
     * Gets the private 'App\Twig\LocaleFormatExtensions' shared autowired service.
     *
     * @return \App\Twig\LocaleFormatExtensions
     */
    protected static function getLocaleFormatExtensionsService($container)
    {
        return $container->privates['App\\Twig\\LocaleFormatExtensions'] = new \App\Twig\LocaleFormatExtensions(($container->privates['App\\Configuration\\LocaleService'] ?? self::getLocaleServiceService($container)));
    }

    /**
     * Gets the private 'Symfony\WebpackEncoreBundle\EventListener\ResetAssetsEventListener' shared service.
     *
     * @return \Symfony\WebpackEncoreBundle\EventListener\ResetAssetsEventListener
     */
    protected static function getResetAssetsEventListenerService($container)
    {
        return $container->privates['Symfony\\WebpackEncoreBundle\\EventListener\\ResetAssetsEventListener'] = new \Symfony\WebpackEncoreBundle\EventListener\ResetAssetsEventListener(($container->privates['webpack_encore.entrypoint_lookup_collection'] ?? self::getWebpackEncore_EntrypointLookupCollectionService($container)), ['_default']);
    }

    /**
     * Gets the private 'argument_resolver.request_payload' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestPayloadValueResolver
     */
    protected static function getArgumentResolver_RequestPayloadService($container, $lazyLoad = true)
    {
        if (true === $lazyLoad) {
            return $container->privates['argument_resolver.request_payload'] = $container->createProxy('RequestPayloadValueResolverGhost3590451', static fn () => \RequestPayloadValueResolverGhost3590451::createLazyGhost(static fn ($proxy) => self::getArgumentResolver_RequestPayloadService($container, $proxy)));
        }

        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'ValueResolverInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-kernel'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'ArgumentResolver'.\DIRECTORY_SEPARATOR.'RequestPayloadValueResolver.php';

        return ($lazyLoad->__construct(($container->privates['serializer'] ?? self::getSerializerService($container)), ($container->privates['debug.validator'] ?? self::getDebug_ValidatorService($container)), ($container->services['translator'] ?? self::getTranslatorService($container))) && false ?: $lazyLoad);
    }

    /**
     * Gets the private 'assets._version__default' shared service.
     *
     * @return \Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy
     */
    protected static function getAssets_VersionDefaultService($container)
    {
        return $container->privates['assets._version__default'] = new \Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy((\dirname(__DIR__, 4).'/public/build/manifest.json'), ($container->privates['.debug.http_client'] ?? self::get_Debug_HttpClientService($container)), false);
    }

    /**
     * Gets the private 'assets.context' shared service.
     *
     * @return \Symfony\Component\Asset\Context\RequestStackContext
     */
    protected static function getAssets_ContextService($container)
    {
        $a = ($container->privates['router.request_context'] ?? self::getRouter_RequestContextService($container));

        return $container->privates['assets.context'] = new \Symfony\Component\Asset\Context\RequestStackContext(($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()), $a->getBaseUrl(), $a->isSecure());
    }

    /**
     * Gets the private 'assets.packages' shared service.
     *
     * @return \Symfony\Component\Asset\Packages
     */
    protected static function getAssets_PackagesService($container)
    {
        return $container->privates['assets.packages'] = new \Symfony\Component\Asset\Packages(new \Symfony\Component\Asset\PathPackage('', ($container->privates['assets._version__default'] ?? self::getAssets_VersionDefaultService($container)), ($container->privates['assets.context'] ?? self::getAssets_ContextService($container))), new RewindableGenerator(function () use ($container) {
            yield 'avatars' => ($container->privates['assets._package_avatars'] ?? $container->load('getAssets_PackageAvatarsService'));
        }, 1));
    }

    /**
     * Gets the private 'cache.annotations' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected static function getCache_AnnotationsService($container)
    {
        return $container->privates['cache.annotations'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter(\Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('amGNeXyXzU', 0, $container->getParameter('container.build_id'), ($container->targetDir.''.'/pools/system'), ($container->privates['monolog.logger.cache'] ?? self::getMonolog_Logger_CacheService($container))));
    }

    /**
     * Gets the private 'cache.doctrine.orm.default.query' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected static function getCache_Doctrine_Orm_Default_QueryService($container)
    {
        return $container->privates['cache.doctrine.orm.default.query'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter(new \Symfony\Component\Cache\Adapter\ArrayAdapter());
    }

    /**
     * Gets the private 'cache.doctrine.orm.default.result' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected static function getCache_Doctrine_Orm_Default_ResultService($container)
    {
        return $container->privates['cache.doctrine.orm.default.result'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter(new \Symfony\Component\Cache\Adapter\ArrayAdapter());
    }

    /**
     * Gets the private 'cache.property_info' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected static function getCache_PropertyInfoService($container)
    {
        return $container->privates['cache.property_info'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter(\Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('rxUzC-Yyy4', 0, $container->getParameter('container.build_id'), ($container->targetDir.''.'/pools/system'), ($container->privates['monolog.logger.cache'] ?? self::getMonolog_Logger_CacheService($container))));
    }

    /**
     * Gets the private 'cache.security_expression_language' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected static function getCache_SecurityExpressionLanguageService($container)
    {
        return $container->privates['cache.security_expression_language'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter(\Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('xotAX0brsH', 0, $container->getParameter('container.build_id'), ($container->targetDir.''.'/pools/system'), ($container->privates['monolog.logger.cache'] ?? self::getMonolog_Logger_CacheService($container))));
    }

    /**
     * Gets the private 'cache.security_token_verifier' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected static function getCache_SecurityTokenVerifierService($container)
    {
        return $container->privates['cache.security_token_verifier'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter(\Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('eUp1fy8u00', 0, $container->getParameter('container.build_id'), ($container->targetDir.''.'/pools/system'), ($container->privates['monolog.logger.cache'] ?? self::getMonolog_Logger_CacheService($container))));
    }

    /**
     * Gets the private 'cache.serializer' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected static function getCache_SerializerService($container)
    {
        return $container->privates['cache.serializer'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter(\Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('1OKVo3Y98x', 0, $container->getParameter('container.build_id'), ($container->targetDir.''.'/pools/system'), ($container->privates['monolog.logger.cache'] ?? self::getMonolog_Logger_CacheService($container))));
    }

    /**
     * Gets the private 'cache.validator' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected static function getCache_ValidatorService($container)
    {
        return $container->privates['cache.validator'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter(\Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('VwOscwv3s9', 0, $container->getParameter('container.build_id'), ($container->targetDir.''.'/pools/system'), ($container->privates['monolog.logger.cache'] ?? self::getMonolog_Logger_CacheService($container))));
    }

    /**
     * Gets the private 'cache.webpack_encore' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected static function getCache_WebpackEncoreService($container)
    {
        return $container->privates['cache.webpack_encore'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter(\Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('3Amt4m5Ozg', 0, $container->getParameter('container.build_id'), ($container->targetDir.''.'/pools/system'), ($container->privates['monolog.logger.cache'] ?? self::getMonolog_Logger_CacheService($container))));
    }

    /**
     * Gets the private 'config_cache_factory' shared service.
     *
     * @return \Symfony\Component\Config\ResourceCheckerConfigCacheFactory
     */
    protected static function getConfigCacheFactoryService($container)
    {
        return $container->privates['config_cache_factory'] = new \Symfony\Component\Config\ResourceCheckerConfigCacheFactory(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['dependency_injection.config.container_parameters_resource_checker'] ??= new \Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker($container));
            yield 1 => ($container->privates['config.resource.self_checking_resource_checker'] ??= new \Symfony\Component\Config\Resource\SelfCheckingResourceChecker());
        }, 2));
    }

    /**
     * Gets the private 'controller.is_granted_attribute_listener' shared service.
     *
     * @return \Symfony\Component\Security\Http\EventListener\IsGrantedAttributeListener
     */
    protected static function getController_IsGrantedAttributeListenerService($container)
    {
        $a = ($container->services['jms_serializer.authorization_checker'] ?? self::getJmsSerializer_AuthorizationCheckerService($container));

        if (isset($container->privates['controller.is_granted_attribute_listener'])) {
            return $container->privates['controller.is_granted_attribute_listener'];
        }

        return $container->privates['controller.is_granted_attribute_listener'] = new \Symfony\Component\Security\Http\EventListener\IsGrantedAttributeListener($a, new \Symfony\Component\ExpressionLanguage\ExpressionLanguage(($container->services['cache.security_is_granted_attribute_expression_language'] ?? self::getCache_SecurityIsGrantedAttributeExpressionLanguageService($container))));
    }

    /**
     * Gets the private 'data_collector.form' shared service.
     *
     * @return \Symfony\Component\Form\Extension\DataCollector\FormDataCollector
     */
    protected static function getDataCollector_FormService($container)
    {
        return $container->privates['data_collector.form'] = new \Symfony\Component\Form\Extension\DataCollector\FormDataCollector(new \Symfony\Component\Form\Extension\DataCollector\FormDataExtractor());
    }

    /**
     * Gets the private 'data_collector.request' shared service.
     *
     * @return \Symfony\Component\HttpKernel\DataCollector\RequestDataCollector
     */
    protected static function getDataCollector_RequestService($container)
    {
        return $container->privates['data_collector.request'] = new \Symfony\Component\HttpKernel\DataCollector\RequestDataCollector(($container->services['.virtual_request_stack'] ?? self::get_VirtualRequestStackService($container)));
    }

    /**
     * Gets the private 'debug.debug_logger_configurator' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Log\DebugLoggerConfigurator
     */
    protected static function getDebug_DebugLoggerConfiguratorService($container)
    {
        return $container->privates['debug.debug_logger_configurator'] = new \Symfony\Component\HttpKernel\Log\DebugLoggerConfigurator(($container->privates['debug.log_processor'] ?? self::getDebug_LogProcessorService($container)), $container->getEnv('bool:default::key:web:default:kernel.runtime_mode:'));
    }

    /**
     * Gets the private 'debug.file_link_formatter' shared service.
     *
     * @return \Symfony\Component\ErrorHandler\ErrorRenderer\FileLinkFormatter
     */
    protected static function getDebug_FileLinkFormatterService($container)
    {
        return $container->privates['debug.file_link_formatter'] = new \Symfony\Component\ErrorHandler\ErrorRenderer\FileLinkFormatter($container->getEnv('default::SYMFONY_IDE'), ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()), \dirname(__DIR__, 4), #[\Closure(name: 'debug.file_link_formatter.url_format', class: 'string')] fn () => ($container->privates['debug.file_link_formatter.url_format'] ?? $container->load('getDebug_FileLinkFormatter_UrlFormatService')));
    }

    /**
     * Gets the private 'debug.log_processor' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Processor\DebugProcessor
     */
    protected static function getDebug_LogProcessorService($container)
    {
        return $container->privates['debug.log_processor'] = new \Symfony\Bridge\Monolog\Processor\DebugProcessor(($container->services['.virtual_request_stack'] ?? self::get_VirtualRequestStackService($container)));
    }

    /**
     * Gets the private 'debug.security.access.decision_manager' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager
     */
    protected static function getDebug_Security_Access_DecisionManagerService($container)
    {
        return $container->privates['debug.security.access.decision_manager'] = new \Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager(new \Symfony\Component\Security\Core\Authorization\AccessDecisionManager(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['.debug.security.voter.security.access.authenticated_voter'] ?? $container->load('get_Debug_Security_Voter_Security_Access_AuthenticatedVoterService'));
            yield 1 => ($container->privates['.debug.security.voter.scheb_two_factor.security.access.authenticated_voter'] ?? $container->load('get_Debug_Security_Voter_SchebTwoFactor_Security_Access_AuthenticatedVoterService'));
            yield 2 => ($container->privates['.debug.security.voter.security.access.role_hierarchy_voter'] ?? $container->load('get_Debug_Security_Voter_Security_Access_RoleHierarchyVoterService'));
            yield 3 => ($container->privates['.debug.security.voter.security.access.expression_voter'] ?? $container->load('get_Debug_Security_Voter_Security_Access_ExpressionVoterService'));
            yield 4 => ($container->privates['.debug.security.voter.App\\Voter\\ActivityVoter'] ?? $container->load('getActivityVoterService'));
            yield 5 => ($container->privates['.debug.security.voter.App\\Voter\\ApiVoter'] ?? $container->load('getApiVoterService'));
            yield 6 => ($container->privates['.debug.security.voter.App\\Voter\\CustomerVoter'] ?? $container->load('getCustomerVoterService'));
            yield 7 => ($container->privates['.debug.security.voter.App\\Voter\\EntityMultiRoleVoter'] ?? $container->load('getEntityMultiRoleVoterService'));
            yield 8 => ($container->privates['.debug.security.voter.App\\Voter\\ProjectVoter'] ?? $container->load('getProjectVoterService'));
            yield 9 => ($container->privates['.debug.security.voter.App\\Voter\\QuickEntryVoter'] ?? $container->load('getQuickEntryVoterService'));
            yield 10 => ($container->privates['.debug.security.voter.App\\Voter\\ReportingVoter'] ?? $container->load('getReportingVoterService'));
            yield 11 => ($container->privates['.debug.security.voter.App\\Voter\\RolePermissionVoter'] ?? $container->load('getRolePermissionVoterService'));
            yield 12 => ($container->privates['.debug.security.voter.App\\Voter\\TeamVoter'] ?? $container->load('getTeamVoterService'));
            yield 13 => ($container->privates['.debug.security.voter.App\\Voter\\TimesheetVoter'] ?? $container->load('getTimesheetVoterService'));
            yield 14 => ($container->privates['.debug.security.voter.App\\Voter\\UserVoter'] ?? $container->load('getUserVoterService'));
        }, 15), new \Symfony\Component\Security\Core\Authorization\Strategy\UnanimousStrategy(false)));
    }

    /**
     * Gets the private 'debug.security.event_dispatcher.secured_area' shared service.
     *
     * @return \Symfony\Component\EventDispatcher\Debug\TraceableEventDispatcher
     */
    protected static function getDebug_Security_EventDispatcher_SecuredAreaService($container)
    {
        $container->privates['debug.security.event_dispatcher.secured_area'] = $instance = new \Symfony\Component\EventDispatcher\Debug\TraceableEventDispatcher(new \Symfony\Component\EventDispatcher\EventDispatcher(), ($container->services['debug.stopwatch'] ??= new \Symfony\Component\Stopwatch\Stopwatch(true)), ($container->privates['monolog.logger'] ?? self::getMonolog_LoggerService($container)), ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()));

        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [#[\Closure(name: 'security.listener.secured_area.user_provider', class: 'Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener')] fn () => ($container->privates['security.listener.secured_area.user_provider'] ?? $container->load('getSecurity_Listener_SecuredArea_UserProviderService')), 'checkPassport'], 2048);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [#[\Closure(name: 'security.listener.session.secured_area', class: 'Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener')] fn () => ($container->privates['security.listener.session.secured_area'] ?? $container->load('getSecurity_Listener_Session_SecuredAreaService')), 'onSuccessfulLogin'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LogoutEvent', [#[\Closure(name: 'security.logout.listener.default.secured_area', class: 'Symfony\\Component\\Security\\Http\\EventListener\\DefaultLogoutListener')] fn () => ($container->privates['security.logout.listener.default.secured_area'] ?? $container->load('getSecurity_Logout_Listener_Default_SecuredAreaService')), 'onLogout'], 64);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LogoutEvent', [#[\Closure(name: 'security.logout.listener.session.secured_area', class: 'Symfony\\Component\\Security\\Http\\EventListener\\SessionLogoutListener')] fn () => ($container->privates['security.logout.listener.session.secured_area'] ??= new \Symfony\Component\Security\Http\EventListener\SessionLogoutListener()), 'onLogout'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [#[\Closure(name: 'security.listener.login_throttling.secured_area', class: 'Symfony\\Component\\Security\\Http\\EventListener\\LoginThrottlingListener')] fn () => ($container->privates['security.listener.login_throttling.secured_area'] ?? $container->load('getSecurity_Listener_LoginThrottling_SecuredAreaService')), 'checkPassport'], 2080);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginFailureEvent', [#[\Closure(name: 'security.listener.login_throttling.secured_area', class: 'Symfony\\Component\\Security\\Http\\EventListener\\LoginThrottlingListener')] fn () => ($container->privates['security.listener.login_throttling.secured_area'] ?? $container->load('getSecurity_Listener_LoginThrottling_SecuredAreaService')), 'onFailedLogin'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [#[\Closure(name: 'security.listener.login_throttling.secured_area', class: 'Symfony\\Component\\Security\\Http\\EventListener\\LoginThrottlingListener')] fn () => ($container->privates['security.listener.login_throttling.secured_area'] ?? $container->load('getSecurity_Listener_LoginThrottling_SecuredAreaService')), 'onSuccessfulLogin'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\AuthenticationTokenCreatedEvent', [#[\Closure(name: 'security.authentication.token_created_listener.two_factor.secured_area', class: 'Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Event\\AuthenticationTokenListener')] fn () => ($container->privates['security.authentication.token_created_listener.two_factor.secured_area'] ?? $container->load('getSecurity_Authentication_TokenCreatedListener_TwoFactor_SecuredAreaService')), 'onAuthenticationTokenCreated'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [#[\Closure(name: 'security.listener.kimai_ldap.secured_area', class: 'App\\Ldap\\LdapCredentialsSubscriber')] fn () => ($container->privates['security.listener.kimai_ldap.secured_area'] ?? $container->load('getSecurity_Listener_KimaiLdap_SecuredAreaService')), 'onCheckPassport'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [#[\Closure(name: 'security.listener.check_remember_me_conditions.secured_area', class: 'Symfony\\Component\\Security\\Http\\EventListener\\CheckRememberMeConditionsListener')] fn () => ($container->privates['security.listener.check_remember_me_conditions.secured_area'] ?? $container->load('getSecurity_Listener_CheckRememberMeConditions_SecuredAreaService')), 'onSuccessfulLogin'], -32);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [#[\Closure(name: 'security.listener.remember_me.secured_area', class: 'Symfony\\Component\\Security\\Http\\EventListener\\RememberMeListener')] fn () => ($container->privates['security.listener.remember_me.secured_area'] ?? $container->load('getSecurity_Listener_RememberMe_SecuredAreaService')), 'onSuccessfulLogin'], -64);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginFailureEvent', [#[\Closure(name: 'security.listener.remember_me.secured_area', class: 'Symfony\\Component\\Security\\Http\\EventListener\\RememberMeListener')] fn () => ($container->privates['security.listener.remember_me.secured_area'] ?? $container->load('getSecurity_Listener_RememberMe_SecuredAreaService')), 'clearCookie'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LogoutEvent', [#[\Closure(name: 'security.listener.remember_me.secured_area', class: 'Symfony\\Component\\Security\\Http\\EventListener\\RememberMeListener')] fn () => ($container->privates['security.listener.remember_me.secured_area'] ?? $container->load('getSecurity_Listener_RememberMe_SecuredAreaService')), 'clearCookie'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\TokenDeauthenticatedEvent', [#[\Closure(name: 'security.listener.remember_me.secured_area', class: 'Symfony\\Component\\Security\\Http\\EventListener\\RememberMeListener')] fn () => ($container->privates['security.listener.remember_me.secured_area'] ?? $container->load('getSecurity_Listener_RememberMe_SecuredAreaService')), 'clearCookie'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [#[\Closure(name: 'security.listener.user_checker.secured_area', class: 'Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener')] fn () => ($container->privates['security.listener.user_checker.secured_area'] ?? $container->load('getSecurity_Listener_UserChecker_SecuredAreaService')), 'preCheckCredentials'], 256);
        $instance->addListener('security.authentication.success', [#[\Closure(name: 'security.listener.user_checker.secured_area', class: 'Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener')] fn () => ($container->privates['security.listener.user_checker.secured_area'] ?? $container->load('getSecurity_Listener_UserChecker_SecuredAreaService')), 'postCheckCredentials'], 256);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [#[\Closure(name: 'security.listener.user_provider', class: 'Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener')] fn () => ($container->privates['security.listener.user_provider'] ?? $container->load('getSecurity_Listener_UserProviderService')), 'checkPassport'], 1024);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [#[\Closure(name: 'App\\API\\Authentication\\ApiTokenMigratingListener')] fn () => ($container->privates['App\\API\\Authentication\\ApiTokenMigratingListener'] ?? $container->load('getApiTokenMigratingListenerService')), 'onLoginSuccess'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [#[\Closure(name: 'App\\EventSubscriber\\LastLoginSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\LastLoginSubscriber'] ?? $container->load('getLastLoginSubscriberService')), 'onFormLogin'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LogoutEvent', [#[\Closure(name: 'App\\EventSubscriber\\LogoutSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\LogoutSubscriber'] ?? $container->load('getLogoutSubscriberService')), 'onLogout'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [#[\Closure(name: 'App\\EventSubscriber\\ProfileSubscriber')] fn () => ($container->privates['App\\EventSubscriber\\ProfileSubscriber'] ?? $container->load('getProfileSubscriberService')), 'onFormLogin'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [#[\Closure(name: 'App\\Ldap\\LdapCredentialsSubscriber')] fn () => ($container->privates['App\\Ldap\\LdapCredentialsSubscriber'] ?? $container->load('getLdapCredentialsSubscriberService')), 'onCheckPassport'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LogoutEvent', [#[\Closure(name: 'App\\Saml\\SamlLogoutSubscriber')] fn () => ($container->privates['App\\Saml\\SamlLogoutSubscriber'] ?? $container->load('getSamlLogoutSubscriberService')), 'logout'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [#[\Closure(name: 'security.listener.check_authenticator_credentials', class: 'Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener')] fn () => ($container->privates['security.listener.check_authenticator_credentials'] ?? $container->load('getSecurity_Listener_CheckAuthenticatorCredentialsService')), 'checkPassport'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [#[\Closure(name: 'security.listener.password_migrating', class: 'Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener')] fn () => ($container->privates['security.listener.password_migrating'] ?? $container->load('getSecurity_Listener_PasswordMigratingService')), 'onLoginSuccess'], 0);
        $instance->addListener('security.authentication.success', [#[\Closure(name: 'security.authentication.provider_preparation_listener.two_factor.secured_area', class: 'Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Provider\\TwoFactorProviderPreparationListener')] fn () => ($container->privates['security.authentication.provider_preparation_listener.two_factor.secured_area'] ?? self::getSecurity_Authentication_ProviderPreparationListener_TwoFactor_SecuredAreaService($container)), 'onLogin'], 9223372036854775807);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [#[\Closure(name: 'scheb_two_factor.security.listener.check_two_factor_code', class: 'Scheb\\TwoFactorBundle\\Security\\Http\\EventListener\\CheckTwoFactorCodeListener')] fn () => ($container->privates['scheb_two_factor.security.listener.check_two_factor_code'] ?? $container->load('getSchebTwoFactor_Security_Listener_CheckTwoFactorCodeService')), 'checkPassport'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [#[\Closure(name: 'scheb_two_factor.security.listener.suppress_remember_me', class: 'Scheb\\TwoFactorBundle\\Security\\Http\\EventListener\\SuppressRememberMeListener')] fn () => ($container->privates['scheb_two_factor.security.listener.suppress_remember_me'] ??= new \Scheb\TwoFactorBundle\Security\Http\EventListener\SuppressRememberMeListener()), 'onSuccessfulLogin'], -63);
        $instance->addListener('security.authentication.success', [#[\Closure(name: 'scheb_two_factor.security.authentication_success_event_suppressor', class: 'Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Event\\AuthenticationSuccessEventSuppressor')] fn () => ($container->privates['scheb_two_factor.security.authentication_success_event_suppressor'] ??= new \Scheb\TwoFactorBundle\Security\TwoFactor\Event\AuthenticationSuccessEventSuppressor()), 'onLogin'], 9223372036854775806);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [#[\Closure(name: 'security.listener.csrf_protection', class: 'Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener')] fn () => ($container->privates['security.listener.csrf_protection'] ?? $container->load('getSecurity_Listener_CsrfProtectionService')), 'checkPassport'], 512);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LogoutEvent', [#[\Closure(name: 'security.logout.listener.csrf_token_clearing', class: 'Symfony\\Component\\Security\\Http\\EventListener\\CsrfTokenClearingLogoutListener')] fn () => ($container->privates['security.logout.listener.csrf_token_clearing'] ?? $container->load('getSecurity_Logout_Listener_CsrfTokenClearingService')), 'onLogout'], 0);

        return $instance;
    }

    /**
     * Gets the private 'debug.security.firewall' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener
     */
    protected static function getDebug_Security_FirewallService($container)
    {
        $a = ($container->privates['security.firewall.map'] ?? self::getSecurity_Firewall_MapService($container));

        if (isset($container->privates['debug.security.firewall'])) {
            return $container->privates['debug.security.firewall'];
        }
        $b = ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container));

        if (isset($container->privates['debug.security.firewall'])) {
            return $container->privates['debug.security.firewall'];
        }

        return $container->privates['debug.security.firewall'] = new \Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener($a, $b, ($container->privates['security.logout_url_generator'] ?? self::getSecurity_LogoutUrlGeneratorService($container)));
    }

    /**
     * Gets the private 'debug.validator' shared service.
     *
     * @return \Symfony\Component\Validator\Validator\TraceableValidator
     */
    protected static function getDebug_ValidatorService($container)
    {
        $a = ($container->privates['validator.builder'] ?? self::getValidator_BuilderService($container));

        if (isset($container->privates['debug.validator'])) {
            return $container->privates['debug.validator'];
        }

        return $container->privates['debug.validator'] = new \Symfony\Component\Validator\Validator\TraceableValidator($a->getValidator());
    }

    /**
     * Gets the private 'doctrine.dbal.default_connection.event_manager' shared service.
     *
     * @return \Symfony\Bridge\Doctrine\ContainerAwareEventManager
     */
    protected static function getDoctrine_Dbal_DefaultConnection_EventManagerService($container)
    {
        return $container->privates['doctrine.dbal.default_connection.event_manager'] = new \Symfony\Bridge\Doctrine\ContainerAwareEventManager(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'App\\Doctrine\\ModifiedSubscriber' => ['privates', 'App\\Doctrine\\ModifiedSubscriber', 'getModifiedSubscriberService', true],
            'App\\Doctrine\\TimesheetSubscriber' => ['privates', 'App\\Doctrine\\TimesheetSubscriber', 'getTimesheetSubscriberService', true],
            'doctrine.orm.default_listeners.attach_entity_listeners' => ['privates', 'doctrine.orm.default_listeners.attach_entity_listeners', 'getDoctrine_Orm_DefaultListeners_AttachEntityListenersService', true],
            'doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener' => ['privates', 'doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener', 'getDoctrine_Orm_Listeners_DoctrineDbalCacheAdapterSchemaListenerService', true],
            'doctrine.orm.listeners.doctrine_token_provider_schema_listener' => ['privates', 'doctrine.orm.listeners.doctrine_token_provider_schema_listener', 'getDoctrine_Orm_Listeners_DoctrineTokenProviderSchemaListenerService', true],
            'doctrine.orm.listeners.lock_store_schema_listener' => ['privates', 'doctrine.orm.listeners.lock_store_schema_listener', 'getDoctrine_Orm_Listeners_LockStoreSchemaListenerService', true],
            'doctrine.orm.listeners.pdo_session_handler_schema_listener' => ['privates', 'doctrine.orm.listeners.pdo_session_handler_schema_listener', 'getDoctrine_Orm_Listeners_PdoSessionHandlerSchemaListenerService', true],
        ], [
            'App\\Doctrine\\ModifiedSubscriber' => '?',
            'App\\Doctrine\\TimesheetSubscriber' => '?',
            'doctrine.orm.default_listeners.attach_entity_listeners' => '?',
            'doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener' => '?',
            'doctrine.orm.listeners.doctrine_token_provider_schema_listener' => '?',
            'doctrine.orm.listeners.lock_store_schema_listener' => '?',
            'doctrine.orm.listeners.pdo_session_handler_schema_listener' => '?',
        ]), [[['onFlush'], 'App\\Doctrine\\ModifiedSubscriber'], [['onFlush'], 'App\\Doctrine\\TimesheetSubscriber'], [['postGenerateSchema'], 'doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener'], [['postGenerateSchema'], 'doctrine.orm.listeners.doctrine_token_provider_schema_listener'], [['postGenerateSchema'], 'doctrine.orm.listeners.pdo_session_handler_schema_listener'], [['postGenerateSchema'], 'doctrine.orm.listeners.lock_store_schema_listener'], [['loadClassMetadata'], 'doctrine.orm.default_listeners.attach_entity_listeners']]);
    }

    /**
     * Gets the private 'doctrine.result_cache_pool' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected static function getDoctrine_ResultCachePoolService($container)
    {
        $a = new \Symfony\Component\Cache\Adapter\FilesystemAdapter('ZgIZ++M3gA', 0, ($container->targetDir.''.'/pools/app'), ($container->privates['cache.default_marshaller'] ??= new \Symfony\Component\Cache\Marshaller\DefaultMarshaller(NULL, true)));
        $a->setLogger(($container->privates['monolog.logger.cache'] ?? self::getMonolog_Logger_CacheService($container)));

        return $container->privates['doctrine.result_cache_pool'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter($a);
    }

    /**
     * Gets the private 'doctrine.system_cache_pool' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected static function getDoctrine_SystemCachePoolService($container)
    {
        return $container->privates['doctrine.system_cache_pool'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter(\Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('5G8Evqp+Nh', 0, $container->getParameter('container.build_id'), ($container->targetDir.''.'/pools/system'), ($container->privates['monolog.logger.cache'] ?? self::getMonolog_Logger_CacheService($container))));
    }

    /**
     * Gets the private 'exception_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ErrorListener
     */
    protected static function getExceptionListenerService($container)
    {
        return $container->privates['exception_listener'] = new \Symfony\Component\HttpKernel\EventListener\ErrorListener('error_controller', ($container->privates['monolog.logger.request'] ?? self::getMonolog_Logger_RequestService($container)), true, ['App\\Validator\\ValidationFailedException' => ['log_level' => 'debug', 'status_code' => NULL]]);
    }

    /**
     * Gets the private 'fos_rest.body_listener' shared service.
     *
     * @return \FOS\RestBundle\EventListener\BodyListener
     */
    protected static function getFosRest_BodyListenerService($container)
    {
        $container->privates['fos_rest.body_listener'] = $instance = new \FOS\RestBundle\EventListener\BodyListener(new \FOS\RestBundle\Decoder\ContainerDecoderProvider(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'fos_rest.decoder.jsontoform' => ['privates', 'fos_rest.decoder.jsontoform', 'getFosRest_Decoder_JsontoformService', true],
        ], [
            'fos_rest.decoder.jsontoform' => '?',
        ]), ['json' => 'fos_rest.decoder.jsontoform']), false, new \FOS\RestBundle\Normalizer\CamelKeysNormalizer(), true);

        $instance->setDefaultFormat(NULL);

        return $instance;
    }

    /**
     * Gets the private 'fos_rest.exception.codes_map' shared service.
     *
     * @return \FOS\RestBundle\Util\ExceptionValueMap
     */
    protected static function getFosRest_Exception_CodesMapService($container)
    {
        return $container->privates['fos_rest.exception.codes_map'] = new \FOS\RestBundle\Util\ExceptionValueMap(['Symfony\\Component\\HttpKernel\\Exception\\BadRequestHttpException' => 400, 'App\\Validator\\ValidationFailedException' => 400, 'Symfony\\Component\\HttpKernel\\Exception\\UnauthorizedHttpException' => 401, 'Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException' => 403, 'Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException' => 404, 'Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException' => 404, 'App\\API\\NotFoundException' => 404]);
    }

    /**
     * Gets the private 'fos_rest.exception.response_status_code_listener' shared service.
     *
     * @return \FOS\RestBundle\EventListener\ResponseStatusCodeListener
     */
    protected static function getFosRest_Exception_ResponseStatusCodeListenerService($container)
    {
        return $container->privates['fos_rest.exception.response_status_code_listener'] = new \FOS\RestBundle\EventListener\ResponseStatusCodeListener(($container->privates['fos_rest.exception.codes_map'] ?? self::getFosRest_Exception_CodesMapService($container)));
    }

    /**
     * Gets the private 'fos_rest.format_listener' shared service.
     *
     * @return \FOS\RestBundle\EventListener\FormatListener
     */
    protected static function getFosRest_FormatListenerService($container)
    {
        $a = new \FOS\RestBundle\Negotiation\FormatNegotiator(($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()));
        $a->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/_profiler|_wdt/')]), ['methods' => NULL, 'priorities' => ['html', 'json'], 'fallback_format' => 'html', 'attributes' => [], 'prefer_extension' => '2.0']);
        $a->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/api')]), ['prefer_extension' => '2.0', 'fallback_format' => 'json', 'priorities' => ['json'], 'methods' => NULL, 'attributes' => [], 'stop' => false]);

        return $container->privates['fos_rest.format_listener'] = new \FOS\RestBundle\EventListener\FormatListener($a);
    }

    /**
     * Gets the private 'fos_rest.param_fetcher_listener' shared service.
     *
     * @return \FOS\RestBundle\EventListener\ParamFetcherListener
     */
    protected static function getFosRest_ParamFetcherListenerService($container)
    {
        $a = ($container->privates['fos_rest.request.param_fetcher'] ?? self::getFosRest_Request_ParamFetcherService($container));

        if (isset($container->privates['fos_rest.param_fetcher_listener'])) {
            return $container->privates['fos_rest.param_fetcher_listener'];
        }

        return $container->privates['fos_rest.param_fetcher_listener'] = new \FOS\RestBundle\EventListener\ParamFetcherListener($a, false);
    }

    /**
     * Gets the private 'fos_rest.request.param_fetcher' shared service.
     *
     * @return \FOS\RestBundle\Request\ParamFetcher
     */
    protected static function getFosRest_Request_ParamFetcherService($container)
    {
        $a = ($container->privates['debug.validator'] ?? self::getDebug_ValidatorService($container));

        if (isset($container->privates['fos_rest.request.param_fetcher'])) {
            return $container->privates['fos_rest.request.param_fetcher'];
        }

        return $container->privates['fos_rest.request.param_fetcher'] = new \FOS\RestBundle\Request\ParamFetcher($container, new \FOS\RestBundle\Request\ParamReader(NULL), ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()), $a);
    }

    /**
     * Gets the private 'fos_rest.serializer.jms' shared service.
     *
     * @return \FOS\RestBundle\Serializer\JMSSerializerAdapter
     */
    protected static function getFosRest_Serializer_JmsService($container)
    {
        $a = ($container->services['jms_serializer'] ?? self::getJmsSerializerService($container));

        if (isset($container->privates['fos_rest.serializer.jms'])) {
            return $container->privates['fos_rest.serializer.jms'];
        }

        return $container->privates['fos_rest.serializer.jms'] = new \FOS\RestBundle\Serializer\JMSSerializerAdapter($a, ($container->services['jms_serializer.serialization_context_factory'] ??= new \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory()), ($container->services['jms_serializer.deserialization_context_factory'] ??= new \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory()));
    }

    /**
     * Gets the private 'fos_rest.view_response_listener' shared service.
     *
     * @return \FOS\RestBundle\EventListener\ViewResponseListener
     */
    protected static function getFosRest_ViewResponseListenerService($container)
    {
        $a = ($container->services['fos_rest.view_handler'] ?? self::getFosRest_ViewHandlerService($container));

        if (isset($container->privates['fos_rest.view_response_listener'])) {
            return $container->privates['fos_rest.view_response_listener'];
        }

        return $container->privates['fos_rest.view_response_listener'] = new \FOS\RestBundle\EventListener\ViewResponseListener($a, false, NULL);
    }

    /**
     * Gets the private 'fos_rest.zone_matcher_listener' shared service.
     *
     * @return \FOS\RestBundle\EventListener\ZoneMatcherListener
     */
    protected static function getFosRest_ZoneMatcherListenerService($container)
    {
        $container->privates['fos_rest.zone_matcher_listener'] = $instance = new \FOS\RestBundle\EventListener\ZoneMatcherListener();

        $instance->addRequestMatcher(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/api/*'), new \Symfony\Component\HttpFoundation\RequestMatcher\MethodRequestMatcher([]), new \Symfony\Component\HttpFoundation\RequestMatcher\IpsRequestMatcher([])]));

        return $instance;
    }

    /**
     * Gets the private 'http_client.transport' shared service.
     *
     * @return \Symfony\Contracts\HttpClient\HttpClientInterface
     */
    protected static function getHttpClient_TransportService($container)
    {
        $container->privates['http_client.transport'] = $instance = \Symfony\Component\HttpClient\HttpClient::create([], 6);

        $a = new \Monolog\Logger('http_client');
        $a->pushProcessor([($container->privates['App\\Logger\\LogProcessor'] ??= new \App\Logger\LogProcessor()), '__invoke']);
        $a->pushHandler(($container->privates['monolog.handler.console'] ?? self::getMonolog_Handler_ConsoleService($container)));
        $a->pushHandler(($container->privates['monolog.handler.main'] ?? self::getMonolog_Handler_MainService($container)));
        ($container->privates['debug.debug_logger_configurator'] ?? self::getDebug_DebugLoggerConfiguratorService($container))->pushDebugLogger($a);

        $instance->setLogger($a);

        return $instance;
    }

    /**
     * Gets the private 'jms_serializer.event_dispatcher' shared service.
     *
     * @return \JMS\SerializerBundle\Debug\TraceableEventDispatcher
     */
    protected static function getJmsSerializer_EventDispatcherService($container)
    {
        $container->privates['jms_serializer.event_dispatcher'] = $instance = new \JMS\SerializerBundle\Debug\TraceableEventDispatcher(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'jms_serializer.stopwatch_subscriber' => ['privates', 'jms_serializer.stopwatch_subscriber', 'getJmsSerializer_StopwatchSubscriberService', true],
            'jms_serializer.traceable_runs_listener' => ['privates', 'jms_serializer.traceable_runs_listener', 'getJmsSerializer_TraceableRunsListenerService', false],
            'jms_serializer.doctrine_proxy_subscriber' => ['privates', 'jms_serializer.doctrine_proxy_subscriber', 'getJmsSerializer_DoctrineProxySubscriberService', true],
        ], [
            'jms_serializer.stopwatch_subscriber' => '?',
            'jms_serializer.traceable_runs_listener' => '?',
            'jms_serializer.doctrine_proxy_subscriber' => '?',
        ]));

        $instance->addListener('serializer.pre_serialize', ['jms_serializer.stopwatch_subscriber', 'onPreSerialize'], NULL, NULL, NULL);
        $instance->addListener('serializer.pre_serialize', ['jms_serializer.traceable_runs_listener', 'saveRunInfo'], NULL, NULL, NULL);
        $instance->addListener('serializer.pre_serialize', ['jms_serializer.doctrine_proxy_subscriber', 'onPreSerializeTypedProxy'], NULL, NULL, 'Doctrine\\Persistence\\Proxy');
        $instance->addListener('serializer.pre_serialize', ['jms_serializer.doctrine_proxy_subscriber', 'onPreSerializeTypedProxy'], NULL, NULL, 'Doctrine\\Common\\Persistence\\Proxy');
        $instance->addListener('serializer.pre_serialize', ['jms_serializer.doctrine_proxy_subscriber', 'onPreSerialize'], NULL, NULL, 'Doctrine\\ORM\\PersistentCollection');
        $instance->addListener('serializer.pre_serialize', ['jms_serializer.doctrine_proxy_subscriber', 'onPreSerialize'], NULL, NULL, 'Doctrine\\ODM\\MongoDB\\PersistentCollection');
        $instance->addListener('serializer.pre_serialize', ['jms_serializer.doctrine_proxy_subscriber', 'onPreSerialize'], NULL, NULL, 'Doctrine\\ODM\\PHPCR\\PersistentCollection');
        $instance->addListener('serializer.pre_serialize', ['jms_serializer.doctrine_proxy_subscriber', 'onPreSerialize'], NULL, NULL, 'Doctrine\\Persistence\\Proxy');
        $instance->addListener('serializer.pre_serialize', ['jms_serializer.doctrine_proxy_subscriber', 'onPreSerialize'], NULL, NULL, 'Doctrine\\Common\\Persistence\\Proxy');
        $instance->addListener('serializer.pre_serialize', ['jms_serializer.doctrine_proxy_subscriber', 'onPreSerialize'], NULL, NULL, 'ProxyManager\\Proxy\\LazyLoadingInterface');
        $instance->addListener('serializer.pre_deserialize', ['jms_serializer.traceable_runs_listener', 'saveRunInfo'], NULL, NULL, NULL);
        $instance->addListener('serializer.post_serialize', ['jms_serializer.stopwatch_subscriber', 'onPostSerialize'], NULL, NULL, NULL);

        return $instance;
    }

    /**
     * Gets the private 'jms_serializer.expression_evaluator' shared service.
     *
     * @return \JMS\Serializer\Expression\ExpressionEvaluator
     */
    protected static function getJmsSerializer_ExpressionEvaluatorService($container)
    {
        $a = new \Symfony\Component\ExpressionLanguage\ExpressionLanguage();
        $a->registerProvider(new \JMS\SerializerBundle\ExpressionLanguage\BasicSerializerFunctionsProvider());

        return $container->privates['jms_serializer.expression_evaluator'] = new \JMS\Serializer\Expression\ExpressionEvaluator($a, ['container' => $container]);
    }

    /**
     * Gets the private 'jms_serializer.metadata.traceable_file_locator' shared service.
     *
     * @return \JMS\SerializerBundle\Debug\TraceableFileLocator
     */
    protected static function getJmsSerializer_Metadata_TraceableFileLocatorService($container)
    {
        return $container->privates['jms_serializer.metadata.traceable_file_locator'] = new \JMS\SerializerBundle\Debug\TraceableFileLocator(new \Metadata\Driver\FileLocator([]));
    }

    /**
     * Gets the private 'jms_serializer.traceable_handler_registry' shared service.
     *
     * @return \JMS\SerializerBundle\Debug\TraceableHandlerRegistry
     */
    protected static function getJmsSerializer_TraceableHandlerRegistryService($container)
    {
        $container->privates['jms_serializer.traceable_handler_registry'] = $instance = new \JMS\SerializerBundle\Debug\TraceableHandlerRegistry(new \JMS\Serializer\Handler\LazyHandlerRegistry(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'jms_serializer.union_handler' => ['privates', 'jms_serializer.union_handler', 'getJmsSerializer_UnionHandlerService', true],
            'jms_serializer.array_collection_handler' => ['privates', 'jms_serializer.array_collection_handler', 'getJmsSerializer_ArrayCollectionHandlerService', true],
            'jms_serializer.datetime_handler' => ['privates', 'jms_serializer.datetime_handler', 'getJmsSerializer_DatetimeHandlerService', true],
            'jms_serializer.iterator_handler' => ['privates', 'jms_serializer.iterator_handler', 'getJmsSerializer_IteratorHandlerService', true],
            'jms_serializer.constraint_violation_handler' => ['privates', 'jms_serializer.constraint_violation_handler', 'getJmsSerializer_ConstraintViolationHandlerService', true],
            'App\\API\\Serializer\\ValidationFailedExceptionErrorHandler' => ['privates', 'App\\API\\Serializer\\ValidationFailedExceptionErrorHandler', 'getValidationFailedExceptionErrorHandlerService', true],
            'fos_rest.serializer.flatten_exception_handler' => ['privates', 'fos_rest.serializer.flatten_exception_handler', 'getFosRest_Serializer_FlattenExceptionHandlerService', true],
            'fos_rest.serializer.form_error_handler' => ['privates', 'fos_rest.serializer.form_error_handler', 'getFosRest_Serializer_FormErrorHandlerService', true],
        ], [
            'jms_serializer.union_handler' => '?',
            'jms_serializer.array_collection_handler' => '?',
            'jms_serializer.datetime_handler' => '?',
            'jms_serializer.iterator_handler' => '?',
            'jms_serializer.constraint_violation_handler' => '?',
            'App\\API\\Serializer\\ValidationFailedExceptionErrorHandler' => '?',
            'fos_rest.serializer.flatten_exception_handler' => '?',
            'fos_rest.serializer.form_error_handler' => '?',
        ])));

        $instance->registerHandler(2, 'union', 'json', ['jms_serializer.union_handler', 'deserializeUnion']);
        $instance->registerHandler(2, 'union', 'xml', ['jms_serializer.union_handler', 'deserializeUnion']);
        $instance->registerHandler(2, 'ArrayCollection', 'json', ['jms_serializer.array_collection_handler', 'deserializeCollection']);
        $instance->registerHandler(2, 'ArrayCollection', 'xml', ['jms_serializer.array_collection_handler', 'deserializeCollection']);
        $instance->registerHandler(2, 'Doctrine\\Common\\Collections\\ArrayCollection', 'json', ['jms_serializer.array_collection_handler', 'deserializeCollection']);
        $instance->registerHandler(2, 'Doctrine\\Common\\Collections\\ArrayCollection', 'xml', ['jms_serializer.array_collection_handler', 'deserializeCollection']);
        $instance->registerHandler(2, 'Doctrine\\ORM\\PersistentCollection', 'json', ['jms_serializer.array_collection_handler', 'deserializeCollection']);
        $instance->registerHandler(2, 'Doctrine\\ORM\\PersistentCollection', 'xml', ['jms_serializer.array_collection_handler', 'deserializeCollection']);
        $instance->registerHandler(2, 'Doctrine\\ODM\\MongoDB\\PersistentCollection', 'json', ['jms_serializer.array_collection_handler', 'deserializeCollection']);
        $instance->registerHandler(2, 'Doctrine\\ODM\\MongoDB\\PersistentCollection', 'xml', ['jms_serializer.array_collection_handler', 'deserializeCollection']);
        $instance->registerHandler(2, 'Doctrine\\ODM\\PHPCR\\PersistentCollection', 'json', ['jms_serializer.array_collection_handler', 'deserializeCollection']);
        $instance->registerHandler(2, 'Doctrine\\ODM\\PHPCR\\PersistentCollection', 'xml', ['jms_serializer.array_collection_handler', 'deserializeCollection']);
        $instance->registerHandler(2, 'DateTime', 'json', ['jms_serializer.datetime_handler', 'deserializeDateTimeFromjson']);
        $instance->registerHandler(2, 'DateTime', 'xml', ['jms_serializer.datetime_handler', 'deserializeDateTimeFromxml']);
        $instance->registerHandler(2, 'DateTimeImmutable', 'json', ['jms_serializer.datetime_handler', 'deserializeDateTimeImmutableFromjson']);
        $instance->registerHandler(2, 'DateTimeImmutable', 'xml', ['jms_serializer.datetime_handler', 'deserializeDateTimeImmutableFromxml']);
        $instance->registerHandler(2, 'DateInterval', 'json', ['jms_serializer.datetime_handler', 'deserializeDateIntervalFromjson']);
        $instance->registerHandler(2, 'DateInterval', 'xml', ['jms_serializer.datetime_handler', 'deserializeDateIntervalFromxml']);
        $instance->registerHandler(2, 'DateTimeInterface', 'json', ['jms_serializer.datetime_handler', 'deserializeDateTimeFromJson']);
        $instance->registerHandler(2, 'DateTimeInterface', 'xml', ['jms_serializer.datetime_handler', 'deserializeDateTimeFromXml']);
        $instance->registerHandler(2, 'Iterator', 'json', ['jms_serializer.iterator_handler', 'deserializeIterator']);
        $instance->registerHandler(2, 'Iterator', 'xml', ['jms_serializer.iterator_handler', 'deserializeIterator']);
        $instance->registerHandler(2, 'ArrayIterator', 'json', ['jms_serializer.iterator_handler', 'deserializeIterator']);
        $instance->registerHandler(2, 'ArrayIterator', 'xml', ['jms_serializer.iterator_handler', 'deserializeIterator']);
        $instance->registerHandler(2, 'Generator', 'json', ['jms_serializer.iterator_handler', 'deserializeGenerator']);
        $instance->registerHandler(2, 'Generator', 'xml', ['jms_serializer.iterator_handler', 'deserializeGenerator']);
        $instance->registerHandler(1, 'union', 'json', ['jms_serializer.union_handler', 'serializeUnion']);
        $instance->registerHandler(1, 'union', 'xml', ['jms_serializer.union_handler', 'serializeUnion']);
        $instance->registerHandler(1, 'ArrayCollection', 'json', ['jms_serializer.array_collection_handler', 'serializeCollection']);
        $instance->registerHandler(1, 'ArrayCollection', 'xml', ['jms_serializer.array_collection_handler', 'serializeCollection']);
        $instance->registerHandler(1, 'Doctrine\\Common\\Collections\\ArrayCollection', 'json', ['jms_serializer.array_collection_handler', 'serializeCollection']);
        $instance->registerHandler(1, 'Doctrine\\Common\\Collections\\ArrayCollection', 'xml', ['jms_serializer.array_collection_handler', 'serializeCollection']);
        $instance->registerHandler(1, 'Doctrine\\ORM\\PersistentCollection', 'json', ['jms_serializer.array_collection_handler', 'serializeCollection']);
        $instance->registerHandler(1, 'Doctrine\\ORM\\PersistentCollection', 'xml', ['jms_serializer.array_collection_handler', 'serializeCollection']);
        $instance->registerHandler(1, 'Doctrine\\ODM\\MongoDB\\PersistentCollection', 'json', ['jms_serializer.array_collection_handler', 'serializeCollection']);
        $instance->registerHandler(1, 'Doctrine\\ODM\\MongoDB\\PersistentCollection', 'xml', ['jms_serializer.array_collection_handler', 'serializeCollection']);
        $instance->registerHandler(1, 'Doctrine\\ODM\\PHPCR\\PersistentCollection', 'json', ['jms_serializer.array_collection_handler', 'serializeCollection']);
        $instance->registerHandler(1, 'Doctrine\\ODM\\PHPCR\\PersistentCollection', 'xml', ['jms_serializer.array_collection_handler', 'serializeCollection']);
        $instance->registerHandler(1, 'Symfony\\Component\\Validator\\ConstraintViolationList', 'xml', ['jms_serializer.constraint_violation_handler', 'serializeListToxml']);
        $instance->registerHandler(1, 'Symfony\\Component\\Validator\\ConstraintViolationList', 'json', ['jms_serializer.constraint_violation_handler', 'serializeListTojson']);
        $instance->registerHandler(1, 'Symfony\\Component\\Validator\\ConstraintViolation', 'xml', ['jms_serializer.constraint_violation_handler', 'serializeViolationToxml']);
        $instance->registerHandler(1, 'Symfony\\Component\\Validator\\ConstraintViolation', 'json', ['jms_serializer.constraint_violation_handler', 'serializeViolationTojson']);
        $instance->registerHandler(1, 'DateTime', 'json', ['jms_serializer.datetime_handler', 'serializeDateTime']);
        $instance->registerHandler(1, 'DateTime', 'xml', ['jms_serializer.datetime_handler', 'serializeDateTime']);
        $instance->registerHandler(1, 'DateTimeImmutable', 'json', ['jms_serializer.datetime_handler', 'serializeDateTimeImmutable']);
        $instance->registerHandler(1, 'DateTimeImmutable', 'xml', ['jms_serializer.datetime_handler', 'serializeDateTimeImmutable']);
        $instance->registerHandler(1, 'DateInterval', 'json', ['jms_serializer.datetime_handler', 'serializeDateInterval']);
        $instance->registerHandler(1, 'DateInterval', 'xml', ['jms_serializer.datetime_handler', 'serializeDateInterval']);
        $instance->registerHandler(1, 'DateTimeInterface', 'json', ['jms_serializer.datetime_handler', 'serializeDateTimeInterface']);
        $instance->registerHandler(1, 'DateTimeInterface', 'xml', ['jms_serializer.datetime_handler', 'serializeDateTimeInterface']);
        $instance->registerHandler(1, 'Iterator', 'json', ['jms_serializer.iterator_handler', 'serializeIterable']);
        $instance->registerHandler(1, 'Iterator', 'xml', ['jms_serializer.iterator_handler', 'serializeIterable']);
        $instance->registerHandler(1, 'ArrayIterator', 'json', ['jms_serializer.iterator_handler', 'serializeIterable']);
        $instance->registerHandler(1, 'ArrayIterator', 'xml', ['jms_serializer.iterator_handler', 'serializeIterable']);
        $instance->registerHandler(1, 'Generator', 'json', ['jms_serializer.iterator_handler', 'serializeIterable']);
        $instance->registerHandler(1, 'Generator', 'xml', ['jms_serializer.iterator_handler', 'serializeIterable']);
        $instance->registerHandler(1, 'Symfony\\Component\\ErrorHandler\\Exception\\FlattenException', 'json', ['App\\API\\Serializer\\ValidationFailedExceptionErrorHandler', 'serializeExceptionToJson']);
        $instance->registerHandler(1, 'Symfony\\Component\\ErrorHandler\\Exception\\FlattenException', 'xml', ['fos_rest.serializer.flatten_exception_handler', 'serializeToXml']);
        $instance->registerHandler(1, 'Symfony\\Component\\Form\\Form', 'xml', ['fos_rest.serializer.form_error_handler', 'serializeFormToxml']);
        $instance->registerHandler(1, 'Symfony\\Component\\Form\\Form', 'json', ['fos_rest.serializer.form_error_handler', 'serializeFormTojson']);
        $instance->registerHandler(1, 'Symfony\\Component\\Form\\FormInterface', 'xml', ['fos_rest.serializer.form_error_handler', 'serializeFormToXml']);
        $instance->registerHandler(1, 'Symfony\\Component\\Form\\FormInterface', 'json', ['fos_rest.serializer.form_error_handler', 'serializeFormToJson']);
        $instance->registerHandler(1, 'Symfony\\Component\\Form\\FormError', 'xml', ['fos_rest.serializer.form_error_handler', 'serializeFormErrorToxml']);
        $instance->registerHandler(1, 'Symfony\\Component\\Form\\FormError', 'json', ['fos_rest.serializer.form_error_handler', 'serializeFormErrorTojson']);
        $instance->registerHandler(1, 'App\\Validator\\ValidationFailedException', 'json', ['App\\API\\Serializer\\ValidationFailedExceptionErrorHandler', 'serializeValidationExceptionToJson']);

        return $instance;
    }

    /**
     * Gets the private 'jms_serializer.traceable_metadata_factory' shared service.
     *
     * @return \JMS\SerializerBundle\Debug\TraceableMetadataFactory
     */
    protected static function getJmsSerializer_TraceableMetadataFactoryService($container)
    {
        $a = new \Metadata\MetadataFactory(new \Metadata\Driver\LazyLoadingDriver(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'metadata_driver' => ['privates', 'jms_serializer.metadata.typed_properties_driver', 'getJmsSerializer_Metadata_TypedPropertiesDriverService', true],
        ], [
            'metadata_driver' => '?',
        ]), 'metadata_driver'), 'Metadata\\ClassHierarchyMetadata', true);
        $a->setCache(($container->privates['jms_serializer.metadata.cache.file_cache'] ??= new \Metadata\Cache\FileCache(($container->targetDir.''.'/jms_serializer_default'))));
        $a->setIncludeInterfaces(false);

        return $container->privates['jms_serializer.traceable_metadata_factory'] = new \JMS\SerializerBundle\Debug\TraceableMetadataFactory($a);
    }

    /**
     * Gets the private 'jms_serializer.traceable_runs_listener' shared service.
     *
     * @return \JMS\SerializerBundle\Debug\RunsListener
     */
    protected static function getJmsSerializer_TraceableRunsListenerService($container)
    {
        return $container->privates['jms_serializer.traceable_runs_listener'] = new \JMS\SerializerBundle\Debug\RunsListener();
    }

    /**
     * Gets the private 'locale_aware_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\LocaleAwareListener
     */
    protected static function getLocaleAwareListenerService($container)
    {
        return $container->privates['locale_aware_listener'] = new \Symfony\Component\HttpKernel\EventListener\LocaleAwareListener(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Twig\\LocaleFormatExtensions'] ?? self::getLocaleFormatExtensionsService($container));
            yield 1 => ($container->privates['slugger'] ??= new \Symfony\Component\String\Slugger\AsciiSlugger('en'));
            yield 2 => ($container->privates['translator.default'] ?? self::getTranslator_DefaultService($container));
            yield 3 => ($container->privates['translation.locale_switcher'] ?? self::getTranslation_LocaleSwitcherService($container));
        }, 4), ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()));
    }

    /**
     * Gets the private 'locale_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\LocaleListener
     */
    protected static function getLocaleListenerService($container)
    {
        return $container->privates['locale_listener'] = new \Symfony\Component\HttpKernel\EventListener\LocaleListener(($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()), 'en', ($container->services['router'] ?? self::getRouterService($container)), false, $container->parameters['kernel.enabled_locales']);
    }

    /**
     * Gets the private 'mime_types' shared service.
     *
     * @return \Symfony\Component\Mime\MimeTypes
     */
    protected static function getMimeTypesService($container)
    {
        $container->privates['mime_types'] = $instance = new \Symfony\Component\Mime\MimeTypes();

        $instance->setDefault($instance);

        return $instance;
    }

    /**
     * Gets the private 'monolog.handler.console' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Handler\ConsoleHandler
     */
    protected static function getMonolog_Handler_ConsoleService($container)
    {
        return $container->privates['monolog.handler.console'] = new \Symfony\Bridge\Monolog\Handler\ConsoleHandler(NULL, true, [], []);
    }

    /**
     * Gets the private 'monolog.handler.main' shared service.
     *
     * @return \Monolog\Handler\FingersCrossedHandler
     */
    protected static function getMonolog_Handler_MainService($container)
    {
        $a = new \Monolog\Handler\StreamHandler((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'Kimai_log'.\DIRECTORY_SEPARATOR.'log/dev.log'), 'debug', true, NULL, false);
        $a->pushProcessor(($container->privates['monolog.processor.psr_log_message'] ??= new \Monolog\Processor\PsrLogMessageProcessor()));
        $a->setFormatter(new \Monolog\Formatter\LineFormatter('[%datetime%] [%extra.channel%] %level_name%: %message% %context% %extra%'."\n".'', 'Y-m-d H:i:s'));

        return $container->privates['monolog.handler.main'] = new \Monolog\Handler\FingersCrossedHandler($a, new \Symfony\Bridge\Monolog\Handler\FingersCrossed\HttpCodeActivationStrategy(($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()), [['code' => 400, 'urls' => ['^/api/']], ['code' => 401, 'urls' => ['^/api/']], ['code' => 403, 'urls' => []], ['code' => 404, 'urls' => []], ['code' => 405, 'urls' => ['/homepage$', '/login_check$', '/export/data$']]], new \Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy('notice')), 0, true, true, NULL);
    }

    /**
     * Gets the private 'monolog.logger' shared service.
     *
     * @return \Monolog\Logger
     */
    protected static function getMonolog_LoggerService($container)
    {
        $container->privates['monolog.logger'] = $instance = new \Monolog\Logger('app');

        $instance->pushProcessor([($container->privates['App\\Logger\\LogProcessor'] ??= new \App\Logger\LogProcessor()), '__invoke']);
        $instance->useMicrosecondTimestamps(true);
        $instance->pushHandler(($container->privates['monolog.handler.console'] ?? self::getMonolog_Handler_ConsoleService($container)));
        $instance->pushHandler(($container->privates['monolog.handler.main'] ?? self::getMonolog_Handler_MainService($container)));
        ($container->privates['debug.debug_logger_configurator'] ?? self::getDebug_DebugLoggerConfiguratorService($container))->pushDebugLogger($instance);

        return $instance;
    }

    /**
     * Gets the private 'monolog.logger.cache' shared service.
     *
     * @return \Monolog\Logger
     */
    protected static function getMonolog_Logger_CacheService($container)
    {
        $container->privates['monolog.logger.cache'] = $instance = new \Monolog\Logger('cache');

        $instance->pushProcessor([($container->privates['App\\Logger\\LogProcessor'] ??= new \App\Logger\LogProcessor()), '__invoke']);
        $instance->pushHandler(($container->privates['monolog.handler.console'] ?? self::getMonolog_Handler_ConsoleService($container)));
        $instance->pushHandler(($container->privates['monolog.handler.main'] ?? self::getMonolog_Handler_MainService($container)));
        ($container->privates['debug.debug_logger_configurator'] ?? self::getDebug_DebugLoggerConfiguratorService($container))->pushDebugLogger($instance);

        return $instance;
    }

    /**
     * Gets the private 'monolog.logger.request' shared service.
     *
     * @return \Monolog\Logger
     */
    protected static function getMonolog_Logger_RequestService($container)
    {
        $container->privates['monolog.logger.request'] = $instance = new \Monolog\Logger('request');

        $instance->pushProcessor([($container->privates['App\\Logger\\LogProcessor'] ??= new \App\Logger\LogProcessor()), '__invoke']);
        $instance->pushHandler(($container->privates['monolog.handler.console'] ?? self::getMonolog_Handler_ConsoleService($container)));
        $instance->pushHandler(($container->privates['monolog.handler.main'] ?? self::getMonolog_Handler_MainService($container)));
        ($container->privates['debug.debug_logger_configurator'] ?? self::getDebug_DebugLoggerConfiguratorService($container))->pushDebugLogger($instance);

        return $instance;
    }

    /**
     * Gets the private 'monolog.logger.security' shared service.
     *
     * @return \Monolog\Logger
     */
    protected static function getMonolog_Logger_SecurityService($container)
    {
        $container->privates['monolog.logger.security'] = $instance = new \Monolog\Logger('security');

        $instance->pushProcessor([($container->privates['App\\Logger\\LogProcessor'] ??= new \App\Logger\LogProcessor()), '__invoke']);
        $instance->pushHandler(($container->privates['monolog.handler.console'] ?? self::getMonolog_Handler_ConsoleService($container)));
        $instance->pushHandler(($container->privates['monolog.handler.main'] ?? self::getMonolog_Handler_MainService($container)));
        ($container->privates['debug.debug_logger_configurator'] ?? self::getDebug_DebugLoggerConfiguratorService($container))->pushDebugLogger($instance);

        return $instance;
    }

    /**
     * Gets the private 'nelmio_cors.cors_listener' shared service.
     *
     * @return \Nelmio\CorsBundle\EventListener\CorsListener
     */
    protected static function getNelmioCors_CorsListenerService($container)
    {
        return $container->privates['nelmio_cors.cors_listener'] = new \Nelmio\CorsBundle\EventListener\CorsListener(new \Nelmio\CorsBundle\Options\Resolver([new \Nelmio\CorsBundle\Options\ConfigProvider($container->parameters['nelmio_cors.map'], $container->parameters['nelmio_cors.defaults'])]));
    }

    /**
     * Gets the private 'parameter_bag' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag
     */
    protected static function getParameterBagService($container)
    {
        return $container->privates['parameter_bag'] = new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($container);
    }

    /**
     * Gets the private 'profiler_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ProfilerListener
     */
    protected static function getProfilerListenerService($container)
    {
        $a = ($container->services['.container.private.profiler'] ?? self::get_Container_Private_ProfilerService($container));

        if (isset($container->privates['profiler_listener'])) {
            return $container->privates['profiler_listener'];
        }

        return $container->privates['profiler_listener'] = new \Symfony\Component\HttpKernel\EventListener\ProfilerListener($a, ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()), NULL, false, false, NULL);
    }

    /**
     * Gets the private 'property_accessor' shared service.
     *
     * @return \Symfony\Component\PropertyAccess\PropertyAccessor
     */
    protected static function getPropertyAccessorService($container)
    {
        $a = ($container->privates['property_info.reflection_extractor'] ??= new \Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor());

        return $container->privates['property_accessor'] = new \Symfony\Component\PropertyAccess\PropertyAccessor(3, 2, new \Symfony\Component\Cache\Adapter\ArrayAdapter(0, false), $a, $a);
    }

    /**
     * Gets the private 'property_info' shared service.
     *
     * @return \Symfony\Component\PropertyInfo\PropertyInfoExtractor
     */
    protected static function getPropertyInfoService($container)
    {
        return $container->privates['property_info'] = new \Symfony\Component\PropertyInfo\PropertyInfoExtractor(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['property_info.serializer_extractor'] ?? $container->load('getPropertyInfo_SerializerExtractorService'));
            yield 1 => ($container->privates['property_info.reflection_extractor'] ??= new \Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor());
            yield 2 => ($container->privates['doctrine.orm.default_entity_manager.property_info_extractor'] ?? $container->load('getDoctrine_Orm_DefaultEntityManager_PropertyInfoExtractorService'));
        }, 3), new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['doctrine.orm.default_entity_manager.property_info_extractor'] ?? $container->load('getDoctrine_Orm_DefaultEntityManager_PropertyInfoExtractorService'));
            yield 1 => ($container->privates['property_info.phpstan_extractor'] ??= new \Symfony\Component\PropertyInfo\Extractor\PhpStanExtractor());
            yield 2 => ($container->privates['property_info.php_doc_extractor'] ??= new \Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor());
            yield 3 => ($container->privates['property_info.reflection_extractor'] ??= new \Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor());
        }, 4), new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['property_info.php_doc_extractor'] ??= new \Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor());
        }, 1), new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['doctrine.orm.default_entity_manager.property_info_extractor'] ?? $container->load('getDoctrine_Orm_DefaultEntityManager_PropertyInfoExtractorService'));
            yield 1 => ($container->privates['property_info.reflection_extractor'] ??= new \Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor());
        }, 2), new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['property_info.reflection_extractor'] ??= new \Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor());
        }, 1));
    }

    /**
     * Gets the private 'router.expression_language_provider' shared service.
     *
     * @return \Symfony\Component\Routing\Matcher\ExpressionLanguageProvider
     */
    protected static function getRouter_ExpressionLanguageProviderService($container)
    {
        return $container->privates['router.expression_language_provider'] = new \Symfony\Component\Routing\Matcher\ExpressionLanguageProvider(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'env' => ['privates', 'container.getenv', 'getContainer_GetenvService', true],
            'service' => ['services', 'container.get_routing_condition_service', 'getContainer_GetRoutingConditionServiceService', true],
        ], [
            'env' => 'Closure',
            'service' => 'Closure',
        ]));
    }

    /**
     * Gets the private 'router.request_context' shared service.
     *
     * @return \Symfony\Component\Routing\RequestContext
     */
    protected static function getRouter_RequestContextService($container)
    {
        $container->privates['router.request_context'] = $instance = \Symfony\Component\Routing\RequestContext::fromUri('', 'localhost', 'http', 80, 443);

        $instance->setParameter('_functions', ($container->privates['router.expression_language_provider'] ?? self::getRouter_ExpressionLanguageProviderService($container)));

        return $instance;
    }

    /**
     * Gets the private 'router_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\RouterListener
     */
    protected static function getRouterListenerService($container)
    {
        return $container->privates['router_listener'] = new \Symfony\Component\HttpKernel\EventListener\RouterListener(($container->services['router'] ?? self::getRouterService($container)), ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()), ($container->privates['router.request_context'] ?? self::getRouter_RequestContextService($container)), ($container->privates['monolog.logger.request'] ?? self::getMonolog_Logger_RequestService($container)), \dirname(__DIR__, 4), true);
    }

    /**
     * Gets the private 'scheb_two_factor.provider_preparation_recorder' shared service.
     *
     * @return \Scheb\TwoFactorBundle\Security\TwoFactor\Provider\TokenPreparationRecorder
     */
    protected static function getSchebTwoFactor_ProviderPreparationRecorderService($container)
    {
        return $container->privates['scheb_two_factor.provider_preparation_recorder'] = new \Scheb\TwoFactorBundle\Security\TwoFactor\Provider\TokenPreparationRecorder(($container->privates['security.token_storage'] ?? self::getSecurity_TokenStorageService($container)));
    }

    /**
     * Gets the private 'scheb_two_factor.provider_registry' shared service.
     *
     * @return \Scheb\TwoFactorBundle\Security\TwoFactor\Provider\TwoFactorProviderRegistry
     */
    protected static function getSchebTwoFactor_ProviderRegistryService($container)
    {
        return $container->privates['scheb_two_factor.provider_registry'] = new \Scheb\TwoFactorBundle\Security\TwoFactor\Provider\TwoFactorProviderRegistry(new RewindableGenerator(function () use ($container) {
            yield 'totp' => ($container->privates['scheb_two_factor.security.totp.provider'] ?? $container->load('getSchebTwoFactor_Security_Totp_ProviderService'));
        }, 1));
    }

    /**
     * Gets the private 'scheb_two_factor.security.authentication.trust_resolver' shared service.
     *
     * @return \Scheb\TwoFactorBundle\Security\Authentication\AuthenticationTrustResolver
     */
    protected static function getSchebTwoFactor_Security_Authentication_TrustResolverService($container)
    {
        return $container->privates['scheb_two_factor.security.authentication.trust_resolver'] = new \Scheb\TwoFactorBundle\Security\Authentication\AuthenticationTrustResolver(new \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver());
    }

    /**
     * Gets the private 'security.authentication.form_listener.two_factor.secured_area' shared service.
     *
     * @return \Scheb\TwoFactorBundle\Security\TwoFactor\Event\TwoFactorFormListener
     */
    protected static function getSecurity_Authentication_FormListener_TwoFactor_SecuredAreaService($container)
    {
        $a = ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container));

        if (isset($container->privates['security.authentication.form_listener.two_factor.secured_area'])) {
            return $container->privates['security.authentication.form_listener.two_factor.secured_area'];
        }

        return $container->privates['security.authentication.form_listener.two_factor.secured_area'] = new \Scheb\TwoFactorBundle\Security\TwoFactor\Event\TwoFactorFormListener(($container->privates['security.firewall_config.two_factor.secured_area'] ?? self::getSecurity_FirewallConfig_TwoFactor_SecuredAreaService($container)), ($container->privates['security.token_storage'] ?? self::getSecurity_TokenStorageService($container)), $a);
    }

    /**
     * Gets the private 'security.authentication.provider_preparation_listener.two_factor.secured_area' shared service.
     *
     * @return \Scheb\TwoFactorBundle\Security\TwoFactor\Provider\TwoFactorProviderPreparationListener
     */
    protected static function getSecurity_Authentication_ProviderPreparationListener_TwoFactor_SecuredAreaService($container)
    {
        $a = ($container->privates['scheb_two_factor.provider_registry'] ?? self::getSchebTwoFactor_ProviderRegistryService($container));

        if (isset($container->privates['security.authentication.provider_preparation_listener.two_factor.secured_area'])) {
            return $container->privates['security.authentication.provider_preparation_listener.two_factor.secured_area'];
        }

        return $container->privates['security.authentication.provider_preparation_listener.two_factor.secured_area'] = new \Scheb\TwoFactorBundle\Security\TwoFactor\Provider\TwoFactorProviderPreparationListener($a, ($container->privates['scheb_two_factor.provider_preparation_recorder'] ?? self::getSchebTwoFactor_ProviderPreparationRecorderService($container)), ($container->privates['monolog.logger'] ?? self::getMonolog_LoggerService($container)), 'secured_area', false, false);
    }

    /**
     * Gets the private 'security.authenticator.cache.expired_links' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected static function getSecurity_Authenticator_Cache_ExpiredLinksService($container)
    {
        $a = new \Symfony\Component\Cache\Adapter\FilesystemAdapter('K9MHI62jZ6', 0, ($container->targetDir.''.'/pools/app'), ($container->privates['cache.default_marshaller'] ??= new \Symfony\Component\Cache\Marshaller\DefaultMarshaller(NULL, true)));
        $a->setLogger(($container->privates['monolog.logger.cache'] ?? self::getMonolog_Logger_CacheService($container)));

        return $container->privates['security.authenticator.cache.expired_links'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter($a);
    }

    /**
     * Gets the private 'security.context_listener.0' shared service.
     *
     * @return \Symfony\Component\Security\Http\Firewall\ContextListener
     */
    protected static function getSecurity_ContextListener_0Service($container)
    {
        $a = ($container->privates['debug.security.event_dispatcher.secured_area'] ?? self::getDebug_Security_EventDispatcher_SecuredAreaService($container));

        if (isset($container->privates['security.context_listener.0'])) {
            return $container->privates['security.context_listener.0'];
        }

        return $container->privates['security.context_listener.0'] = new \Symfony\Component\Security\Http\Firewall\ContextListener(($container->privates['security.untracked_token_storage'] ??= new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage()), new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['security.user.provider.concrete.chain_provider'] ?? $container->load('getSecurity_User_Provider_Concrete_ChainProviderService'));
            yield 1 => ($container->privates['security.user.provider.concrete.kimai_internal'] ?? $container->load('getSecurity_User_Provider_Concrete_KimaiInternalService'));
            yield 2 => ($container->privates['App\\Ldap\\LdapUserProvider'] ?? $container->load('getLdapUserProviderService'));
        }, 3), 'secured_area', ($container->privates['monolog.logger.security'] ?? self::getMonolog_Logger_SecurityService($container)), $a, ($container->privates['scheb_two_factor.security.authentication.trust_resolver'] ?? self::getSchebTwoFactor_Security_Authentication_TrustResolverService($container)), [($container->privates['security.token_storage'] ?? self::getSecurity_TokenStorageService($container)), 'enableUsageTracking']);
    }

    /**
     * Gets the private 'security.firewall.map' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallMap
     */
    protected static function getSecurity_Firewall_MapService($container)
    {
        $a = ($container->privates['.service_locator.RFTfNqi'] ?? self::get_ServiceLocator_RFTfNqiService($container));

        if (isset($container->privates['security.firewall.map'])) {
            return $container->privates['security.firewall.map'];
        }

        return $container->privates['security.firewall.map'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallMap($a, new RewindableGenerator(function () use ($container) {
            yield 'security.firewall.map.context.dev' => ($container->privates['.security.request_matcher.kLbKLHa'] ?? $container->load('get_Security_RequestMatcher_KLbKLHaService'));
            yield 'security.firewall.map.context.api' => ($container->privates['App\\API\\Authentication\\ApiRequestMatcher'] ??= new \App\API\Authentication\ApiRequestMatcher());
            yield 'security.firewall.map.context.secured_area' => ($container->privates['.security.request_matcher.yy_ZK6T'] ?? $container->load('get_Security_RequestMatcher_YyZK6TService'));
        }, 3));
    }

    /**
     * Gets the private 'security.firewall_config.two_factor.secured_area' shared service.
     *
     * @return \Scheb\TwoFactorBundle\Security\TwoFactor\TwoFactorFirewallConfig
     */
    protected static function getSecurity_FirewallConfig_TwoFactor_SecuredAreaService($container)
    {
        return $container->privates['security.firewall_config.two_factor.secured_area'] = new \Scheb\TwoFactorBundle\Security\TwoFactor\TwoFactorFirewallConfig(['auth_form_path' => '2fa_login', 'check_path' => '2fa_login_check', 'remember_me_sets_trusted' => true, 'post_only' => true, 'always_use_default_target_path' => false, 'default_target_path' => '/', 'success_handler' => NULL, 'failure_handler' => NULL, 'authentication_required_handler' => NULL, 'auth_code_parameter_name' => '_auth_code', 'trusted_parameter_name' => '_trusted', 'multi_factor' => false, 'prepare_on_login' => false, 'prepare_on_access_denied' => false, 'enable_csrf' => false, 'csrf_parameter' => '_csrf_token', 'csrf_token_id' => 'two_factor', 'provider' => NULL], 'secured_area', ($container->privates['security.http_utils'] ?? self::getSecurity_HttpUtilsService($container)), new \Scheb\TwoFactorBundle\Security\Http\Utils\RequestDataReader());
    }

    /**
     * Gets the private 'security.http_utils' shared service.
     *
     * @return \Symfony\Component\Security\Http\HttpUtils
     */
    protected static function getSecurity_HttpUtilsService($container)
    {
        $a = ($container->services['router'] ?? self::getRouterService($container));

        return $container->privates['security.http_utils'] = new \Symfony\Component\Security\Http\HttpUtils($a, $a, '{^https?://%s$}i', '{^https://%s$}i');
    }

    /**
     * Gets the private 'security.logout_url_generator' shared service.
     *
     * @return \Symfony\Component\Security\Http\Logout\LogoutUrlGenerator
     */
    protected static function getSecurity_LogoutUrlGeneratorService($container)
    {
        $container->privates['security.logout_url_generator'] = $instance = new \Symfony\Component\Security\Http\Logout\LogoutUrlGenerator(($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()), ($container->services['router'] ?? self::getRouterService($container)), ($container->privates['security.token_storage'] ?? self::getSecurity_TokenStorageService($container)));

        $instance->registerListener('secured_area', 'logout', 'logout', '_csrf_token', NULL, NULL);

        return $instance;
    }

    /**
     * Gets the private 'security.role_hierarchy' shared service.
     *
     * @return \Symfony\Component\Security\Core\Role\RoleHierarchy
     */
    protected static function getSecurity_RoleHierarchyService($container)
    {
        return $container->privates['security.role_hierarchy'] = new \Symfony\Component\Security\Core\Role\RoleHierarchy($container->parameters['security.role_hierarchy.roles']);
    }

    /**
     * Gets the private 'security.token_storage' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage
     */
    protected static function getSecurity_TokenStorageService($container)
    {
        return $container->privates['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage(($container->privates['security.untracked_token_storage'] ??= new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage()), new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
        ], [
            'request_stack' => '?',
        ]));
    }

    /**
     * Gets the private 'serializer' shared service.
     *
     * @return \Symfony\Component\Serializer\Serializer
     */
    protected static function getSerializerService($container)
    {
        $a = ($container->privates['property_accessor'] ?? self::getPropertyAccessorService($container));
        $b = ($container->services['translator'] ?? self::getTranslatorService($container));
        $c = ($container->privates['serializer.name_converter.metadata_aware'] ?? self::getSerializer_NameConverter_MetadataAwareService($container));
        $d = ($container->privates['serializer.mapping.class_metadata_factory'] ?? self::getSerializer_Mapping_ClassMetadataFactoryService($container));
        $e = ($container->privates['property_info'] ?? self::getPropertyInfoService($container));
        $f = new \Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata($d);

        return $container->privates['serializer'] = new \Symfony\Component\Serializer\Serializer([new \Symfony\Component\Serializer\Normalizer\UnwrappingDenormalizer($a), new \FOS\RestBundle\Serializer\Normalizer\FormErrorNormalizer(), new \FOS\RestBundle\Serializer\Normalizer\FlattenExceptionNormalizer(($container->privates['fos_rest.exception.codes_map'] ?? self::getFosRest_Exception_CodesMapService($container)), ($container->privates['fos_rest.exception.messages_map'] ??= new \FOS\RestBundle\Util\ExceptionValueMap([])), true, false), new \Symfony\Component\Serializer\Normalizer\ProblemNormalizer(true, translator: $b), new \Symfony\Component\Serializer\Normalizer\UidNormalizer(), new \Symfony\Component\Serializer\Normalizer\DateTimeNormalizer(), new \Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer([], $c), new \Symfony\Component\Serializer\Normalizer\MimeMessageNormalizer(new \Symfony\Component\Serializer\Normalizer\PropertyNormalizer($d, $c, $e, $f, NULL, [])), new \Symfony\Component\Serializer\Normalizer\DateTimeZoneNormalizer(), new \Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer(), new \Symfony\Component\Serializer\Normalizer\FormErrorNormalizer(), new \Symfony\Component\Serializer\Normalizer\BackedEnumNormalizer(), new \Symfony\Component\Serializer\Normalizer\DataUriNormalizer(($container->privates['mime_types'] ?? self::getMimeTypesService($container))), new \Symfony\Component\Serializer\Normalizer\TranslatableNormalizer($b), new \Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer(NULL, NULL), new \Symfony\Component\Serializer\Normalizer\ArrayDenormalizer(), new \Symfony\Component\Serializer\Normalizer\ObjectNormalizer($d, $c, $a, $e, $f, NULL, [], $e)], [new \Symfony\Component\Serializer\Encoder\XmlEncoder(), new \Symfony\Component\Serializer\Encoder\JsonEncoder(NULL, NULL), new \Symfony\Component\Serializer\Encoder\YamlEncoder(NULL, NULL), new \Symfony\Component\Serializer\Encoder\CsvEncoder()]);
    }

    /**
     * Gets the private 'serializer.mapping.class_metadata_factory' shared service.
     *
     * @return \Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory
     */
    protected static function getSerializer_Mapping_ClassMetadataFactoryService($container)
    {
        return $container->privates['serializer.mapping.class_metadata_factory'] = new \Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory(new \Symfony\Component\Serializer\Mapping\Loader\LoaderChain([new \Symfony\Component\Serializer\Mapping\Loader\AttributeLoader(NULL)]));
    }

    /**
     * Gets the private 'serializer.name_converter.metadata_aware' shared service.
     *
     * @return \Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter
     */
    protected static function getSerializer_NameConverter_MetadataAwareService($container)
    {
        return $container->privates['serializer.name_converter.metadata_aware'] = new \Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter(($container->privates['serializer.mapping.class_metadata_factory'] ?? self::getSerializer_Mapping_ClassMetadataFactoryService($container)));
    }

    /**
     * Gets the private 'session_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\SessionListener
     */
    protected static function getSessionListenerService($container)
    {
        return $container->privates['session_listener'] = new \Symfony\Component\HttpKernel\EventListener\SessionListener(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'logger' => ['privates', 'monolog.logger', 'getMonolog_LoggerService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'session_collector' => ['privates', 'data_collector.request.session_collector', 'getDataCollector_Request_SessionCollectorService', true],
            'session_factory' => ['privates', 'session.factory', 'getSession_FactoryService', true],
        ], [
            'logger' => '?',
            'request_stack' => '?',
            'session_collector' => '?',
            'session_factory' => '?',
        ]), true, $container->parameters['session.storage.options']);
    }

    /**
     * Gets the private 'tabler_bundle.context_helper' shared service.
     *
     * @return \KevinPapst\TablerBundle\Helper\ContextHelper
     */
    protected static function getTablerBundle_ContextHelperService($container)
    {
        return $container->privates['tabler_bundle.context_helper'] = new \KevinPapst\TablerBundle\Helper\ContextHelper($container->parameters['tabler_bundle.options']);
    }

    /**
     * Gets the private 'translation.locale_switcher' shared service.
     *
     * @return \Symfony\Component\Translation\LocaleSwitcher
     */
    protected static function getTranslation_LocaleSwitcherService($container)
    {
        return $container->privates['translation.locale_switcher'] = new \Symfony\Component\Translation\LocaleSwitcher('en', new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['App\\Twig\\LocaleFormatExtensions'] ?? self::getLocaleFormatExtensionsService($container));
            yield 1 => ($container->privates['slugger'] ??= new \Symfony\Component\String\Slugger\AsciiSlugger('en'));
            yield 2 => ($container->privates['translator.default'] ?? self::getTranslator_DefaultService($container));
        }, 3), ($container->privates['router.request_context'] ?? self::getRouter_RequestContextService($container)));
    }

    /**
     * Gets the private 'translator.default' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Translation\Translator
     */
    protected static function getTranslator_DefaultService($container)
    {
        $container->privates['translator.default'] = $instance = new \Symfony\Bundle\FrameworkBundle\Translation\Translator(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'translation.loader.csv' => ['privates', 'translation.loader.csv', 'getTranslation_Loader_CsvService', true],
            'translation.loader.dat' => ['privates', 'translation.loader.dat', 'getTranslation_Loader_DatService', true],
            'translation.loader.ini' => ['privates', 'translation.loader.ini', 'getTranslation_Loader_IniService', true],
            'translation.loader.json' => ['privates', 'translation.loader.json', 'getTranslation_Loader_JsonService', true],
            'translation.loader.mo' => ['privates', 'translation.loader.mo', 'getTranslation_Loader_MoService', true],
            'translation.loader.php' => ['privates', 'translation.loader.php', 'getTranslation_Loader_PhpService', true],
            'translation.loader.po' => ['privates', 'translation.loader.po', 'getTranslation_Loader_PoService', true],
            'translation.loader.qt' => ['privates', 'translation.loader.qt', 'getTranslation_Loader_QtService', true],
            'translation.loader.res' => ['privates', 'translation.loader.res', 'getTranslation_Loader_ResService', true],
            'translation.loader.xliff' => ['privates', 'translation.loader.xliff', 'getTranslation_Loader_XliffService', true],
            'translation.loader.yml' => ['privates', 'translation.loader.yml', 'getTranslation_Loader_YmlService', true],
        ], [
            'translation.loader.csv' => '?',
            'translation.loader.dat' => '?',
            'translation.loader.ini' => '?',
            'translation.loader.json' => '?',
            'translation.loader.mo' => '?',
            'translation.loader.php' => '?',
            'translation.loader.po' => '?',
            'translation.loader.qt' => '?',
            'translation.loader.res' => '?',
            'translation.loader.xliff' => '?',
            'translation.loader.yml' => '?',
        ]), new \Symfony\Component\Translation\Formatter\MessageFormatter(new \Symfony\Component\Translation\IdentityTranslator()), 'en', ['translation.loader.php' => ['php'], 'translation.loader.yml' => ['yaml', 'yml'], 'translation.loader.xliff' => ['xlf', 'xliff'], 'translation.loader.po' => ['po'], 'translation.loader.mo' => ['mo'], 'translation.loader.qt' => ['ts'], 'translation.loader.csv' => ['csv'], 'translation.loader.res' => ['res'], 'translation.loader.dat' => ['dat'], 'translation.loader.ini' => ['ini'], 'translation.loader.json' => ['json']], ['cache_dir' => ($container->targetDir.''.'/translations'), 'debug' => true, 'resource_files' => ['af' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.af.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.af.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.af.xlf')], 'ar' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.ar.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.ar.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.ar.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.ar.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.ar.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.ar.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.ar.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.ar.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.ar.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.ar.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.ar.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.ar.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.ar.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.ar.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.ar.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.ar.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.ar.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.ar.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.ar.xlf')], 'az' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.az.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.az.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.az.xlf')], 'be' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.be.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.be.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.be.xlf')], 'bg' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.bg.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.bg.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.bg.xlf')], 'bs' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.bs.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.bs.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.bs.xlf')], 'ca' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.ca.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.ca.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.ca.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.ca.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.ca.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.ca.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.ca.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.ca.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.ca.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.ca.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.ca.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.ca.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.ca.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.ca.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.ca.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.ca.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.ca.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.ca.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.ca.xlf')], 'cs' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.cs.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.cs.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.cs.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.cs.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle/Resources/translations'.\DIRECTORY_SEPARATOR.'SchebTwoFactorBundle.cs.yml'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.cs.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.cs.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.cs.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.cs.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.cs.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.cs.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.cs.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.cs.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.cs.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.cs.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.cs.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.cs.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.cs.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.cs.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.cs.xlf')], 'cy' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.cy.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.cy.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.cy.xlf')], 'da' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.da.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.da.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.da.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.da.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.da.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.da.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.da.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.da.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.da.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.da.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.da.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.da.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.da.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.da.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.da.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.da.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.da.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.da.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.da.xlf')], 'de' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.de.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.de.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.de.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.de.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle/Resources/translations'.\DIRECTORY_SEPARATOR.'SchebTwoFactorBundle.de.yml'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.de.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.de.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.de.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.de.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.de.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.de.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.de.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.de.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.de.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.de.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.de.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.de.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.de.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.de.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.de.xlf')], 'el' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.el.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.el.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.el.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.el.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.el.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.el.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.el.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.el.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.el.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.el.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.el.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.el.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.el.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.el.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.el.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.el.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.el.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.el.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.el.xlf')], 'en' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.en.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.en.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.en.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.en.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle/Resources/translations'.\DIRECTORY_SEPARATOR.'SchebTwoFactorBundle.en.yml'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.en.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.en.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.en.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.en.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.en.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.en.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.en.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.en.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.en.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.en.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.en.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.en.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.en.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.en.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.en.xlf')], 'es' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.es.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.es.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.es.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.es.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle/Resources/translations'.\DIRECTORY_SEPARATOR.'SchebTwoFactorBundle.es.yml'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.es.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.es.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.es.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.es.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.es.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.es.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.es.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.es.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.es.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.es.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.es.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.es.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.es.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.es.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.es.xlf')], 'et' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.et.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.et.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.et.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.et.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.et.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.et.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.et.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.et.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.et.xlf')], 'eu' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.eu.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.eu.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.eu.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.eu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.eu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.eu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.eu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.eu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.eu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.eu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.eu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.eu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.eu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.eu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.eu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.eu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.eu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.eu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.eu.xlf')], 'fa' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.fa.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.fa.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.fa.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.fa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.fa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.fa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.fa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.fa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.fa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.fa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.fa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.fa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.fa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.fa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.fa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.fa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.fa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.fa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.fa.xlf')], 'fi' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.fi.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.fi.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.fi.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.fi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.fi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.fi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.fi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.fi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.fi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.fi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.fi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.fi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.fi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.fi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.fi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.fi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.fi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.fi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.fi.xlf')], 'fr' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.fr.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.fr.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.fr.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.fr.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle/Resources/translations'.\DIRECTORY_SEPARATOR.'SchebTwoFactorBundle.fr.yml'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.fr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.fr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.fr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.fr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.fr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.fr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.fr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.fr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.fr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.fr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.fr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.fr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.fr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.fr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.fr.xlf')], 'gl' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.gl.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.gl.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.gl.xlf')], 'he' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.he.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.he.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.he.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.he.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.he.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.he.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.he.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.he.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.he.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.he.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.he.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.he.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.he.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.he.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.he.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.he.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.he.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.he.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.he.xlf')], 'hr' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.hr.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.hr.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.hr.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.hr.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle/Resources/translations'.\DIRECTORY_SEPARATOR.'SchebTwoFactorBundle.hr.yml'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.hr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.hr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.hr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.hr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.hr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.hr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.hr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.hr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.hr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.hr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.hr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.hr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.hr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.hr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.hr.xlf')], 'hu' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.hu.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.hu.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.hu.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.hu.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle/Resources/translations'.\DIRECTORY_SEPARATOR.'SchebTwoFactorBundle.hu.yml'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.hu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.hu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.hu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.hu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.hu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.hu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.hu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.hu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.hu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.hu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.hu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.hu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.hu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.hu.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.hu.xlf')], 'hy' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.hy.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.hy.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.hy.xlf')], 'id' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.id.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.id.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.id.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.id.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.id.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.id.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.id.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.id.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.id.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.id.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.id.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.id.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.id.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.id.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.id.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.id.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.id.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.id.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.id.xlf')], 'it' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.it.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.it.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.it.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.it.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.it.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.it.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.it.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.it.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.it.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.it.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.it.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.it.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.it.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.it.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.it.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.it.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.it.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.it.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.it.xlf')], 'ja' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.ja.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.ja.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.ja.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.ja.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.ja.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.ja.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.ja.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.ja.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.ja.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.ja.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.ja.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.ja.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.ja.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.ja.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.ja.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.ja.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.ja.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.ja.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.ja.xlf')], 'lb' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.lb.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.lb.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.lb.xlf')], 'lt' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.lt.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.lt.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.lt.xlf')], 'lv' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.lv.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.lv.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.lv.xlf')], 'mk' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.mk.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.mk.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.mk.xlf')], 'mn' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.mn.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.mn.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.mn.xlf')], 'my' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.my.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.my.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.my.xlf')], 'nb' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.nb.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.nb.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.nb.xlf')], 'nl' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.nl.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.nl.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.nl.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.nl.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle/Resources/translations'.\DIRECTORY_SEPARATOR.'SchebTwoFactorBundle.nl.yml'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.nl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.nl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.nl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.nl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.nl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.nl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.nl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.nl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.nl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.nl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.nl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.nl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.nl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.nl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.nl.xlf')], 'nn' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.nn.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.nn.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.nn.xlf')], 'no' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.no.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.no.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.no.xlf')], 'pl' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.pl.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.pl.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.pl.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.pl.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle/Resources/translations'.\DIRECTORY_SEPARATOR.'SchebTwoFactorBundle.pl.yml'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.pl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.pl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.pl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.pl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.pl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.pl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.pl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.pl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.pl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.pl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.pl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.pl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.pl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.pl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.pl.xlf')], 'pt' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.pt.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.pt.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.pt.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.pt.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.pt.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.pt.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.pt.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.pt.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.pt.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.pt.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.pt.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.pt.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.pt.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.pt.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.pt.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.pt.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.pt.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.pt.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.pt.xlf')], 'pt_BR' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.pt_BR.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.pt_BR.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.pt_BR.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.pt_BR.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.pt_BR.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.pt_BR.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.pt_BR.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.pt_BR.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.pt_BR.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.pt_BR.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.pt_BR.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.pt_BR.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.pt_BR.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.pt_BR.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.pt_BR.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.pt_BR.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.pt_BR.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.pt_BR.xlf')], 'ro' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.ro.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.ro.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.ro.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.ro.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle/Resources/translations'.\DIRECTORY_SEPARATOR.'SchebTwoFactorBundle.ro.yml'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.ro.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.ro.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.ro.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.ro.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.ro.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.ro.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.ro.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.ro.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.ro.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.ro.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.ro.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.ro.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.ro.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.ro.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.ro.xlf')], 'ru' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.ru.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.ru.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.ru.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.ru.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle/Resources/translations'.\DIRECTORY_SEPARATOR.'SchebTwoFactorBundle.ru.yml'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.ru.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.ru.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.ru.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.ru.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.ru.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.ru.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.ru.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.ru.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.ru.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.ru.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.ru.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.ru.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.ru.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.ru.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.ru.xlf')], 'sk' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.sk.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.sk.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.sk.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.sk.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle/Resources/translations'.\DIRECTORY_SEPARATOR.'SchebTwoFactorBundle.sk.yml'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.sk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.sk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.sk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.sk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.sk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.sk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.sk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.sk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.sk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.sk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.sk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.sk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.sk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.sk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.sk.xlf')], 'sl' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.sl.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.sl.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.sl.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.sl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.sl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.sl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.sl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.sl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.sl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.sl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.sl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.sl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.sl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.sl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.sl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.sl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.sl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.sl.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.sl.xlf')], 'sq' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.sq.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.sq.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.sq.xlf')], 'sr_Cyrl' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.sr_Cyrl.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.sr_Cyrl.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.sr_Cyrl.xlf')], 'sr_Latn' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.sr_Latn.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.sr_Latn.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.sr_Latn.xlf')], 'sv' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.sv.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.sv.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.sv.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.sv.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle/Resources/translations'.\DIRECTORY_SEPARATOR.'SchebTwoFactorBundle.sv.yml'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.sv.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.sv.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.sv.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.sv.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.sv.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.sv.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.sv.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.sv.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.sv.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.sv.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.sv.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.sv.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.sv.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.sv.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.sv.xlf')], 'th' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.th.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.th.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.th.xlf')], 'tl' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.tl.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.tl.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.tl.xlf')], 'tr' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.tr.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.tr.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.tr.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.tr.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle/Resources/translations'.\DIRECTORY_SEPARATOR.'SchebTwoFactorBundle.tr.yml'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.tr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.tr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.tr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.tr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.tr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.tr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.tr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.tr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.tr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.tr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.tr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.tr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.tr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.tr.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.tr.xlf')], 'uk' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.uk.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.uk.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.uk.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.uk.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle/Resources/translations'.\DIRECTORY_SEPARATOR.'SchebTwoFactorBundle.uk.yml'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.uk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.uk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.uk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.uk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.uk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.uk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.uk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.uk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.uk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.uk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.uk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.uk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.uk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.uk.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.uk.xlf')], 'ur' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.ur.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.ur.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.ur.xlf')], 'uz' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.uz.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.uz.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.uz.xlf')], 'vi' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.vi.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.vi.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.vi.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.vi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.vi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.vi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.vi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.vi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.vi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.vi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.vi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.vi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.vi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.vi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.vi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.vi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.vi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.vi.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.vi.xlf')], 'zh_CN' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.zh_CN.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.zh_CN.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.zh_CN.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.zh_CN.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.zh_CN.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.zh_CN.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.zh_CN.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.zh_CN.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.zh_CN.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.zh_CN.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.zh_CN.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.zh_CN.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.zh_CN.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.zh_CN.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.zh_CN.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.zh_CN.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.zh_CN.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.zh_CN.xlf')], 'zh_TW' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.zh_TW.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'.\DIRECTORY_SEPARATOR.'validators.zh_TW.xlf'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'.\DIRECTORY_SEPARATOR.'security.zh_TW.xlf')], 'de_CH' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.de_CH.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.de_CH.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.de_CH.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.de_CH.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.de_CH.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.de_CH.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.de_CH.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.de_CH.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.de_CH.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.de_CH.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.de_CH.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.de_CH.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.de_CH.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.de_CH.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.de_CH.xlf')], 'eo' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.eo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.eo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.eo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.eo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.eo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.eo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.eo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.eo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.eo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.eo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.eo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.eo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.eo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.eo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.eo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.eo.xlf')], 'fo' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.fo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.fo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.fo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.fo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.fo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.fo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.fo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.fo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.fo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.fo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.fo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.fo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.fo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.fo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.fo.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.fo.xlf')], 'ko' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.ko.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.ko.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.ko.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.ko.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.ko.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.ko.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.ko.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.ko.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.ko.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.ko.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.ko.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.ko.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.ko.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.ko.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.ko.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.ko.xlf')], 'nb_NO' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.nb_NO.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.nb_NO.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.nb_NO.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.nb_NO.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.nb_NO.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.nb_NO.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.nb_NO.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.nb_NO.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.nb_NO.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.nb_NO.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.nb_NO.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.nb_NO.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.nb_NO.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.nb_NO.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.nb_NO.xlf')], 'pa' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.pa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.pa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.pa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.pa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.pa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.pa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.pa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.pa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.pa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.pa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.pa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.pa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.pa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.pa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.pa.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.pa.xlf')], 'zh-Hant' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'.\DIRECTORY_SEPARATOR.'TablerBundle.zh-Hant.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.zh-Hant.xlf')], 'ta' => [(\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.ta.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.ta.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.ta.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.ta.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.ta.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.ta.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.ta.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.ta.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.ta.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.ta.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.ta.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.ta.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.ta.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.ta.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.ta.xlf')], 'zh_Hant' => [(\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'daterangepicker.zh_Hant.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'email.zh_Hant.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'export.zh_Hant.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'flashmessages.zh_Hant.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-calculator.zh_Hant.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'invoice-renderer.zh_Hant.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'messages.zh_Hant.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'plugins.zh_Hant.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'reporting.zh_Hant.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'system-configuration.zh_Hant.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'tasks.zh_Hant.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'teams.zh_Hant.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'validators.zh_Hant.xlf'), (\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'wizard.zh_Hant.xlf')], 'de-CH' => [(\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.de-CH.xlf')], 'nb-NO' => [(\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.nb-NO.xlf')], 'pt-BR' => [(\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.pt-BR.xlf')], 'zh-Hans' => [(\dirname(__DIR__, 4).'/translations'.\DIRECTORY_SEPARATOR.'kiosk.zh-Hans.xlf')]], 'scanned_directories' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle/Resources/translations'), (\dirname(__DIR__, 4).'/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'framework-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-fixtures-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-migrations-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'monolog-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'web-profiler-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'debug-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'api-doc-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'cors-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'webpack-encore-bundle'.\DIRECTORY_SEPARATOR.'src/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'extra-bundle/translations')], 'cache_vary' => ['scanned_directories' => [(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'validator/Resources/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-core/Resources/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle/Resources/translations'), 'translations', (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'framework-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-fixtures-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-migrations-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'monolog-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'web-profiler-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'debug-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'api-doc-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'cors-bundle/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'webpack-encore-bundle'.\DIRECTORY_SEPARATOR.'src/translations'), (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'extra-bundle/translations')]]], $container->parameters['kimai_locales']);

        $instance->setConfigCacheFactory(($container->privates['config_cache_factory'] ?? self::getConfigCacheFactoryService($container)));
        $instance->setFallbackLocales(['en']);

        return $instance;
    }

    /**
     * Gets the private 'twig' shared service.
     *
     * @return \Twig\Environment
     */
    protected static function getTwigService($container)
    {
        $a = new \Twig\Loader\FilesystemLoader([], \dirname(__DIR__, 4));
        $a->addPath((\dirname(__DIR__, 4).'/templates/bundles/TablerBundle'), 'theme');
        $a->addPath((\dirname(__DIR__, 4).'/vendor/kevinpapst/tabler-bundle/templates'), 'theme');
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-bundle/templates'), 'Doctrine');
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-bundle/templates'), '!Doctrine');
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-migrations-bundle/Resources/views'), 'DoctrineMigrations');
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-migrations-bundle/Resources/views'), '!DoctrineMigrations');
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'web-profiler-bundle/Resources/views'), 'WebProfiler');
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'web-profiler-bundle/Resources/views'), '!WebProfiler');
        $a->addPath((\dirname(__DIR__, 4).'/templates/bundles/TwigBundle'), 'Twig');
        $a->addPath((\dirname(__DIR__, 4).'/templates/bundles/TwigBundle'), '!Twig');
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-bundle/Resources/views'), 'Security');
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-bundle/Resources/views'), '!Security');
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'debug-bundle/Resources/views'), 'Debug');
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'debug-bundle/Resources/views'), '!Debug');
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer-bundle/Resources/views'), 'JMSSerializer');
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer-bundle/Resources/views'), '!JMSSerializer');
        $a->addPath((\dirname(__DIR__, 4).'/templates/bundles/NelmioApiDocBundle'), 'NelmioApiDoc');
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'api-doc-bundle/templates'), 'NelmioApiDoc');
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'api-doc-bundle/templates'), '!NelmioApiDoc');
        $a->addPath((\dirname(__DIR__, 4).'/templates/bundles/TablerBundle'), 'Tabler');
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/templates'), 'Tabler');
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle/templates'), '!Tabler');
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle/Resources/views'), 'SchebTwoFactor');
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle/Resources/views'), '!SchebTwoFactor');
        $a->addPath((\dirname(__DIR__, 4).'/templates'));
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bridge/Resources/views/Email'), 'email');
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bridge/Resources/views/Email'), '!email');
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bridge/Resources/views/Form'));
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'templates/invoice/renderer/'), 'invoice');
        $a->addPath((\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'templates/export/renderer/'), 'export');

        $container->privates['twig'] = $instance = new \Twig\Environment($a, ['debug' => true, 'strict_variables' => true, 'autoescape' => 'name', 'cache' => ($container->targetDir.''.'/twig'), 'charset' => 'UTF-8']);

        $b = ($container->services['debug.stopwatch'] ??= new \Symfony\Component\Stopwatch\Stopwatch(true));
        $c = ($container->services['translator'] ?? self::getTranslatorService($container));
        $d = new \Symfony\Bridge\Twig\Extension\AssetExtension(($container->privates['assets.packages'] ?? self::getAssets_PackagesService($container)));
        $e = ($container->privates['debug.file_link_formatter'] ?? self::getDebug_FileLinkFormatterService($container));
        $f = ($container->services['router'] ?? self::getRouterService($container));
        $g = ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack());
        $h = ($container->privates['security.token_storage'] ?? self::getSecurity_TokenStorageService($container));
        $i = ($container->privates['App\\Configuration\\SystemConfiguration'] ?? self::getSystemConfigurationService($container));
        $j = new \Symfony\Component\VarDumper\Dumper\HtmlDumper(NULL, 'UTF-8', 1);
        $j->setDisplayOptions(['maxStringLength' => 4096, 'fileLinkFormat' => $e]);
        $k = new \Symfony\Bridge\Twig\AppVariable();
        $k->setEnvironment('dev');
        $k->setDebug(true);
        $k->setTokenStorage($h);
        if ($container->has('request_stack')) {
            $k->setRequestStack($g);
        }
        $k->setLocaleSwitcher(($container->privates['translation.locale_switcher'] ?? self::getTranslation_LocaleSwitcherService($container)));
        $k->setEnabledLocales($container->parameters['kernel.enabled_locales']);
        $l = new \Twig\Extra\TwigExtraBundle\MissingExtensionSuggestor();

        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\CsrfExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\ProfilerExtension(($container->privates['twig.profile'] ??= new \Twig\Profiler\Profile()), $b));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\TranslationExtension($c));
        $instance->addExtension($d);
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\CodeExtension($e, \dirname(__DIR__, 4), 'UTF-8'));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\RoutingExtension($f));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\YamlExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\StopwatchExtension($b, true));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\ExpressionExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\HttpKernelExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\HttpFoundationExtension(new \Symfony\Component\HttpFoundation\UrlHelper($g, $f)));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\SerializerExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\FormExtension($c));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\LogoutUrlExtension(($container->privates['security.logout_url_generator'] ?? self::getSecurity_LogoutUrlGeneratorService($container))));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\SecurityExtension(($container->services['jms_serializer.authorization_checker'] ?? self::getJmsSerializer_AuthorizationCheckerService($container)), new \Symfony\Component\Security\Http\Impersonate\ImpersonateUrlGenerator($g, ($container->privates['security.firewall.map'] ?? self::getSecurity_Firewall_MapService($container)), $h)));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\DumpExtension(($container->services['var_dumper.cloner'] ?? self::getVarDumper_ClonerService($container)), ($container->privates['var_dumper.html_dumper'] ?? self::getVarDumper_HtmlDumperService($container))));
        $instance->addExtension(new \App\Twig\Configuration($i));
        $instance->addExtension(new \App\Twig\DatatableExtensions(($container->privates['App\\Repository\\BookmarkRepository'] ?? self::getBookmarkRepositoryService($container)), ($container->privates['App\\Utils\\ProfileManager'] ??= new \App\Utils\ProfileManager())));
        $instance->addExtension(new \App\Twig\Extensions());
        $instance->addExtension(($container->privates['App\\Twig\\LocaleFormatExtensions'] ?? self::getLocaleFormatExtensionsService($container)));
        $instance->addExtension(new \App\Twig\PaginationExtension($f));
        $instance->addExtension(new \App\Twig\RuntimeExtensions());
        $instance->addExtension(new \Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension());
        $instance->addExtension(new \Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension($j));
        $instance->addExtension(new \JMS\Serializer\Twig\SerializerRuntimeExtension('jms_'));
        $instance->addExtension(new \Nelmio\ApiDocBundle\Render\Html\GetNelmioAsset($d));
        $instance->addExtension(new \Symfony\WebpackEncoreBundle\Twig\EntryFilesTwigExtension(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'webpack_encore.entrypoint_lookup_collection' => ['privates', 'webpack_encore.entrypoint_lookup_collection', 'getWebpackEncore_EntrypointLookupCollectionService', false],
            'webpack_encore.tag_renderer' => ['privates', 'webpack_encore.tag_renderer', 'getWebpackEncore_TagRendererService', true],
        ], [
            'webpack_encore.entrypoint_lookup_collection' => '?',
            'webpack_encore.tag_renderer' => '?',
        ])));
        $instance->addExtension(new \Twig\Extra\Intl\IntlExtension());
        $instance->addExtension(new \Twig\Extra\CssInliner\CssInlinerExtension());
        $instance->addExtension(new \Twig\Extra\Inky\InkyExtension());
        $instance->addExtension(new \Twig\Extra\String\StringExtension());
        $instance->addExtension(new \KevinPapst\TablerBundle\Twig\TablerExtension());
        $instance->addGlobal('app', $k);
        $instance->addRuntimeLoader(new \Twig\RuntimeLoader\ContainerRuntimeLoader(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'App\\Twig\\Runtime\\EncoreExtension' => ['privates', 'App\\Twig\\Runtime\\EncoreExtension', 'getEncoreExtensionService', true],
            'App\\Twig\\Runtime\\MarkdownExtension' => ['privates', 'App\\Twig\\Runtime\\MarkdownExtension', 'getMarkdownExtensionService', true],
            'App\\Twig\\Runtime\\MenuExtension' => ['privates', 'App\\Twig\\Runtime\\MenuExtension', 'getMenuExtensionService', true],
            'App\\Twig\\Runtime\\QrCodeExtension' => ['privates', 'App\\Twig\\Runtime\\QrCodeExtension', 'getQrCodeExtensionService', true],
            'App\\Twig\\Runtime\\ReportingExtension' => ['privates', 'App\\Twig\\Runtime\\ReportingExtension', 'getReportingExtensionService', true],
            'App\\Twig\\Runtime\\ThemeExtension' => ['privates', 'App\\Twig\\Runtime\\ThemeExtension', 'getThemeExtensionService', true],
            'App\\Twig\\Runtime\\TimesheetExtension' => ['privates', 'App\\Twig\\Runtime\\TimesheetExtension', 'getTimesheetExtensionService', true],
            'App\\Twig\\Runtime\\WidgetExtension' => ['privates', 'App\\Twig\\Runtime\\WidgetExtension', 'getWidgetExtensionService', true],
            'Symfony\\Bridge\\Twig\\Extension\\CsrfRuntime' => ['privates', 'twig.runtime.security_csrf', 'getTwig_Runtime_SecurityCsrfService', true],
            'Symfony\\Bridge\\Twig\\Extension\\HttpKernelRuntime' => ['privates', 'twig.runtime.httpkernel', 'getTwig_Runtime_HttpkernelService', true],
            'Symfony\\Bridge\\Twig\\Extension\\SerializerRuntime' => ['privates', 'twig.runtime.serializer', 'getTwig_Runtime_SerializerService', true],
            'Symfony\\Component\\Form\\FormRenderer' => ['privates', 'twig.form.renderer', 'getTwig_Form_RendererService', true],
            'JMS\\Serializer\\Twig\\SerializerRuntimeHelper' => ['privates', 'jms_serializer.twig_extension.serializer_runtime_helper', 'getJmsSerializer_TwigExtension_SerializerRuntimeHelperService', true],
            'KevinPapst\\TablerBundle\\Twig\\RuntimeExtension' => ['privates', 'KevinPapst\\TablerBundle\\Twig\\RuntimeExtension', 'getRuntimeExtensionService', true],
        ], [
            'App\\Twig\\Runtime\\EncoreExtension' => '?',
            'App\\Twig\\Runtime\\MarkdownExtension' => '?',
            'App\\Twig\\Runtime\\MenuExtension' => '?',
            'App\\Twig\\Runtime\\QrCodeExtension' => '?',
            'App\\Twig\\Runtime\\ReportingExtension' => '?',
            'App\\Twig\\Runtime\\ThemeExtension' => '?',
            'App\\Twig\\Runtime\\TimesheetExtension' => '?',
            'App\\Twig\\Runtime\\WidgetExtension' => '?',
            'Symfony\\Bridge\\Twig\\Extension\\CsrfRuntime' => '?',
            'Symfony\\Bridge\\Twig\\Extension\\HttpKernelRuntime' => '?',
            'Symfony\\Bridge\\Twig\\Extension\\SerializerRuntime' => '?',
            'Symfony\\Component\\Form\\FormRenderer' => '?',
            'JMS\\Serializer\\Twig\\SerializerRuntimeHelper' => '?',
            'KevinPapst\\TablerBundle\\Twig\\RuntimeExtension' => '?',
        ])));
        $instance->registerUndefinedFilterCallback([$l, 'suggestFilter']);
        $instance->registerUndefinedFunctionCallback([$l, 'suggestFunction']);
        $instance->registerUndefinedTokenParserCallback([$l, 'suggestTag']);
        $instance->addGlobal('tabler_bundle', ($container->privates['tabler_bundle.context_helper'] ?? self::getTablerBundle_ContextHelperService($container)));
        $instance->addGlobal('kimai_context', new \App\Twig\Context($i, $g));
        $instance->addGlobal('kimai_config', new \App\Twig\Configuration($i));
        (new \Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator('F j, Y H:i', '%d days', NULL, 0, '.', ','))->configure($instance);

        return $instance;
    }

    /**
     * Gets the private 'validator.builder' shared service.
     *
     * @return \Symfony\Component\Validator\ValidatorBuilder
     */
    protected static function getValidator_BuilderService($container)
    {
        $container->privates['validator.builder'] = $instance = \Symfony\Component\Validator\Validation::createValidatorBuilder();

        $a = ($container->privates['property_info'] ?? self::getPropertyInfoService($container));

        $instance->setConstraintValidatorFactory(new \Symfony\Component\Validator\ContainerConstraintValidatorFactory(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'App\\Validator\\Constraints\\ActivityValidator' => ['privates', 'App\\Validator\\Constraints\\ActivityValidator', 'getActivityValidatorService', true],
            'App\\Validator\\Constraints\\ColorChoicesValidator' => ['privates', 'App\\Validator\\Constraints\\ColorChoicesValidator', 'getColorChoicesValidatorService', true],
            'App\\Validator\\Constraints\\CustomerValidator' => ['privates', 'App\\Validator\\Constraints\\CustomerValidator', 'getCustomerValidatorService', true],
            'App\\Validator\\Constraints\\DateTimeFormatValidator' => ['privates', 'App\\Validator\\Constraints\\DateTimeFormatValidator', 'getDateTimeFormatValidatorService', true],
            'App\\Validator\\Constraints\\DurationValidator' => ['privates', 'App\\Validator\\Constraints\\DurationValidator', 'getDurationValidatorService', true],
            'App\\Validator\\Constraints\\HexColorValidator' => ['privates', 'App\\Validator\\Constraints\\HexColorValidator', 'getHexColorValidatorService', true],
            'App\\Validator\\Constraints\\ProjectValidator' => ['privates', 'App\\Validator\\Constraints\\ProjectValidator', 'getProjectValidatorService', true],
            'App\\Validator\\Constraints\\QuickEntryModelValidator' => ['privates', 'App\\Validator\\Constraints\\QuickEntryModelValidator', 'getQuickEntryModelValidatorService', true],
            'App\\Validator\\Constraints\\QuickEntryTimesheetValidator' => ['privates', 'App\\Validator\\Constraints\\QuickEntryTimesheetValidator', 'getQuickEntryTimesheetValidatorService', true],
            'App\\Validator\\Constraints\\RoleNameValidator' => ['privates', 'App\\Validator\\Constraints\\RoleNameValidator', 'getRoleNameValidatorService', true],
            'App\\Validator\\Constraints\\RoleValidator' => ['privates', 'App\\Validator\\Constraints\\RoleValidator', 'getRoleValidatorService', true],
            'App\\Validator\\Constraints\\TeamValidator' => ['privates', 'App\\Validator\\Constraints\\TeamValidator', 'getTeamValidatorService', true],
            'App\\Validator\\Constraints\\TimeFormatValidator' => ['privates', 'App\\Validator\\Constraints\\TimeFormatValidator', 'getTimeFormatValidatorService', true],
            'App\\Validator\\Constraints\\TimesheetBasicValidator' => ['privates', 'App\\Validator\\Constraints\\TimesheetBasicValidator', 'getTimesheetBasicValidatorService', true],
            'App\\Validator\\Constraints\\TimesheetBudgetUsedValidator' => ['privates', 'App\\Validator\\Constraints\\TimesheetBudgetUsedValidator', 'getTimesheetBudgetUsedValidatorService', true],
            'App\\Validator\\Constraints\\TimesheetDeactivatedValidator' => ['privates', 'App\\Validator\\Constraints\\TimesheetDeactivatedValidator', 'getTimesheetDeactivatedValidatorService', true],
            'App\\Validator\\Constraints\\TimesheetExportedValidator' => ['privates', 'App\\Validator\\Constraints\\TimesheetExportedValidator', 'getTimesheetExportedValidatorService', true],
            'App\\Validator\\Constraints\\TimesheetFutureTimesValidator' => ['privates', 'App\\Validator\\Constraints\\TimesheetFutureTimesValidator', 'getTimesheetFutureTimesValidatorService', true],
            'App\\Validator\\Constraints\\TimesheetLockdownValidator' => ['privates', 'App\\Validator\\Constraints\\TimesheetLockdownValidator', 'getTimesheetLockdownValidatorService', true],
            'App\\Validator\\Constraints\\TimesheetLongRunningValidator' => ['privates', 'App\\Validator\\Constraints\\TimesheetLongRunningValidator', 'getTimesheetLongRunningValidatorService', true],
            'App\\Validator\\Constraints\\TimesheetMultiUpdateValidator' => ['privates', 'App\\Validator\\Constraints\\TimesheetMultiUpdateValidator', 'getTimesheetMultiUpdateValidatorService', true],
            'App\\Validator\\Constraints\\TimesheetMultiUserValidator' => ['privates', 'App\\Validator\\Constraints\\TimesheetMultiUserValidator', 'getTimesheetMultiUserValidatorService', true],
            'App\\Validator\\Constraints\\TimesheetOverlappingValidator' => ['privates', 'App\\Validator\\Constraints\\TimesheetOverlappingValidator', 'getTimesheetOverlappingValidatorService', true],
            'App\\Validator\\Constraints\\TimesheetRestartValidator' => ['privates', 'App\\Validator\\Constraints\\TimesheetRestartValidator', 'getTimesheetRestartValidatorService', true],
            'App\\Validator\\Constraints\\TimesheetValidator' => ['privates', 'App\\Validator\\Constraints\\TimesheetValidator', 'getTimesheetValidatorService', true],
            'App\\Validator\\Constraints\\TimesheetZeroDurationValidator' => ['privates', 'App\\Validator\\Constraints\\TimesheetZeroDurationValidator', 'getTimesheetZeroDurationValidatorService', true],
            'App\\Validator\\Constraints\\UserValidator' => ['privates', 'App\\Validator\\Constraints\\UserValidator', 'getUserValidatorService', true],
            'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator' => ['privates', 'doctrine.orm.validator.unique', 'getDoctrine_Orm_Validator_UniqueService', true],
            'Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPasswordValidator' => ['privates', 'security.validator.user_password', 'getSecurity_Validator_UserPasswordService', true],
            'Symfony\\Component\\Validator\\Constraints\\EmailValidator' => ['privates', 'validator.email', 'getValidator_EmailService', true],
            'Symfony\\Component\\Validator\\Constraints\\ExpressionValidator' => ['privates', 'validator.expression', 'getValidator_ExpressionService', true],
            'Symfony\\Component\\Validator\\Constraints\\NoSuspiciousCharactersValidator' => ['privates', 'validator.no_suspicious_characters', 'getValidator_NoSuspiciousCharactersService', true],
            'Symfony\\Component\\Validator\\Constraints\\NotCompromisedPasswordValidator' => ['privates', 'validator.not_compromised_password', 'getValidator_NotCompromisedPasswordService', true],
            'Symfony\\Component\\Validator\\Constraints\\WhenValidator' => ['privates', 'validator.when', 'getValidator_WhenService', true],
            'doctrine.orm.validator.unique' => ['privates', 'doctrine.orm.validator.unique', 'getDoctrine_Orm_Validator_UniqueService', true],
            'security.validator.user_password' => ['privates', 'security.validator.user_password', 'getSecurity_Validator_UserPasswordService', true],
            'validator.expression' => ['privates', 'validator.expression', 'getValidator_ExpressionService', true],
        ], [
            'App\\Validator\\Constraints\\ActivityValidator' => '?',
            'App\\Validator\\Constraints\\ColorChoicesValidator' => '?',
            'App\\Validator\\Constraints\\CustomerValidator' => '?',
            'App\\Validator\\Constraints\\DateTimeFormatValidator' => '?',
            'App\\Validator\\Constraints\\DurationValidator' => '?',
            'App\\Validator\\Constraints\\HexColorValidator' => '?',
            'App\\Validator\\Constraints\\ProjectValidator' => '?',
            'App\\Validator\\Constraints\\QuickEntryModelValidator' => '?',
            'App\\Validator\\Constraints\\QuickEntryTimesheetValidator' => '?',
            'App\\Validator\\Constraints\\RoleNameValidator' => '?',
            'App\\Validator\\Constraints\\RoleValidator' => '?',
            'App\\Validator\\Constraints\\TeamValidator' => '?',
            'App\\Validator\\Constraints\\TimeFormatValidator' => '?',
            'App\\Validator\\Constraints\\TimesheetBasicValidator' => '?',
            'App\\Validator\\Constraints\\TimesheetBudgetUsedValidator' => '?',
            'App\\Validator\\Constraints\\TimesheetDeactivatedValidator' => '?',
            'App\\Validator\\Constraints\\TimesheetExportedValidator' => '?',
            'App\\Validator\\Constraints\\TimesheetFutureTimesValidator' => '?',
            'App\\Validator\\Constraints\\TimesheetLockdownValidator' => '?',
            'App\\Validator\\Constraints\\TimesheetLongRunningValidator' => '?',
            'App\\Validator\\Constraints\\TimesheetMultiUpdateValidator' => '?',
            'App\\Validator\\Constraints\\TimesheetMultiUserValidator' => '?',
            'App\\Validator\\Constraints\\TimesheetOverlappingValidator' => '?',
            'App\\Validator\\Constraints\\TimesheetRestartValidator' => '?',
            'App\\Validator\\Constraints\\TimesheetValidator' => '?',
            'App\\Validator\\Constraints\\TimesheetZeroDurationValidator' => '?',
            'App\\Validator\\Constraints\\UserValidator' => '?',
            'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator' => '?',
            'Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPasswordValidator' => '?',
            'Symfony\\Component\\Validator\\Constraints\\EmailValidator' => '?',
            'Symfony\\Component\\Validator\\Constraints\\ExpressionValidator' => '?',
            'Symfony\\Component\\Validator\\Constraints\\NoSuspiciousCharactersValidator' => '?',
            'Symfony\\Component\\Validator\\Constraints\\NotCompromisedPasswordValidator' => '?',
            'Symfony\\Component\\Validator\\Constraints\\WhenValidator' => '?',
            'doctrine.orm.validator.unique' => '?',
            'security.validator.user_password' => '?',
            'validator.expression' => '?',
        ])));
        $instance->setGroupProviderLocator(($container->privates['.service_locator.Xbsa8iG'] ??= new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [], [])));
        if ($container->has('translator')) {
            $instance->setTranslator(($container->services['translator'] ?? self::getTranslatorService($container)));
        }
        $instance->setTranslationDomain('validators');
        $instance->addXmlMappings([(\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form/Resources/config/validation.xml')]);
        $instance->enableAttributeMapping(true);
        $instance->addMethodMapping('loadValidatorMetadata');
        $instance->addObjectInitializers([new \Symfony\Bridge\Doctrine\Validator\DoctrineInitializer(($container->services['doctrine'] ?? self::getDoctrineService($container)))]);
        $instance->addLoader(new \Symfony\Component\Validator\Mapping\Loader\PropertyInfoLoader($a, $a, $a, NULL));
        $instance->addLoader(new \Symfony\Bridge\Doctrine\Validator\DoctrineLoader(($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container)), NULL));

        return $instance;
    }

    /**
     * Gets the private 'var_dumper.html_dumper' shared service.
     *
     * @return \Symfony\Component\VarDumper\Dumper\HtmlDumper
     */
    protected static function getVarDumper_HtmlDumperService($container)
    {
        $container->privates['var_dumper.html_dumper'] = $instance = new \Symfony\Component\VarDumper\Dumper\HtmlDumper(NULL, 'UTF-8', 0);

        $instance->setDisplayOptions(['fileLinkFormat' => ($container->privates['debug.file_link_formatter'] ?? self::getDebug_FileLinkFormatterService($container))]);

        return $instance;
    }

    /**
     * Gets the private 'web_profiler.csp.handler' shared service.
     *
     * @return \Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler
     */
    protected static function getWebProfiler_Csp_HandlerService($container)
    {
        return $container->privates['web_profiler.csp.handler'] = new \Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler(new \Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator());
    }

    /**
     * Gets the private 'web_profiler.debug_toolbar' shared service.
     *
     * @return \Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener
     */
    protected static function getWebProfiler_DebugToolbarService($container)
    {
        $a = ($container->privates['twig'] ?? self::getTwigService($container));

        if (isset($container->privates['web_profiler.debug_toolbar'])) {
            return $container->privates['web_profiler.debug_toolbar'];
        }

        return $container->privates['web_profiler.debug_toolbar'] = new \Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener($a, false, 2, ($container->services['router'] ?? self::getRouterService($container)), '^/((index|app(_[\\w]+)?)\\.php/)?_wdt', ($container->privates['web_profiler.csp.handler'] ?? self::getWebProfiler_Csp_HandlerService($container)), ($container->services['data_collector.dump'] ?? self::getDataCollector_DumpService($container)));
    }

    /**
     * Gets the private 'webpack_encore.entrypoint_lookup_collection' shared service.
     *
     * @return \Symfony\WebpackEncoreBundle\Asset\EntrypointLookupCollection
     */
    protected static function getWebpackEncore_EntrypointLookupCollectionService($container)
    {
        return $container->privates['webpack_encore.entrypoint_lookup_collection'] = new \Symfony\WebpackEncoreBundle\Asset\EntrypointLookupCollection(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            '_default' => ['privates', 'webpack_encore.entrypoint_lookup[_default]', 'getWebpackEncore_EntrypointLookupDefaultService', true],
        ], [
            '_default' => '?',
        ]), '_default');
    }

    /**
     * Gets the public 'profiler' alias.
     *
     * @return object The ".container.private.profiler" service.
     */
    protected static function getProfilerService($container)
    {
        trigger_deprecation('symfony/framework-bundle', '5.4', 'Accessing the "profiler" service directly from the container is deprecated, use dependency injection instead.');

        return $container->get('.container.private.profiler');
    }

    public function getParameter(string $name): array|bool|string|int|float|\UnitEnum|null
    {
        if (isset($this->buildParameters[$name])) {
            return $this->buildParameters[$name];
        }

        if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \array_key_exists($name, $this->parameters))) {
            throw new ParameterNotFoundException($name);
        }
        if (isset($this->loadedDynamicParameters[$name])) {
            return $this->loadedDynamicParameters[$name] ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
        }

        return $this->parameters[$name];
    }

    public function hasParameter(string $name): bool
    {
        if (isset($this->buildParameters[$name])) {
            return true;
        }

        return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \array_key_exists($name, $this->parameters);
    }

    public function setParameter(string $name, $value): void
    {
        throw new LogicException('Impossible to call set() on a frozen ParameterBag.');
    }

    public function getParameterBag(): ParameterBagInterface
    {
        if (!isset($this->parameterBag)) {
            $parameters = $this->parameters;
            foreach ($this->loadedDynamicParameters as $name => $loaded) {
                $parameters[$name] = $loaded ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
            }
            foreach ($this->buildParameters as $name => $value) {
                $parameters[$name] = $value;
            }
            $this->parameterBag = new FrozenParameterBag($parameters);
        }

        return $this->parameterBag;
    }

    private $loadedDynamicParameters = [
        'kernel.runtime_environment' => false,
        'kernel.runtime_mode' => false,
        'kernel.runtime_mode.web' => false,
        'kernel.runtime_mode.cli' => false,
        'kernel.runtime_mode.worker' => false,
        'kernel.build_dir' => false,
        'kernel.cache_dir' => false,
        'kernel.secret' => false,
        'kernel.trusted_proxies' => false,
        'debug.file_link_format' => false,
        'debug.container.dump' => false,
        'router.cache_dir' => false,
        'serializer.mapping.cache.file' => false,
        'session.save_path' => false,
        'validator.mapping.cache.file' => false,
        'profiler.storage.dsn' => false,
        'doctrine.orm.proxy_dir' => false,
    ];
    private $dynamicParameters = [];

    private function getDynamicParameter(string $name)
    {
        $container = $this;
        $value = match ($name) {
            'kernel.runtime_environment' => $container->getEnv('default:kernel.environment:APP_RUNTIME_ENV'),
            'kernel.runtime_mode' => $container->getEnv('query_string:default:container.runtime_mode:APP_RUNTIME_MODE'),
            'kernel.runtime_mode.web' => $container->getEnv('bool:default::key:web:default:kernel.runtime_mode:'),
            'kernel.runtime_mode.cli' => $container->getEnv('not:default:kernel.runtime_mode.web:'),
            'kernel.runtime_mode.worker' => $container->getEnv('bool:default::key:worker:default:kernel.runtime_mode:'),
            'kernel.build_dir' => $container->targetDir.'',
            'kernel.cache_dir' => $container->targetDir.'',
            'kernel.secret' => $container->getEnv('APP_SECRET'),
            'kernel.trusted_proxies' => $container->getEnv('string:TRUSTED_PROXIES'),
            'debug.file_link_format' => $container->getEnv('default::SYMFONY_IDE'),
            'debug.container.dump' => ($container->targetDir.''.'/App_KernelDevDebugContainer.xml'),
            'router.cache_dir' => $container->targetDir.'',
            'serializer.mapping.cache.file' => ($container->targetDir.''.'/serialization.php'),
            'session.save_path' => ($container->targetDir.''.'/sessions'),
            'validator.mapping.cache.file' => ($container->targetDir.''.'/validation.php'),
            'profiler.storage.dsn' => ('file:'.$container->targetDir.''.'/profiler'),
            'doctrine.orm.proxy_dir' => ($container->targetDir.''.'/doctrine/orm/Proxies'),
            default => throw new ParameterNotFoundException($name),
        };
        $this->loadedDynamicParameters[$name] = true;

        return $this->dynamicParameters[$name] = $value;
    }

    protected function getDefaultParameters(): array
    {
        return [
            'kernel.project_dir' => \dirname(__DIR__, 4),
            'kernel.environment' => 'dev',
            'kernel.debug' => true,
            'kernel.logs_dir' => (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'Kimai_log'.\DIRECTORY_SEPARATOR.'log'),
            'kernel.bundles' => [
                'FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle',
                'DoctrineBundle' => 'Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle',
                'DoctrineFixturesBundle' => 'Doctrine\\Bundle\\FixturesBundle\\DoctrineFixturesBundle',
                'DoctrineMigrationsBundle' => 'Doctrine\\Bundle\\MigrationsBundle\\DoctrineMigrationsBundle',
                'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle',
                'WebProfilerBundle' => 'Symfony\\Bundle\\WebProfilerBundle\\WebProfilerBundle',
                'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle',
                'SecurityBundle' => 'Symfony\\Bundle\\SecurityBundle\\SecurityBundle',
                'DebugBundle' => 'Symfony\\Bundle\\DebugBundle\\DebugBundle',
                'JMSSerializerBundle' => 'JMS\\SerializerBundle\\JMSSerializerBundle',
                'FOSRestBundle' => 'FOS\\RestBundle\\FOSRestBundle',
                'NelmioApiDocBundle' => 'Nelmio\\ApiDocBundle\\NelmioApiDocBundle',
                'NelmioCorsBundle' => 'Nelmio\\CorsBundle\\NelmioCorsBundle',
                'WebpackEncoreBundle' => 'Symfony\\WebpackEncoreBundle\\WebpackEncoreBundle',
                'TwigExtraBundle' => 'Twig\\Extra\\TwigExtraBundle\\TwigExtraBundle',
                'TablerBundle' => 'KevinPapst\\TablerBundle\\TablerBundle',
                'SchebTwoFactorBundle' => 'Scheb\\TwoFactorBundle\\SchebTwoFactorBundle',
            ],
            'kernel.bundles_metadata' => [
                'FrameworkBundle' => [
                    'path' => (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'framework-bundle'),
                    'namespace' => 'Symfony\\Bundle\\FrameworkBundle',
                ],
                'DoctrineBundle' => [
                    'path' => (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-bundle'),
                    'namespace' => 'Doctrine\\Bundle\\DoctrineBundle',
                ],
                'DoctrineFixturesBundle' => [
                    'path' => (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-fixtures-bundle'),
                    'namespace' => 'Doctrine\\Bundle\\FixturesBundle',
                ],
                'DoctrineMigrationsBundle' => [
                    'path' => (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'doctrine'.\DIRECTORY_SEPARATOR.'doctrine-migrations-bundle'),
                    'namespace' => 'Doctrine\\Bundle\\MigrationsBundle',
                ],
                'MonologBundle' => [
                    'path' => (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'monolog-bundle'),
                    'namespace' => 'Symfony\\Bundle\\MonologBundle',
                ],
                'WebProfilerBundle' => [
                    'path' => (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'web-profiler-bundle'),
                    'namespace' => 'Symfony\\Bundle\\WebProfilerBundle',
                ],
                'TwigBundle' => [
                    'path' => (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'twig-bundle'),
                    'namespace' => 'Symfony\\Bundle\\TwigBundle',
                ],
                'SecurityBundle' => [
                    'path' => (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-bundle'),
                    'namespace' => 'Symfony\\Bundle\\SecurityBundle',
                ],
                'DebugBundle' => [
                    'path' => (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'debug-bundle'),
                    'namespace' => 'Symfony\\Bundle\\DebugBundle',
                ],
                'JMSSerializerBundle' => [
                    'path' => (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'serializer-bundle'),
                    'namespace' => 'JMS\\SerializerBundle',
                ],
                'FOSRestBundle' => [
                    'path' => (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'friendsofsymfony'.\DIRECTORY_SEPARATOR.'rest-bundle'),
                    'namespace' => 'FOS\\RestBundle',
                ],
                'NelmioApiDocBundle' => [
                    'path' => (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'api-doc-bundle'),
                    'namespace' => 'Nelmio\\ApiDocBundle',
                ],
                'NelmioCorsBundle' => [
                    'path' => (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'nelmio'.\DIRECTORY_SEPARATOR.'cors-bundle'),
                    'namespace' => 'Nelmio\\CorsBundle',
                ],
                'WebpackEncoreBundle' => [
                    'path' => (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'webpack-encore-bundle'.\DIRECTORY_SEPARATOR.'src'),
                    'namespace' => 'Symfony\\WebpackEncoreBundle',
                ],
                'TwigExtraBundle' => [
                    'path' => (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'twig'.\DIRECTORY_SEPARATOR.'extra-bundle'),
                    'namespace' => 'Twig\\Extra\\TwigExtraBundle',
                ],
                'TablerBundle' => [
                    'path' => (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'kevinpapst'.\DIRECTORY_SEPARATOR.'tabler-bundle'),
                    'namespace' => 'KevinPapst\\TablerBundle',
                ],
                'SchebTwoFactorBundle' => [
                    'path' => (\dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'scheb'.\DIRECTORY_SEPARATOR.'2fa-bundle'),
                    'namespace' => 'Scheb\\TwoFactorBundle',
                ],
            ],
            'kernel.charset' => 'UTF-8',
            'kernel.container_class' => 'App_KernelDevDebugContainer',
            'container.autowiring.strict_mode' => true,
            'env(DATABASE_URL)' => '',
            'env(TRUSTED_PROXIES)' => '',
            'env(CORS_ALLOW_ORIGIN)' => 'localhost',
            'locale' => 'en',
            'kimai_locales' => [
                0 => 'ar',
                1 => 'ca',
                2 => 'cs',
                3 => 'da',
                4 => 'de',
                5 => 'de_CH',
                6 => 'el',
                7 => 'en',
                8 => 'eo',
                9 => 'es',
                10 => 'eu',
                11 => 'fa',
                12 => 'fi',
                13 => 'fo',
                14 => 'fr',
                15 => 'he',
                16 => 'hr',
                17 => 'hu',
                18 => 'id',
                19 => 'it',
                20 => 'ja',
                21 => 'ko',
                22 => 'nb_NO',
                23 => 'nl',
                24 => 'pa',
                25 => 'pl',
                26 => 'pt',
                27 => 'pt_BR',
                28 => 'ro',
                29 => 'ru',
                30 => 'sk',
                31 => 'sl',
                32 => 'sv',
                33 => 'tr',
                34 => 'uk',
                35 => 'vi',
                36 => 'zh_CN',
                37 => 'zh_Hant',
                38 => 'zh_Hant_TW',
                39 => 'ca_AD',
                40 => 'ca_ES',
                41 => 'ca_FR',
                42 => 'ca_IT',
                43 => 'cs_CZ',
                44 => 'da_DK',
                45 => 'da_GL',
                46 => 'de_AT',
                47 => 'de_BE',
                48 => 'de_CH',
                49 => 'de_DE',
                50 => 'de_IT',
                51 => 'de_LI',
                52 => 'de_LU',
                53 => 'el_CY',
                54 => 'el_GR',
                55 => 'en_AE',
                56 => 'en_AG',
                57 => 'en_AI',
                58 => 'en_AS',
                59 => 'en_AT',
                60 => 'en_AU',
                61 => 'en_BB',
                62 => 'en_BE',
                63 => 'en_BI',
                64 => 'en_BM',
                65 => 'en_BS',
                66 => 'en_BW',
                67 => 'en_BZ',
                68 => 'en_CA',
                69 => 'en_CC',
                70 => 'en_CH',
                71 => 'en_CK',
                72 => 'en_CM',
                73 => 'en_CX',
                74 => 'en_CY',
                75 => 'en_DE',
                76 => 'en_DG',
                77 => 'en_DK',
                78 => 'en_DM',
                79 => 'en_ER',
                80 => 'en_FI',
                81 => 'en_FJ',
                82 => 'en_FK',
                83 => 'en_FM',
                84 => 'en_GB',
                85 => 'en_GD',
                86 => 'en_GG',
                87 => 'en_GH',
                88 => 'en_GI',
                89 => 'en_GM',
                90 => 'en_GU',
                91 => 'en_GY',
                92 => 'en_HK',
                93 => 'en_ID',
                94 => 'en_IE',
                95 => 'en_IL',
                96 => 'en_IM',
                97 => 'en_IN',
                98 => 'en_IO',
                99 => 'en_JE',
                100 => 'en_JM',
                101 => 'en_KE',
                102 => 'en_KI',
                103 => 'en_KN',
                104 => 'en_KY',
                105 => 'en_LC',
                106 => 'en_LR',
                107 => 'en_LS',
                108 => 'en_MG',
                109 => 'en_MH',
                110 => 'en_MO',
                111 => 'en_MP',
                112 => 'en_MS',
                113 => 'en_MT',
                114 => 'en_MU',
                115 => 'en_MV',
                116 => 'en_MW',
                117 => 'en_MY',
                118 => 'en_NA',
                119 => 'en_NF',
                120 => 'en_NG',
                121 => 'en_NH',
                122 => 'en_NL',
                123 => 'en_NR',
                124 => 'en_NU',
                125 => 'en_NZ',
                126 => 'en_PG',
                127 => 'en_PH',
                128 => 'en_PK',
                129 => 'en_PN',
                130 => 'en_PR',
                131 => 'en_PW',
                132 => 'en_RH',
                133 => 'en_RW',
                134 => 'en_SB',
                135 => 'en_SC',
                136 => 'en_SD',
                137 => 'en_SE',
                138 => 'en_SG',
                139 => 'en_SH',
                140 => 'en_SI',
                141 => 'en_SL',
                142 => 'en_SS',
                143 => 'en_SX',
                144 => 'en_SZ',
                145 => 'en_TC',
                146 => 'en_TK',
                147 => 'en_TO',
                148 => 'en_TT',
                149 => 'en_TV',
                150 => 'en_TZ',
                151 => 'en_UG',
                152 => 'en_UM',
                153 => 'en_US',
                154 => 'en_VC',
                155 => 'en_VG',
                156 => 'en_VI',
                157 => 'en_VU',
                158 => 'en_WS',
                159 => 'en_ZA',
                160 => 'en_ZM',
                161 => 'en_ZW',
                162 => 'es_AR',
                163 => 'es_BO',
                164 => 'es_BR',
                165 => 'es_BZ',
                166 => 'es_CL',
                167 => 'es_CO',
                168 => 'es_CR',
                169 => 'es_CU',
                170 => 'es_DO',
                171 => 'es_EA',
                172 => 'es_EC',
                173 => 'es_ES',
                174 => 'es_GQ',
                175 => 'es_GT',
                176 => 'es_HN',
                177 => 'es_IC',
                178 => 'es_MX',
                179 => 'es_NI',
                180 => 'es_PA',
                181 => 'es_PE',
                182 => 'es_PH',
                183 => 'es_PR',
                184 => 'es_PY',
                185 => 'es_SV',
                186 => 'es_US',
                187 => 'es_UY',
                188 => 'es_VE',
                189 => 'eu_ES',
                190 => 'fa_AF',
                191 => 'fa_IR',
                192 => 'fi_FI',
                193 => 'fo_DK',
                194 => 'fo_FO',
                195 => 'fr_BE',
                196 => 'fr_BF',
                197 => 'fr_BI',
                198 => 'fr_BJ',
                199 => 'fr_BL',
                200 => 'fr_CA',
                201 => 'fr_CD',
                202 => 'fr_CF',
                203 => 'fr_CG',
                204 => 'fr_CH',
                205 => 'fr_CI',
                206 => 'fr_CM',
                207 => 'fr_DJ',
                208 => 'fr_DZ',
                209 => 'fr_FR',
                210 => 'fr_GA',
                211 => 'fr_GF',
                212 => 'fr_GN',
                213 => 'fr_GP',
                214 => 'fr_GQ',
                215 => 'fr_HT',
                216 => 'fr_KM',
                217 => 'fr_LU',
                218 => 'fr_MA',
                219 => 'fr_MC',
                220 => 'fr_MF',
                221 => 'fr_MG',
                222 => 'fr_ML',
                223 => 'fr_MQ',
                224 => 'fr_MR',
                225 => 'fr_MU',
                226 => 'fr_NC',
                227 => 'fr_NE',
                228 => 'fr_PF',
                229 => 'fr_PM',
                230 => 'fr_RE',
                231 => 'fr_RW',
                232 => 'fr_SC',
                233 => 'fr_SN',
                234 => 'fr_SY',
                235 => 'fr_TD',
                236 => 'fr_TG',
                237 => 'fr_TN',
                238 => 'fr_VU',
                239 => 'fr_WF',
                240 => 'fr_YT',
                241 => 'he_IL',
                242 => 'hr_BA',
                243 => 'hr_HR',
                244 => 'hu_HU',
                245 => 'it_CH',
                246 => 'it_IT',
                247 => 'it_SM',
                248 => 'it_VA',
                249 => 'ja_JP',
                250 => 'ko_CN',
                251 => 'ko_KP',
                252 => 'ko_KR',
                253 => 'nl_AW',
                254 => 'nl_BE',
                255 => 'nl_BQ',
                256 => 'nl_CW',
                257 => 'nl_NL',
                258 => 'nl_SR',
                259 => 'nl_SX',
                260 => 'pl_PL',
                261 => 'pt_AO',
                262 => 'pt_BR',
                263 => 'pt_CH',
                264 => 'pt_CV',
                265 => 'pt_GQ',
                266 => 'pt_GW',
                267 => 'pt_LU',
                268 => 'pt_MO',
                269 => 'pt_MZ',
                270 => 'pt_PT',
                271 => 'pt_ST',
                272 => 'pt_TL',
                273 => 'ro_MD',
                274 => 'ro_RO',
                275 => 'ru_BY',
                276 => 'ru_KG',
                277 => 'ru_KZ',
                278 => 'ru_MD',
                279 => 'ru_RU',
                280 => 'ru_UA',
                281 => 'sk_SK',
                282 => 'sv_AX',
                283 => 'sv_FI',
                284 => 'sv_SE',
                285 => 'tr_CY',
                286 => 'tr_TR',
                287 => 'uk_UA',
                288 => 'vi_VN',
            ],
            'tabler_bundle.options' => [
                'dark_mode' => false,
                'navbar_condensed' => true,
                'navbar_overlap' => true,
                'boxed_layout' => false,
                'rtl_mode' => false,
                'user_menu_condensed' => true,
                'logo_url' => 'touch-icon-192x192.png',
                'asset_version' => 1738580635,
                'header_dark' => false,
                'navbar_dark' => false,
                'security_cover_url' => 'https://placehold.co/1000',
                'knp_menu' => [
                    'enable' => false,
                    'main_menu' => 'tabler_main',
                    'breadcrumb_menu' => false,
                ],
            ],
            'tabler_bundle.routes' => [
                'tabler_welcome' => 'dashboard',
                'tabler_login' => 'login',
                'tabler_login_check' => 'security_check',
                'tabler_registration' => 'registration_register',
                'tabler_registration_register' => 'registration_register',
                'tabler_password_reset' => 'resetting_request',
                'tabler_password_reset_sent' => 'resetting_send_email',
                'tabler_logout' => 'logout',
            ],
            'tabler_bundle.icons' => [
                'about' => 'fas fa-info-circle',
                'activity' => 'fas fa-tasks',
                'admin' => 'fas fa-wrench',
                'administration' => 'fas fa-toolbox',
                'applications' => 'fas fa-rocket',
                'audit' => 'fas fa-history',
                'avatar' => 'fas fa-user',
                'back' => 'fas fa-long-arrow-alt-left',
                'barcode' => 'fas fa-barcode',
                'bookmark' => 'far fa-star',
                'bookmarked' => 'fas fa-star',
                'calendar' => 'far fa-calendar-alt',
                'cancel' => 'fas fa-times',
                'clock' => 'far fa-clock',
                'collapse' => 'fas fa-chevron-down',
                'columns' => 'fas fa-table',
                'comment' => 'far fa-comment',
                'configuration' => 'fas fa-cog',
                'contract' => 'fas fa-balance-scale',
                'copy' => 'far fa-copy',
                'create' => 'fas fa-plus',
                'csv' => 'fas fa-table',
                'customer' => 'fas fa-user-tie',
                'dashboard' => 'fas fa-tachometer-alt',
                'debug' => 'far fa-file-alt',
                'delete' => 'far fa-trash-alt',
                'details' => 'fas fa-info-circle',
                'display' => 'fas fa-layer-group',
                'doctor' => 'fas fa-medkit',
                'documentation' => 'fas fa-book',
                'dot' => 'fas fa-circle',
                'download' => 'fas fa-download',
                'duration' => 'far fa-hourglass',
                'edit' => 'far fa-edit',
                'end' => 'fas fa-stopwatch',
                'export' => 'fas fa-file-export',
                'failure' => 'fas fa-times',
                'fax' => 'fas fa-fax',
                'filter' => 'fas fa-filter',
                'help' => 'far fa-question-circle',
                'home' => 'fas fa-home',
                'info' => 'fas fa-info-circle',
                'import' => 'fas fa-file-import',
                'invoice' => 'fas fa-file-contract',
                'invoice_template' => 'fas fa-file-signature',
                'left' => 'fas fa-chevron-left',
                'left2' => 'fas fa-angle-double-left',
                'link' => 'fas fa-link',
                'list' => 'fas fa-list',
                'locked' => 'fas fa-lock',
                'login' => 'fas fa-sign-in-alt',
                'logout' => 'fas fa-sign-out-alt',
                'mail' => 'far fa-envelope',
                'mail_sent' => 'fas fa-paper-plane',
                'manual' => 'fas fa-book',
                'mobile' => 'fas fa-mobile',
                'money' => 'fas fa-coins',
                'ods' => 'fas fa-table',
                'off' => 'fas fa-toggle-off',
                'on' => 'fas fa-toggle-on',
                'password' => 'fas fa-key',
                'pause' => 'fas fa-pause',
                'pause_small' => 'far fa-pause-circle',
                'pending' => 'fas fa-hourglass-half',
                'pin' => 'fas fa-thumbtack',
                'pdf' => 'fas fa-file-pdf',
                'permissions' => 'fas fa-user-lock',
                'phone' => 'fas fa-phone',
                'plugin' => 'fas fa-plug',
                'print' => 'fas fa-print',
                'profile' => 'fas fa-user-edit',
                'profile_stats' => 'far fa-chart-bar',
                'project' => 'fas fa-briefcase',
                'repeat' => 'fas fa-repeat',
                'reporting' => 'far fa-chart-bar',
                'report' => 'far fa-chart-bar',
                'review' => 'fas fa-user-check',
                'rejected' => 'fas fa-ban',
                'right' => 'fas fa-chevron-right',
                'right2' => 'fas fa-angle-double-right',
                'roles' => 'fas fa-user-shield',
                'save' => 'far fa-save',
                'search' => 'fas fa-search',
                'settings' => 'fas fa-cog',
                'shop' => 'fas fa-shopping-cart',
                'spinner' => 'fas fa-spinner',
                'start' => 'fas fa-play',
                'start_small' => 'far fa-play-circle',
                'stop' => 'fas fa-stop',
                'stop_small' => 'far fa-stop-circle',
                'success' => 'fas fa-check',
                'tag' => 'fas fa-tags',
                'team' => 'fas fa-users',
                'timesheet' => 'fas fa-clock',
                'timesheet_team' => 'fas fa-user-clock',
                'trash' => 'far fa-trash-alt',
                'unlocked' => 'fas fa-unlock-alt',
                'upload' => 'fas fa-upload',
                'user' => 'fas fa-user',
                'users' => 'fas fa-user-friends',
                'visibility' => 'far fa-eye',
                'warning' => 'fas fa-exclamation',
                'weekly_times' => 'fas fa-th',
                'widget_add' => 'fas fa-folder-plus',
                'widget_remove' => 'fas fa-folder-minus',
                'work_times' => 'fas fa-calculator',
                'xlsx' => 'fas fa-file-excel',
            ],
            'event_dispatcher.event_aliases' => [
                'Symfony\\Component\\Console\\Event\\ConsoleCommandEvent' => 'console.command',
                'Symfony\\Component\\Console\\Event\\ConsoleErrorEvent' => 'console.error',
                'Symfony\\Component\\Console\\Event\\ConsoleSignalEvent' => 'console.signal',
                'Symfony\\Component\\Console\\Event\\ConsoleTerminateEvent' => 'console.terminate',
                'Symfony\\Component\\Form\\Event\\PreSubmitEvent' => 'form.pre_submit',
                'Symfony\\Component\\Form\\Event\\SubmitEvent' => 'form.submit',
                'Symfony\\Component\\Form\\Event\\PostSubmitEvent' => 'form.post_submit',
                'Symfony\\Component\\Form\\Event\\PreSetDataEvent' => 'form.pre_set_data',
                'Symfony\\Component\\Form\\Event\\PostSetDataEvent' => 'form.post_set_data',
                'Symfony\\Component\\HttpKernel\\Event\\ControllerArgumentsEvent' => 'kernel.controller_arguments',
                'Symfony\\Component\\HttpKernel\\Event\\ControllerEvent' => 'kernel.controller',
                'Symfony\\Component\\HttpKernel\\Event\\ResponseEvent' => 'kernel.response',
                'Symfony\\Component\\HttpKernel\\Event\\FinishRequestEvent' => 'kernel.finish_request',
                'Symfony\\Component\\HttpKernel\\Event\\RequestEvent' => 'kernel.request',
                'Symfony\\Component\\HttpKernel\\Event\\ViewEvent' => 'kernel.view',
                'Symfony\\Component\\HttpKernel\\Event\\ExceptionEvent' => 'kernel.exception',
                'Symfony\\Component\\HttpKernel\\Event\\TerminateEvent' => 'kernel.terminate',
                'Symfony\\Component\\Security\\Core\\Event\\AuthenticationSuccessEvent' => 'security.authentication.success',
                'Symfony\\Component\\Security\\Http\\Event\\InteractiveLoginEvent' => 'security.interactive_login',
                'Symfony\\Component\\Security\\Http\\Event\\SwitchUserEvent' => 'security.switch_user',
            ],
            'fragment.renderer.hinclude.global_template' => NULL,
            'fragment.path' => '/_fragment',
            'kernel.http_method_override' => false,
            'kernel.trust_x_sendfile_type_header' => false,
            'kernel.trusted_hosts' => [

            ],
            'kernel.default_locale' => 'en',
            'kernel.enabled_locales' => [
                0 => 'ar',
                1 => 'ca',
                2 => 'cs',
                3 => 'da',
                4 => 'de',
                5 => 'de_CH',
                6 => 'el',
                7 => 'en',
                8 => 'eo',
                9 => 'es',
                10 => 'eu',
                11 => 'fa',
                12 => 'fi',
                13 => 'fo',
                14 => 'fr',
                15 => 'he',
                16 => 'hr',
                17 => 'hu',
                18 => 'id',
                19 => 'it',
                20 => 'ja',
                21 => 'ko',
                22 => 'nb_NO',
                23 => 'nl',
                24 => 'pa',
                25 => 'pl',
                26 => 'pt',
                27 => 'pt_BR',
                28 => 'ro',
                29 => 'ru',
                30 => 'sk',
                31 => 'sl',
                32 => 'sv',
                33 => 'tr',
                34 => 'uk',
                35 => 'vi',
                36 => 'zh_CN',
                37 => 'zh_Hant',
                38 => 'zh_Hant_TW',
                39 => 'ca_AD',
                40 => 'ca_ES',
                41 => 'ca_FR',
                42 => 'ca_IT',
                43 => 'cs_CZ',
                44 => 'da_DK',
                45 => 'da_GL',
                46 => 'de_AT',
                47 => 'de_BE',
                48 => 'de_CH',
                49 => 'de_DE',
                50 => 'de_IT',
                51 => 'de_LI',
                52 => 'de_LU',
                53 => 'el_CY',
                54 => 'el_GR',
                55 => 'en_AE',
                56 => 'en_AG',
                57 => 'en_AI',
                58 => 'en_AS',
                59 => 'en_AT',
                60 => 'en_AU',
                61 => 'en_BB',
                62 => 'en_BE',
                63 => 'en_BI',
                64 => 'en_BM',
                65 => 'en_BS',
                66 => 'en_BW',
                67 => 'en_BZ',
                68 => 'en_CA',
                69 => 'en_CC',
                70 => 'en_CH',
                71 => 'en_CK',
                72 => 'en_CM',
                73 => 'en_CX',
                74 => 'en_CY',
                75 => 'en_DE',
                76 => 'en_DG',
                77 => 'en_DK',
                78 => 'en_DM',
                79 => 'en_ER',
                80 => 'en_FI',
                81 => 'en_FJ',
                82 => 'en_FK',
                83 => 'en_FM',
                84 => 'en_GB',
                85 => 'en_GD',
                86 => 'en_GG',
                87 => 'en_GH',
                88 => 'en_GI',
                89 => 'en_GM',
                90 => 'en_GU',
                91 => 'en_GY',
                92 => 'en_HK',
                93 => 'en_ID',
                94 => 'en_IE',
                95 => 'en_IL',
                96 => 'en_IM',
                97 => 'en_IN',
                98 => 'en_IO',
                99 => 'en_JE',
                100 => 'en_JM',
                101 => 'en_KE',
                102 => 'en_KI',
                103 => 'en_KN',
                104 => 'en_KY',
                105 => 'en_LC',
                106 => 'en_LR',
                107 => 'en_LS',
                108 => 'en_MG',
                109 => 'en_MH',
                110 => 'en_MO',
                111 => 'en_MP',
                112 => 'en_MS',
                113 => 'en_MT',
                114 => 'en_MU',
                115 => 'en_MV',
                116 => 'en_MW',
                117 => 'en_MY',
                118 => 'en_NA',
                119 => 'en_NF',
                120 => 'en_NG',
                121 => 'en_NH',
                122 => 'en_NL',
                123 => 'en_NR',
                124 => 'en_NU',
                125 => 'en_NZ',
                126 => 'en_PG',
                127 => 'en_PH',
                128 => 'en_PK',
                129 => 'en_PN',
                130 => 'en_PR',
                131 => 'en_PW',
                132 => 'en_RH',
                133 => 'en_RW',
                134 => 'en_SB',
                135 => 'en_SC',
                136 => 'en_SD',
                137 => 'en_SE',
                138 => 'en_SG',
                139 => 'en_SH',
                140 => 'en_SI',
                141 => 'en_SL',
                142 => 'en_SS',
                143 => 'en_SX',
                144 => 'en_SZ',
                145 => 'en_TC',
                146 => 'en_TK',
                147 => 'en_TO',
                148 => 'en_TT',
                149 => 'en_TV',
                150 => 'en_TZ',
                151 => 'en_UG',
                152 => 'en_UM',
                153 => 'en_US',
                154 => 'en_VC',
                155 => 'en_VG',
                156 => 'en_VI',
                157 => 'en_VU',
                158 => 'en_WS',
                159 => 'en_ZA',
                160 => 'en_ZM',
                161 => 'en_ZW',
                162 => 'es_AR',
                163 => 'es_BO',
                164 => 'es_BR',
                165 => 'es_BZ',
                166 => 'es_CL',
                167 => 'es_CO',
                168 => 'es_CR',
                169 => 'es_CU',
                170 => 'es_DO',
                171 => 'es_EA',
                172 => 'es_EC',
                173 => 'es_ES',
                174 => 'es_GQ',
                175 => 'es_GT',
                176 => 'es_HN',
                177 => 'es_IC',
                178 => 'es_MX',
                179 => 'es_NI',
                180 => 'es_PA',
                181 => 'es_PE',
                182 => 'es_PH',
                183 => 'es_PR',
                184 => 'es_PY',
                185 => 'es_SV',
                186 => 'es_US',
                187 => 'es_UY',
                188 => 'es_VE',
                189 => 'eu_ES',
                190 => 'fa_AF',
                191 => 'fa_IR',
                192 => 'fi_FI',
                193 => 'fo_DK',
                194 => 'fo_FO',
                195 => 'fr_BE',
                196 => 'fr_BF',
                197 => 'fr_BI',
                198 => 'fr_BJ',
                199 => 'fr_BL',
                200 => 'fr_CA',
                201 => 'fr_CD',
                202 => 'fr_CF',
                203 => 'fr_CG',
                204 => 'fr_CH',
                205 => 'fr_CI',
                206 => 'fr_CM',
                207 => 'fr_DJ',
                208 => 'fr_DZ',
                209 => 'fr_FR',
                210 => 'fr_GA',
                211 => 'fr_GF',
                212 => 'fr_GN',
                213 => 'fr_GP',
                214 => 'fr_GQ',
                215 => 'fr_HT',
                216 => 'fr_KM',
                217 => 'fr_LU',
                218 => 'fr_MA',
                219 => 'fr_MC',
                220 => 'fr_MF',
                221 => 'fr_MG',
                222 => 'fr_ML',
                223 => 'fr_MQ',
                224 => 'fr_MR',
                225 => 'fr_MU',
                226 => 'fr_NC',
                227 => 'fr_NE',
                228 => 'fr_PF',
                229 => 'fr_PM',
                230 => 'fr_RE',
                231 => 'fr_RW',
                232 => 'fr_SC',
                233 => 'fr_SN',
                234 => 'fr_SY',
                235 => 'fr_TD',
                236 => 'fr_TG',
                237 => 'fr_TN',
                238 => 'fr_VU',
                239 => 'fr_WF',
                240 => 'fr_YT',
                241 => 'he_IL',
                242 => 'hr_BA',
                243 => 'hr_HR',
                244 => 'hu_HU',
                245 => 'it_CH',
                246 => 'it_IT',
                247 => 'it_SM',
                248 => 'it_VA',
                249 => 'ja_JP',
                250 => 'ko_CN',
                251 => 'ko_KP',
                252 => 'ko_KR',
                253 => 'nl_AW',
                254 => 'nl_BE',
                255 => 'nl_BQ',
                256 => 'nl_CW',
                257 => 'nl_NL',
                258 => 'nl_SR',
                259 => 'nl_SX',
                260 => 'pl_PL',
                261 => 'pt_AO',
                262 => 'pt_BR',
                263 => 'pt_CH',
                264 => 'pt_CV',
                265 => 'pt_GQ',
                266 => 'pt_GW',
                267 => 'pt_LU',
                268 => 'pt_MO',
                269 => 'pt_MZ',
                270 => 'pt_PT',
                271 => 'pt_ST',
                272 => 'pt_TL',
                273 => 'ro_MD',
                274 => 'ro_RO',
                275 => 'ru_BY',
                276 => 'ru_KG',
                277 => 'ru_KZ',
                278 => 'ru_MD',
                279 => 'ru_RU',
                280 => 'ru_UA',
                281 => 'sk_SK',
                282 => 'sv_AX',
                283 => 'sv_FI',
                284 => 'sv_SE',
                285 => 'tr_CY',
                286 => 'tr_TR',
                287 => 'uk_UA',
                288 => 'vi_VN',
            ],
            'kernel.error_controller' => 'error_controller',
            'kernel.trusted_headers' => 26,
            'asset.request_context.base_path' => NULL,
            'asset.request_context.secure' => NULL,
            'translator.logging' => false,
            'translator.default_path' => (\dirname(__DIR__, 4).'/translations'),
            'debug.error_handler.throw_at' => -1,
            'router.request_context.host' => 'localhost',
            'router.request_context.scheme' => 'http',
            'router.request_context.base_url' => '',
            'router.resource' => 'kernel::loadRoutes',
            'request_listener.http_port' => 80,
            'request_listener.https_port' => 443,
            'session.metadata.storage_key' => '_sf2_meta',
            'session.storage.options' => [
                'cache_limiter' => '0',
                'cookie_secure' => 'auto',
                'cookie_httponly' => true,
                'cookie_samesite' => 'lax',
                'gc_probability' => 1,
            ],
            'session.metadata.update_threshold' => 0,
            'form.type_extension.csrf.enabled' => true,
            'form.type_extension.csrf.field_name' => '_token',
            'validator.translation_domain' => 'validators',
            'profiler_listener.only_exceptions' => false,
            'profiler_listener.only_main_requests' => false,
            'doctrine.dbal.configuration.class' => 'Doctrine\\DBAL\\Configuration',
            'doctrine.data_collector.class' => 'Doctrine\\Bundle\\DoctrineBundle\\DataCollector\\DoctrineDataCollector',
            'doctrine.dbal.connection.event_manager.class' => 'Symfony\\Bridge\\Doctrine\\ContainerAwareEventManager',
            'doctrine.dbal.connection_factory.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ConnectionFactory',
            'doctrine.dbal.events.mysql_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\MysqlSessionInit',
            'doctrine.dbal.events.oracle_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\OracleSessionInit',
            'doctrine.class' => 'Doctrine\\Bundle\\DoctrineBundle\\Registry',
            'doctrine.entity_managers' => [
                'default' => 'doctrine.orm.default_entity_manager',
            ],
            'doctrine.default_entity_manager' => 'default',
            'doctrine.dbal.connection_factory.types' => [
                'datetime' => [
                    'class' => 'App\\Doctrine\\UTCDateTimeType',
                ],
                'datetime_immutable' => [
                    'class' => 'App\\Doctrine\\UTCDateTimeImmutableType',
                ],
            ],
            'doctrine.connections' => [
                'default' => 'doctrine.dbal.default_connection',
            ],
            'doctrine.default_connection' => 'default',
            'doctrine.orm.configuration.class' => 'Doctrine\\ORM\\Configuration',
            'doctrine.orm.entity_manager.class' => 'Doctrine\\ORM\\EntityManager',
            'doctrine.orm.manager_configurator.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ManagerConfigurator',
            'doctrine.orm.cache.array.class' => 'Doctrine\\Common\\Cache\\ArrayCache',
            'doctrine.orm.cache.apc.class' => 'Doctrine\\Common\\Cache\\ApcCache',
            'doctrine.orm.cache.memcache.class' => 'Doctrine\\Common\\Cache\\MemcacheCache',
            'doctrine.orm.cache.memcache_host' => 'localhost',
            'doctrine.orm.cache.memcache_port' => 11211,
            'doctrine.orm.cache.memcache_instance.class' => 'Memcache',
            'doctrine.orm.cache.memcached.class' => 'Doctrine\\Common\\Cache\\MemcachedCache',
            'doctrine.orm.cache.memcached_host' => 'localhost',
            'doctrine.orm.cache.memcached_port' => 11211,
            'doctrine.orm.cache.memcached_instance.class' => 'Memcached',
            'doctrine.orm.cache.redis.class' => 'Doctrine\\Common\\Cache\\RedisCache',
            'doctrine.orm.cache.redis_host' => 'localhost',
            'doctrine.orm.cache.redis_port' => 6379,
            'doctrine.orm.cache.redis_instance.class' => 'Redis',
            'doctrine.orm.cache.xcache.class' => 'Doctrine\\Common\\Cache\\XcacheCache',
            'doctrine.orm.cache.wincache.class' => 'Doctrine\\Common\\Cache\\WinCacheCache',
            'doctrine.orm.cache.zenddata.class' => 'Doctrine\\Common\\Cache\\ZendDataCache',
            'doctrine.orm.metadata.driver_chain.class' => 'Doctrine\\Persistence\\Mapping\\Driver\\MappingDriverChain',
            'doctrine.orm.metadata.annotation.class' => 'Doctrine\\ORM\\Mapping\\Driver\\AnnotationDriver',
            'doctrine.orm.metadata.xml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedXmlDriver',
            'doctrine.orm.metadata.yml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedYamlDriver',
            'doctrine.orm.metadata.php.class' => 'Doctrine\\ORM\\Mapping\\Driver\\PHPDriver',
            'doctrine.orm.metadata.staticphp.class' => 'Doctrine\\ORM\\Mapping\\Driver\\StaticPHPDriver',
            'doctrine.orm.metadata.attribute.class' => 'Doctrine\\ORM\\Mapping\\Driver\\AttributeDriver',
            'doctrine.orm.proxy_cache_warmer.class' => 'Symfony\\Bridge\\Doctrine\\CacheWarmer\\ProxyCacheWarmer',
            'form.type_guesser.doctrine.class' => 'Symfony\\Bridge\\Doctrine\\Form\\DoctrineOrmTypeGuesser',
            'doctrine.orm.validator.unique.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator',
            'doctrine.orm.validator_initializer.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\DoctrineInitializer',
            'doctrine.orm.security.user.provider.class' => 'Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider',
            'doctrine.orm.listeners.resolve_target_entity.class' => 'Doctrine\\ORM\\Tools\\ResolveTargetEntityListener',
            'doctrine.orm.listeners.attach_entity_listeners.class' => 'Doctrine\\ORM\\Tools\\AttachEntityListenersListener',
            'doctrine.orm.naming_strategy.default.class' => 'Doctrine\\ORM\\Mapping\\DefaultNamingStrategy',
            'doctrine.orm.naming_strategy.underscore.class' => 'Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy',
            'doctrine.orm.quote_strategy.default.class' => 'Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy',
            'doctrine.orm.quote_strategy.ansi.class' => 'Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy',
            'doctrine.orm.typed_field_mapper.default.class' => 'Doctrine\\ORM\\Mapping\\DefaultTypedFieldMapper',
            'doctrine.orm.entity_listener_resolver.class' => 'Doctrine\\Bundle\\DoctrineBundle\\Mapping\\ContainerEntityListenerResolver',
            'doctrine.orm.second_level_cache.default_cache_factory.class' => 'Doctrine\\ORM\\Cache\\DefaultCacheFactory',
            'doctrine.orm.second_level_cache.default_region.class' => 'Doctrine\\ORM\\Cache\\Region\\DefaultRegion',
            'doctrine.orm.second_level_cache.filelock_region.class' => 'Doctrine\\ORM\\Cache\\Region\\FileLockRegion',
            'doctrine.orm.second_level_cache.logger_chain.class' => 'Doctrine\\ORM\\Cache\\Logging\\CacheLoggerChain',
            'doctrine.orm.second_level_cache.logger_statistics.class' => 'Doctrine\\ORM\\Cache\\Logging\\StatisticsCacheLogger',
            'doctrine.orm.second_level_cache.cache_configuration.class' => 'Doctrine\\ORM\\Cache\\CacheConfiguration',
            'doctrine.orm.second_level_cache.regions_configuration.class' => 'Doctrine\\ORM\\Cache\\RegionsConfiguration',
            'doctrine.orm.auto_generate_proxy_classes' => true,
            'doctrine.orm.enable_lazy_ghost_objects' => true,
            'doctrine.orm.proxy_namespace' => 'Proxies',
            'doctrine.migrations.preferred_em' => NULL,
            'doctrine.migrations.preferred_connection' => NULL,
            'monolog.use_microseconds' => true,
            'monolog.swift_mailer.handlers' => [

            ],
            'monolog.handlers_to_channels' => [
                'monolog.handler.deprecation' => [
                    'type' => 'inclusive',
                    'elements' => [
                        0 => 'deprecation',
                    ],
                ],
                'monolog.handler.console' => [
                    'type' => 'exclusive',
                    'elements' => [
                        0 => 'event',
                        1 => 'doctrine',
                        2 => 'deprecation',
                    ],
                ],
                'monolog.handler.main' => [
                    'type' => 'exclusive',
                    'elements' => [
                        0 => 'event',
                        1 => 'deprecation',
                    ],
                ],
            ],
            'web_profiler.debug_toolbar.intercept_redirects' => false,
            'web_profiler.debug_toolbar.mode' => 2,
            'twig.form.resources' => [
                0 => 'form_div_layout.html.twig',
                1 => 'form/vertical.html.twig',
            ],
            'twig.default_path' => (\dirname(__DIR__, 4).'/templates'),
            'security.role_hierarchy.roles' => [
                'ROLE_USER' => [

                ],
                'ROLE_TEAMLEAD' => [
                    0 => 'ROLE_USER',
                ],
                'ROLE_ADMIN' => [
                    0 => 'ROLE_TEAMLEAD',
                ],
                'ROLE_SUPER_ADMIN' => [
                    0 => 'ROLE_ADMIN',
                ],
            ],
            'security.access.denied_url' => NULL,
            'security.authentication.manager.erase_credentials' => true,
            'security.authentication.session_strategy.strategy' => 'migrate',
            'security.authentication.hide_user_not_found' => true,
            'security.firewalls' => [
                0 => 'dev',
                1 => 'api',
                2 => 'secured_area',
            ],
            'security.logout_uris' => [

            ],
            'env(VAR_DUMPER_SERVER)' => '127.0.0.1:9912',
            'jms_serializer.twig_enabled' => 'default',
            'fos_rest.format_listener.rules' => NULL,
            'nelmio_api_doc.areas' => [
                0 => 'default',
            ],
            'nelmio_api_doc.use_validation_groups' => false,
            'nelmio_cors.map' => [
                '^/api/' => [
                    'allow_origin' => true,
                    'allow_headers' => [
                        0 => 'content-type',
                        1 => 'authorization',
                        2 => 'x-auth-user',
                        3 => 'x-auth-token',
                    ],
                    'allow_methods' => [
                        0 => 'GET',
                        1 => 'OPTIONS',
                        2 => 'POST',
                        3 => 'PUT',
                        4 => 'PATCH',
                        5 => 'DELETE',
                    ],
                    'max_age' => 3600,
                    'allow_private_network' => true,
                ],
            ],
            'nelmio_cors.defaults' => [
                'allow_origin' => [

                ],
                'allow_credentials' => false,
                'allow_headers' => [

                ],
                'allow_private_network' => false,
                'expose_headers' => [

                ],
                'allow_methods' => [

                ],
                'max_age' => 0,
                'hosts' => [

                ],
                'origin_regex' => true,
                'forced_allow_origin_value' => NULL,
                'skip_same_as_origin' => true,
            ],
            'nelmio_cors.cors_listener.class' => 'Nelmio\\CorsBundle\\EventListener\\CorsListener',
            'nelmio_cors.options_resolver.class' => 'Nelmio\\CorsBundle\\Options\\Resolver',
            'nelmio_cors.options_provider.config.class' => 'Nelmio\\CorsBundle\\Options\\ConfigProvider',
            'scheb_two_factor.model_manager_name' => NULL,
            'scheb_two_factor.security_tokens' => [
                0 => 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken',
                1 => 'Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken',
                2 => 'App\\Saml\\SamlToken',
            ],
            'scheb_two_factor.ip_whitelist' => [

            ],
            'scheb_two_factor.totp.issuer' => 'Kimai',
            'scheb_two_factor.totp.server_name' => NULL,
            'scheb_two_factor.totp.window' => 1,
            'scheb_two_factor.totp.parameters' => [

            ],
            'scheb_two_factor.totp.template' => 'security/2fa.html.twig',
            'scheb_two_factor.totp.leeway' => 29,
            'scheb_two_factor.trusted_device.enabled' => false,
            'kimai.data_dir' => (\dirname(__DIR__, 4).'/var/data'),
            'kimai.plugin_dir' => (\dirname(__DIR__, 4).'/var/plugins'),
            'app_locales' => 'ar|ca|cs|da|de|de_CH|el|en|eo|es|eu|fa|fi|fo|fr|he|hr|hu|id|it|ja|ko|nb_NO|nl|pa|pl|pt|pt_BR|ro|ru|sk|sl|sv|tr|uk|vi|zh_CN|zh_Hant|zh_Hant_TW|ca_AD|ca_ES|ca_FR|ca_IT|cs_CZ|da_DK|da_GL|de_AT|de_BE|de_CH|de_DE|de_IT|de_LI|de_LU|el_CY|el_GR|en_AE|en_AG|en_AI|en_AS|en_AT|en_AU|en_BB|en_BE|en_BI|en_BM|en_BS|en_BW|en_BZ|en_CA|en_CC|en_CH|en_CK|en_CM|en_CX|en_CY|en_DE|en_DG|en_DK|en_DM|en_ER|en_FI|en_FJ|en_FK|en_FM|en_GB|en_GD|en_GG|en_GH|en_GI|en_GM|en_GU|en_GY|en_HK|en_ID|en_IE|en_IL|en_IM|en_IN|en_IO|en_JE|en_JM|en_KE|en_KI|en_KN|en_KY|en_LC|en_LR|en_LS|en_MG|en_MH|en_MO|en_MP|en_MS|en_MT|en_MU|en_MV|en_MW|en_MY|en_NA|en_NF|en_NG|en_NH|en_NL|en_NR|en_NU|en_NZ|en_PG|en_PH|en_PK|en_PN|en_PR|en_PW|en_RH|en_RW|en_SB|en_SC|en_SD|en_SE|en_SG|en_SH|en_SI|en_SL|en_SS|en_SX|en_SZ|en_TC|en_TK|en_TO|en_TT|en_TV|en_TZ|en_UG|en_UM|en_US|en_VC|en_VG|en_VI|en_VU|en_WS|en_ZA|en_ZM|en_ZW|es_AR|es_BO|es_BR|es_BZ|es_CL|es_CO|es_CR|es_CU|es_DO|es_EA|es_EC|es_ES|es_GQ|es_GT|es_HN|es_IC|es_MX|es_NI|es_PA|es_PE|es_PH|es_PR|es_PY|es_SV|es_US|es_UY|es_VE|eu_ES|fa_AF|fa_IR|fi_FI|fo_DK|fo_FO|fr_BE|fr_BF|fr_BI|fr_BJ|fr_BL|fr_CA|fr_CD|fr_CF|fr_CG|fr_CH|fr_CI|fr_CM|fr_DJ|fr_DZ|fr_FR|fr_GA|fr_GF|fr_GN|fr_GP|fr_GQ|fr_HT|fr_KM|fr_LU|fr_MA|fr_MC|fr_MF|fr_MG|fr_ML|fr_MQ|fr_MR|fr_MU|fr_NC|fr_NE|fr_PF|fr_PM|fr_RE|fr_RW|fr_SC|fr_SN|fr_SY|fr_TD|fr_TG|fr_TN|fr_VU|fr_WF|fr_YT|he_IL|hr_BA|hr_HR|hu_HU|it_CH|it_IT|it_SM|it_VA|ja_JP|ko_CN|ko_KP|ko_KR|nl_AW|nl_BE|nl_BQ|nl_CW|nl_NL|nl_SR|nl_SX|pl_PL|pt_AO|pt_BR|pt_CH|pt_CV|pt_GQ|pt_GW|pt_LU|pt_MO|pt_MZ|pt_PT|pt_ST|pt_TL|ro_MD|ro_RO|ru_BY|ru_KG|ru_KZ|ru_MD|ru_RU|ru_UA|sk_SK|sv_AX|sv_FI|sv_SE|tr_CY|tr_TR|uk_UA|vi_VN',
            'kimai.languages' => [
                'ar' => [
                    'date' => 'd‏/M‏/y',
                    'time' => 'h:mm a',
                    'rtl' => true,
                    'translation' => true,
                ],
                'ca' => [
                    'date' => 'dd.MM.y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'ca_AD' => [
                    'date' => 'dd.MM.y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'ca_ES' => [
                    'date' => 'dd.MM.y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'ca_FR' => [
                    'date' => 'dd.MM.y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'ca_IT' => [
                    'date' => 'dd.MM.y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'cs' => [
                    'date' => 'dd.MM.yy',
                    'time' => 'H:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'cs_CZ' => [
                    'date' => 'dd.MM.yy',
                    'time' => 'H:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'da' => [
                    'date' => 'dd.MM.y',
                    'time' => 'HH.mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'da_DK' => [
                    'date' => 'dd.MM.y',
                    'time' => 'HH.mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'da_GL' => [
                    'date' => 'dd.MM.y',
                    'time' => 'HH.mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'de' => [
                    'date' => 'dd.MM.yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'de_AT' => [
                    'date' => 'dd.MM.yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'de_BE' => [
                    'date' => 'dd.MM.yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'de_CH' => [
                    'date' => 'dd.MM.yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'de_DE' => [
                    'date' => 'dd.MM.yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'de_IT' => [
                    'date' => 'dd.MM.yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'de_LI' => [
                    'date' => 'dd.MM.yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'de_LU' => [
                    'date' => 'dd.MM.yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'el' => [
                    'date' => 'd/M/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => true,
                ],
                'el_CY' => [
                    'date' => 'd/M/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'el_GR' => [
                    'date' => 'd/M/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en' => [
                    'date' => 'M/d/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => true,
                ],
                'en_AE' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_AG' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_AI' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_AS' => [
                    'date' => 'M/d/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_AT' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_AU' => [
                    'date' => 'd/M/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_BB' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_BE' => [
                    'date' => 'dd/MM/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_BI' => [
                    'date' => 'M/d/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_BM' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_BS' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_BW' => [
                    'date' => 'dd/MM/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_BZ' => [
                    'date' => 'dd/MM/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_CA' => [
                    'date' => 'y-MM-dd',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_CC' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_CH' => [
                    'date' => 'dd.MM.y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_CK' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_CM' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_CX' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_CY' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_DE' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_DK' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH.mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_DM' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_ER' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_FI' => [
                    'date' => 'dd/MM/y',
                    'time' => 'H.mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_FJ' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_FK' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_FM' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_GB' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_GD' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_GG' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_GH' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_GI' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_GM' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_GU' => [
                    'date' => 'M/d/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_GY' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_HK' => [
                    'date' => 'd/M/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_ID' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH.mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_IE' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_IL' => [
                    'date' => 'dd/MM/y',
                    'time' => 'H:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_IM' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_IN' => [
                    'date' => 'dd/MM/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_IO' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_JE' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_JM' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_KE' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_KI' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_KN' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_KY' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_LC' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_LR' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_LS' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_MG' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_MH' => [
                    'date' => 'M/d/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_MO' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_MP' => [
                    'date' => 'M/d/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_MS' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_MT' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_MU' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_MV' => [
                    'date' => 'd-M-yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_MW' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_MY' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_NA' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_NF' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_NG' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_NL' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_NR' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_NU' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_NZ' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_PG' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_PH' => [
                    'date' => 'M/d/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_PK' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_PN' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_PR' => [
                    'date' => 'M/d/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_PW' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_RW' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_SB' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_SC' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_SD' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_SE' => [
                    'date' => 'y-MM-dd',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_SG' => [
                    'date' => 'd/M/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_SH' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_SI' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_SL' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_SS' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_SX' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_SZ' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_TC' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_TK' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_TO' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_TT' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_TV' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_TZ' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_UG' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_UM' => [
                    'date' => 'M/d/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_US' => [
                    'date' => 'M/d/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_VC' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_VG' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_VI' => [
                    'date' => 'M/d/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_VU' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_WS' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_ZA' => [
                    'date' => 'y/MM/dd',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_ZM' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'en_ZW' => [
                    'date' => 'd/M/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'eo' => [
                    'date' => 'yy-MM-dd',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'es' => [
                    'date' => 'd/M/yy',
                    'time' => 'H:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'es_AR' => [
                    'date' => 'd/M/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_BO' => [
                    'date' => 'd/M/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_BR' => [
                    'date' => 'd/M/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_BZ' => [
                    'date' => 'd/M/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_CL' => [
                    'date' => 'dd-MM-yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_CO' => [
                    'date' => 'd/MM/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_CR' => [
                    'date' => 'd/M/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_CU' => [
                    'date' => 'd/M/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_DO' => [
                    'date' => 'd/M/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_EC' => [
                    'date' => 'd/M/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_ES' => [
                    'date' => 'd/M/yy',
                    'time' => 'H:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_GQ' => [
                    'date' => 'd/M/yy',
                    'time' => 'H:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_GT' => [
                    'date' => 'd/MM/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_HN' => [
                    'date' => 'd/M/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_MX' => [
                    'date' => 'dd/MM/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_NI' => [
                    'date' => 'd/M/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_PA' => [
                    'date' => 'MM/dd/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_PE' => [
                    'date' => 'd/MM/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_PH' => [
                    'date' => 'd/M/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_PR' => [
                    'date' => 'MM/dd/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_PY' => [
                    'date' => 'd/M/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_SV' => [
                    'date' => 'd/M/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_US' => [
                    'date' => 'd/M/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_UY' => [
                    'date' => 'd/M/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'es_VE' => [
                    'date' => 'd/M/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'eu' => [
                    'date' => 'yy/M/d',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'eu_ES' => [
                    'date' => 'yy/M/d',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fa' => [
                    'date' => 'y/M/d',
                    'time' => 'H:mm',
                    'rtl' => true,
                    'translation' => true,
                ],
                'fa_AF' => [
                    'date' => 'y/M/d',
                    'time' => 'H:mm',
                    'rtl' => true,
                    'translation' => false,
                ],
                'fa_IR' => [
                    'date' => 'y/M/d',
                    'time' => 'H:mm',
                    'rtl' => true,
                    'translation' => false,
                ],
                'fi' => [
                    'date' => 'd.M.y',
                    'time' => 'H.mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'fi_FI' => [
                    'date' => 'd.M.y',
                    'time' => 'H.mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fo' => [
                    'date' => 'dd.MM.yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'fo_DK' => [
                    'date' => 'dd.MM.yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fo_FO' => [
                    'date' => 'dd.MM.yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'fr_BE' => [
                    'date' => 'd/MM/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_BF' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_BI' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_BJ' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_BL' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_CA' => [
                    'date' => 'y-MM-dd',
                    'time' => 'HH \'h\' mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_CD' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_CF' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_CG' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_CH' => [
                    'date' => 'dd.MM.yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_CI' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_CM' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_DJ' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_DZ' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_FR' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_GA' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_GF' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_GN' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_GP' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_GQ' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_HT' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_KM' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_LU' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_MA' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_MC' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_MF' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_MG' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_ML' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_MQ' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_MR' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_MU' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_NC' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_NE' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_PF' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_PM' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_RE' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_RW' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_SC' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_SN' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_SY' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_TD' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_TG' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_TN' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_VU' => [
                    'date' => 'dd/MM/y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_WF' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'fr_YT' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'he' => [
                    'date' => 'd.M.y',
                    'time' => 'H:mm',
                    'rtl' => true,
                    'translation' => true,
                ],
                'he_IL' => [
                    'date' => 'd.M.y',
                    'time' => 'H:mm',
                    'rtl' => true,
                    'translation' => false,
                ],
                'hr' => [
                    'date' => 'dd. MM. y.',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'hr_BA' => [
                    'date' => 'd. M. yy.',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'hr_HR' => [
                    'date' => 'dd. MM. y.',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'hu' => [
                    'date' => 'y. MM. dd.',
                    'time' => 'H:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'hu_HU' => [
                    'date' => 'y. MM. dd.',
                    'time' => 'H:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'id' => [
                    'date' => 'dd/MM/yy',
                    'time' => 'HH.mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'it' => [
                    'date' => 'dd/MM/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'it_CH' => [
                    'date' => 'dd.MM.yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'it_IT' => [
                    'date' => 'dd/MM/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'it_SM' => [
                    'date' => 'dd/MM/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'it_VA' => [
                    'date' => 'dd/MM/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'ja' => [
                    'date' => 'y/MM/dd',
                    'time' => 'H:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'ja_JP' => [
                    'date' => 'y/MM/dd',
                    'time' => 'H:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'ko' => [
                    'date' => 'yy. M. d.',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => true,
                ],
                'ko_CN' => [
                    'date' => 'yy. M. d.',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'ko_KP' => [
                    'date' => 'yy. M. d.',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'ko_KR' => [
                    'date' => 'yy. M. d.',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'nb_NO' => [
                    'date' => 'dd.MM.y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'nl' => [
                    'date' => 'dd-MM-y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'nl_AW' => [
                    'date' => 'dd-MM-y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'nl_BE' => [
                    'date' => 'd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'nl_BQ' => [
                    'date' => 'dd-MM-y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'nl_CW' => [
                    'date' => 'dd-MM-y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'nl_NL' => [
                    'date' => 'dd-MM-y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'nl_SR' => [
                    'date' => 'dd-MM-y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'nl_SX' => [
                    'date' => 'dd-MM-y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'pa' => [
                    'date' => 'd/M/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => true,
                ],
                'pl' => [
                    'date' => 'd.MM.y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'pl_PL' => [
                    'date' => 'd.MM.y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'pt' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'pt_AO' => [
                    'date' => 'dd/MM/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'pt_BR' => [
                    'date' => 'dd/MM/y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'pt_CH' => [
                    'date' => 'dd/MM/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'pt_CV' => [
                    'date' => 'dd/MM/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'pt_GQ' => [
                    'date' => 'dd/MM/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'pt_GW' => [
                    'date' => 'dd/MM/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'pt_LU' => [
                    'date' => 'dd/MM/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'pt_MO' => [
                    'date' => 'dd/MM/yy',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'pt_MZ' => [
                    'date' => 'dd/MM/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'pt_PT' => [
                    'date' => 'dd/MM/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'pt_ST' => [
                    'date' => 'dd/MM/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'pt_TL' => [
                    'date' => 'dd/MM/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'ro' => [
                    'date' => 'dd.MM.y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'ro_MD' => [
                    'date' => 'dd.MM.y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'ro_RO' => [
                    'date' => 'dd.MM.y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'ru' => [
                    'date' => 'dd.MM.y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'ru_BY' => [
                    'date' => 'dd.MM.y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'ru_KG' => [
                    'date' => 'dd.MM.y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'ru_KZ' => [
                    'date' => 'dd.MM.y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'ru_MD' => [
                    'date' => 'dd.MM.y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'ru_RU' => [
                    'date' => 'dd.MM.y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'ru_UA' => [
                    'date' => 'dd.MM.y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'sk' => [
                    'date' => 'd. M. y',
                    'time' => 'H:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'sk_SK' => [
                    'date' => 'd. M. y',
                    'time' => 'H:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'sl' => [
                    'date' => 'd. M. yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'sv' => [
                    'date' => 'y-MM-dd',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'sv_AX' => [
                    'date' => 'y-MM-dd',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'sv_FI' => [
                    'date' => 'y-MM-dd',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'sv_SE' => [
                    'date' => 'y-MM-dd',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'tr' => [
                    'date' => 'd.MM.y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'tr_CY' => [
                    'date' => 'd.MM.y',
                    'time' => 'h:mm a',
                    'rtl' => false,
                    'translation' => false,
                ],
                'tr_TR' => [
                    'date' => 'd.MM.y',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'uk' => [
                    'date' => 'dd.MM.yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'uk_UA' => [
                    'date' => 'dd.MM.yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'vi' => [
                    'date' => 'd/M/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'vi_VN' => [
                    'date' => 'd/M/yy',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => false,
                ],
                'zh_CN' => [
                    'date' => 'y/M/d',
                    'time' => 'HH:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'zh_Hant' => [
                    'date' => 'y/M/d',
                    'time' => 'Bh:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
                'zh_Hant_TW' => [
                    'date' => 'y/M/d',
                    'time' => 'Bh:mm',
                    'rtl' => false,
                    'translation' => true,
                ],
            ],
            'kimai.invoice.documents' => [
                0 => 'var/invoices/',
                1 => 'templates/invoice/renderer/',
            ],
            'kimai.export.documents' => [
                0 => 'var/export/',
                1 => 'templates/export/renderer/',
            ],
            'kimai.permissions' => [
                'ROLE_USER' => [
                    'view_own_timesheet' => true,
                    'start_own_timesheet' => true,
                    'stop_own_timesheet' => true,
                    'create_own_timesheet' => true,
                    'edit_own_timesheet' => true,
                    'export_own_timesheet' => true,
                    'delete_own_timesheet' => true,
                    'weekly_own_timesheet' => true,
                    'view_own_profile' => true,
                    'edit_own_profile' => true,
                    'password_own_profile' => true,
                    'preferences_own_profile' => true,
                    'api-token_own_profile' => true,
                    'api_access' => true,
                    'hours_own_profile' => true,
                    'view_team_member' => true,
                    'time_team_project' => true,
                    'create_tag' => true,
                    'view_reporting' => true,
                ],
                'ROLE_TEAMLEAD' => [
                    'view_teamlead_activity' => true,
                    'create_activity' => true,
                    'edit_teamlead_activity' => true,
                    'budget_teamlead_activity' => true,
                    'time_teamlead_activity' => true,
                    'view_teamlead_project' => true,
                    'budget_teamlead_project' => true,
                    'time_teamlead_project' => true,
                    'comments_teamlead_project' => true,
                    'details_teamlead_project' => true,
                    'view_teamlead_customer' => true,
                    'budget_teamlead_customer' => true,
                    'time_teamlead_customer' => true,
                    'comments_teamlead_customer' => true,
                    'details_teamlead_customer' => true,
                    'view_other_timesheet' => true,
                    'start_other_timesheet' => true,
                    'stop_other_timesheet' => true,
                    'create_other_timesheet' => true,
                    'edit_other_timesheet' => true,
                    'export_other_timesheet' => true,
                    'delete_other_timesheet' => true,
                    'view_invoice' => true,
                    'create_invoice' => true,
                    'view_own_timesheet' => true,
                    'start_own_timesheet' => true,
                    'stop_own_timesheet' => true,
                    'create_own_timesheet' => true,
                    'edit_own_timesheet' => true,
                    'export_own_timesheet' => true,
                    'delete_own_timesheet' => true,
                    'weekly_own_timesheet' => true,
                    'view_own_profile' => true,
                    'edit_own_profile' => true,
                    'password_own_profile' => true,
                    'preferences_own_profile' => true,
                    'api-token_own_profile' => true,
                    'create_export' => true,
                    'edit_export_own_timesheet' => true,
                    'edit_export_other_timesheet' => true,
                    'edit_billable_own_timesheet' => true,
                    'edit_billable_other_timesheet' => true,
                    'view_tag' => true,
                    'manage_tag' => true,
                    'create_tag' => true,
                    'delete_tag' => true,
                    'view_reporting' => true,
                    'view_other_reporting' => true,
                    'project_reporting' => true,
                    'customer_reporting' => true,
                    'api_access' => true,
                    'hours_own_profile' => true,
                    'view_rate_own_timesheet' => true,
                    'view_rate_other_timesheet' => true,
                    'hourly-rate_own_profile' => true,
                    'view_team_member' => true,
                    'hours_other_profile' => true,
                ],
                'ROLE_ADMIN' => [
                    'view_activity' => true,
                    'create_activity' => true,
                    'edit_activity' => true,
                    'budget_activity' => true,
                    'time_activity' => true,
                    'delete_activity' => true,
                    'permissions_activity' => true,
                    'view_project' => true,
                    'create_project' => true,
                    'edit_project' => true,
                    'budget_project' => true,
                    'time_project' => true,
                    'delete_project' => true,
                    'permissions_project' => true,
                    'comments_project' => true,
                    'details_project' => true,
                    'view_customer' => true,
                    'create_customer' => true,
                    'edit_customer' => true,
                    'budget_customer' => true,
                    'time_customer' => true,
                    'delete_customer' => true,
                    'permissions_customer' => true,
                    'comments_customer' => true,
                    'details_customer' => true,
                    'view_invoice' => true,
                    'create_invoice' => true,
                    'manage_invoice_template' => true,
                    'view_own_timesheet' => true,
                    'start_own_timesheet' => true,
                    'stop_own_timesheet' => true,
                    'create_own_timesheet' => true,
                    'edit_own_timesheet' => true,
                    'export_own_timesheet' => true,
                    'delete_own_timesheet' => true,
                    'weekly_own_timesheet' => true,
                    'view_other_timesheet' => true,
                    'start_other_timesheet' => true,
                    'stop_other_timesheet' => true,
                    'create_other_timesheet' => true,
                    'edit_other_timesheet' => true,
                    'export_other_timesheet' => true,
                    'delete_other_timesheet' => true,
                    'view_own_profile' => true,
                    'edit_own_profile' => true,
                    'password_own_profile' => true,
                    'preferences_own_profile' => true,
                    'api-token_own_profile' => true,
                    'view_team' => true,
                    'create_team' => true,
                    'edit_team' => true,
                    'delete_team' => true,
                    'view_rate_own_timesheet' => true,
                    'edit_rate_own_timesheet' => true,
                    'view_rate_other_timesheet' => true,
                    'edit_rate_other_timesheet' => true,
                    'create_export' => true,
                    'edit_export_own_timesheet' => true,
                    'edit_export_other_timesheet' => true,
                    'edit_billable_own_timesheet' => true,
                    'edit_billable_other_timesheet' => true,
                    'view_tag' => true,
                    'manage_tag' => true,
                    'create_tag' => true,
                    'delete_tag' => true,
                    'lockdown_grace_timesheet' => true,
                    'lockdown_override_timesheet' => true,
                    'view_reporting' => true,
                    'view_other_reporting' => true,
                    'project_reporting' => true,
                    'customer_reporting' => true,
                    'api_access' => true,
                    'hours_own_profile' => true,
                    'hourly-rate_own_profile' => true,
                    'edit_exported_timesheet' => true,
                    'teams_own_profile' => true,
                    'view_team_member' => true,
                    'view_all_data' => true,
                    'contract_other_profile' => true,
                    'hours_other_profile' => true,
                ],
                'ROLE_SUPER_ADMIN' => [
                    'view_activity' => true,
                    'create_activity' => true,
                    'edit_activity' => true,
                    'budget_activity' => true,
                    'time_activity' => true,
                    'delete_activity' => true,
                    'permissions_activity' => true,
                    'view_project' => true,
                    'create_project' => true,
                    'edit_project' => true,
                    'budget_project' => true,
                    'time_project' => true,
                    'delete_project' => true,
                    'permissions_project' => true,
                    'comments_project' => true,
                    'details_project' => true,
                    'view_customer' => true,
                    'create_customer' => true,
                    'edit_customer' => true,
                    'budget_customer' => true,
                    'time_customer' => true,
                    'delete_customer' => true,
                    'permissions_customer' => true,
                    'comments_customer' => true,
                    'details_customer' => true,
                    'view_invoice' => true,
                    'create_invoice' => true,
                    'manage_invoice_template' => true,
                    'view_own_timesheet' => true,
                    'start_own_timesheet' => true,
                    'stop_own_timesheet' => true,
                    'create_own_timesheet' => true,
                    'edit_own_timesheet' => true,
                    'export_own_timesheet' => true,
                    'delete_own_timesheet' => true,
                    'weekly_own_timesheet' => true,
                    'view_other_timesheet' => true,
                    'start_other_timesheet' => true,
                    'stop_other_timesheet' => true,
                    'create_other_timesheet' => true,
                    'edit_other_timesheet' => true,
                    'export_other_timesheet' => true,
                    'delete_other_timesheet' => true,
                    'view_own_profile' => true,
                    'edit_own_profile' => true,
                    'password_own_profile' => true,
                    'preferences_own_profile' => true,
                    'api-token_own_profile' => true,
                    'view_other_profile' => true,
                    'edit_other_profile' => true,
                    'password_other_profile' => true,
                    'roles_other_profile' => true,
                    'preferences_other_profile' => true,
                    'api-token_other_profile' => true,
                    'teams_other_profile' => true,
                    'supervisor_other_profile' => true,
                    'view_user' => true,
                    'create_user' => true,
                    'delete_user' => true,
                    'role_permissions' => true,
                    'view_team' => true,
                    'create_team' => true,
                    'edit_team' => true,
                    'delete_team' => true,
                    'view_rate_own_timesheet' => true,
                    'edit_rate_own_timesheet' => true,
                    'view_rate_other_timesheet' => true,
                    'edit_rate_other_timesheet' => true,
                    'create_export' => true,
                    'edit_export_own_timesheet' => true,
                    'edit_export_other_timesheet' => true,
                    'edit_billable_own_timesheet' => true,
                    'edit_billable_other_timesheet' => true,
                    'view_tag' => true,
                    'manage_tag' => true,
                    'create_tag' => true,
                    'delete_tag' => true,
                    'lockdown_grace_timesheet' => true,
                    'lockdown_override_timesheet' => true,
                    'view_reporting' => true,
                    'view_other_reporting' => true,
                    'project_reporting' => true,
                    'customer_reporting' => true,
                    'api_access' => true,
                    'hours_own_profile' => true,
                    'hourly-rate_own_profile' => true,
                    'hourly-rate_other_profile' => true,
                    'roles_own_profile' => true,
                    'supervisor_own_profile' => true,
                    'system_information' => true,
                    'system_configuration' => true,
                    'plugins' => true,
                    'edit_exported_timesheet' => true,
                    'teams_own_profile' => true,
                    'view_team_member' => true,
                    'upload_invoice_template' => true,
                    'view_all_data' => true,
                    'contract_other_profile' => true,
                    'hours_other_profile' => true,
                ],
            ],
            'kimai.permission_names' => [
                'view_activity' => true,
                'create_activity' => true,
                'edit_activity' => true,
                'budget_activity' => true,
                'time_activity' => true,
                'delete_activity' => true,
                'permissions_activity' => true,
                'view_teamlead_activity' => true,
                'edit_teamlead_activity' => true,
                'budget_teamlead_activity' => true,
                'time_teamlead_activity' => true,
                'permissions_teamlead_activity' => true,
                'view_team_activity' => true,
                'edit_team_activity' => true,
                'budget_team_activity' => true,
                'time_team_activity' => true,
                'view_project' => true,
                'create_project' => true,
                'edit_project' => true,
                'budget_project' => true,
                'time_project' => true,
                'delete_project' => true,
                'permissions_project' => true,
                'comments_project' => true,
                'details_project' => true,
                'view_teamlead_project' => true,
                'edit_teamlead_project' => true,
                'budget_teamlead_project' => true,
                'time_teamlead_project' => true,
                'permissions_teamlead_project' => true,
                'comments_teamlead_project' => true,
                'details_teamlead_project' => true,
                'view_team_project' => true,
                'edit_team_project' => true,
                'budget_team_project' => true,
                'time_team_project' => true,
                'comments_team_project' => true,
                'details_team_project' => true,
                'view_customer' => true,
                'create_customer' => true,
                'edit_customer' => true,
                'budget_customer' => true,
                'time_customer' => true,
                'delete_customer' => true,
                'permissions_customer' => true,
                'comments_customer' => true,
                'details_customer' => true,
                'view_teamlead_customer' => true,
                'edit_teamlead_customer' => true,
                'budget_teamlead_customer' => true,
                'time_teamlead_customer' => true,
                'permissions_teamlead_customer' => true,
                'comments_teamlead_customer' => true,
                'details_teamlead_customer' => true,
                'view_team_customer' => true,
                'edit_team_customer' => true,
                'budget_team_customer' => true,
                'time_team_customer' => true,
                'comments_team_customer' => true,
                'details_team_customer' => true,
                'view_invoice' => true,
                'create_invoice' => true,
                'manage_invoice_template' => true,
                'delete_invoice' => true,
                'view_own_timesheet' => true,
                'start_own_timesheet' => true,
                'stop_own_timesheet' => true,
                'create_own_timesheet' => true,
                'edit_own_timesheet' => true,
                'export_own_timesheet' => true,
                'delete_own_timesheet' => true,
                'weekly_own_timesheet' => true,
                'view_other_timesheet' => true,
                'start_other_timesheet' => true,
                'stop_other_timesheet' => true,
                'create_other_timesheet' => true,
                'edit_other_timesheet' => true,
                'export_other_timesheet' => true,
                'delete_other_timesheet' => true,
                'view_own_profile' => true,
                'edit_own_profile' => true,
                'password_own_profile' => true,
                'preferences_own_profile' => true,
                'api-token_own_profile' => true,
                'view_other_profile' => true,
                'edit_other_profile' => true,
                'password_other_profile' => true,
                'roles_other_profile' => true,
                'preferences_other_profile' => true,
                'api-token_other_profile' => true,
                'teams_other_profile' => true,
                'supervisor_other_profile' => true,
                'view_tag' => true,
                'manage_tag' => true,
                'create_tag' => true,
                'delete_tag' => true,
                'view_user' => true,
                'create_user' => true,
                'delete_user' => true,
                'role_permissions' => true,
                'view_rate_own_timesheet' => true,
                'edit_rate_own_timesheet' => true,
                'view_rate_other_timesheet' => true,
                'edit_rate_other_timesheet' => true,
                'create_export' => true,
                'edit_export_own_timesheet' => true,
                'edit_export_other_timesheet' => true,
                'edit_billable_own_timesheet' => true,
                'edit_billable_other_timesheet' => true,
                'view_team' => true,
                'create_team' => true,
                'edit_team' => true,
                'delete_team' => true,
                'lockdown_grace_timesheet' => true,
                'lockdown_override_timesheet' => true,
                'view_reporting' => true,
                'view_other_reporting' => true,
                'project_reporting' => true,
                'customer_reporting' => true,
                'api_access' => true,
                'hours_own_profile' => true,
                'view_team_member' => true,
                'hourly-rate_own_profile' => true,
                'hours_other_profile' => true,
                'edit_exported_timesheet' => true,
                'teams_own_profile' => true,
                'view_all_data' => true,
                'contract_other_profile' => true,
                'hourly-rate_other_profile' => true,
                'roles_own_profile' => true,
                'supervisor_own_profile' => true,
                'system_information' => true,
                'system_configuration' => true,
                'plugins' => true,
                'upload_invoice_template' => true,
            ],
            'kimai.permission_roles' => [
                0 => 'ROLE_USER',
                1 => 'ROLE_TEAMLEAD',
                2 => 'ROLE_ADMIN',
                3 => 'ROLE_SUPER_ADMIN',
            ],
            'kimai.timesheet.rates' => [

            ],
            'kimai.timesheet.rounding' => [
                'default' => [
                    'days' => 'monday,tuesday,wednesday,thursday,friday,saturday,sunday',
                    'begin' => 1,
                    'end' => 1,
                    'duration' => 0,
                    'mode' => 'default',
                ],
            ],
            'kimai.config' => [
                'timesheet.default_begin' => 'now',
                'timesheet.mode' => 'default',
                'timesheet.markdown_content' => false,
                'timesheet.duration_increment' => 15,
                'timesheet.time_increment' => 15,
                'timesheet.rounding.default.days' => 'monday,tuesday,wednesday,thursday,friday,saturday,sunday',
                'timesheet.rounding.default.begin' => 1,
                'timesheet.rounding.default.end' => 1,
                'timesheet.rounding.default.duration' => 0,
                'timesheet.rounding.default.mode' => 'default',
                'timesheet.active_entries.hard_limit' => 1,
                'timesheet.rules.allow_future_times' => true,
                'timesheet.rules.allow_zero_duration' => true,
                'timesheet.rules.allow_overbooking_budget' => true,
                'timesheet.rules.allow_overlapping_records' => true,
                'timesheet.rules.lockdown_period_start' => NULL,
                'timesheet.rules.lockdown_period_end' => NULL,
                'timesheet.rules.lockdown_period_timezone' => NULL,
                'timesheet.rules.lockdown_grace_period' => NULL,
                'timesheet.rules.break_warning_duration' => 0,
                'timesheet.rules.long_running_duration' => 0,
                'timesheet.rules.require_activity' => true,
                'timesheet.rules.break_time_active' => false,
                'user.login' => true,
                'user.registration' => false,
                'user.password_reset' => true,
                'user.password_reset_retry_ttl' => 3600,
                'user.password_reset_token_ttl' => 86400,
                'customer.choice_pattern' => '{name}',
                'customer.number_format' => '{cc,4}',
                'customer.rules.allow_duplicate_number' => false,
                'invoice.number_format' => '{Y}/{cy,3}',
                'invoice.upload_twig' => false,
                'calendar.week_numbers' => true,
                'calendar.day_limit' => 4,
                'calendar.slot_duration' => '00:30:00',
                'calendar.businessHours.begin' => '08:00',
                'calendar.businessHours.end' => '20:00',
                'calendar.visibleHours.begin' => '00:00',
                'calendar.visibleHours.end' => '23:59',
                'calendar.google.api_key' => NULL,
                'calendar.weekends' => true,
                'calendar.dragdrop_amount' => 5,
                'calendar.dragdrop_data' => false,
                'calendar.title_pattern' => '{activity}',
                'theme.show_about' => true,
                'theme.colors_limited' => true,
                'theme.color_choices' => 'Silver|#c0c0c0,Gray|#808080,Black|#000000,Maroon|#800000,Brown|#a52a2a,Red|#ff0000,Orange|#ffa500,Gold|#ffd700,Yellow|#ffff00,Peach|#ffdab9,Khaki|#f0e68c,Olive|#808000,Lime|#00ff00,Jelly|#9acd32,Green|#008000,Teal|#008080,Aqua|#00ffff,LightBlue|#add8e6,DeepSky|#00bfff,Dodger|#1e90ff,Blue|#0000ff,Navy|#000080,Purple|#800080,Fuchsia|#ff00ff,Violet|#ee82ee,Rose|#ffe4e1,Lavender|#E6E6FA',
                'theme.branding.logo' => NULL,
                'theme.branding.mini' => NULL,
                'theme.branding.company' => NULL,
                'theme.branding.title' => NULL,
                'theme.avatar_url' => false,
                'company.financial_year' => NULL,
                'defaults.customer.timezone' => NULL,
                'defaults.customer.country' => 'DE',
                'defaults.customer.currency' => 'EUR',
                'defaults.user.timezone' => NULL,
                'defaults.user.language' => 'en',
                'defaults.user.theme' => 'default',
                'defaults.user.currency' => 'EUR',
                'ldap.activate' => false,
                'ldap.connection.host' => NULL,
                'ldap.connection.port' => 389,
                'ldap.connection.useStartTls' => false,
                'ldap.connection.useSsl' => false,
                'ldap.connection.bindRequiresDn' => true,
                'ldap.connection.accountFilterFormat' => '(&(uid=%s))',
                'ldap.connection.baseDn' => NULL,
                'ldap.user.baseDn' => NULL,
                'ldap.user.filter' => '',
                'ldap.user.attributesFilter' => '(objectClass=*)',
                'ldap.user.usernameAttribute' => 'uid',
                'ldap.role.baseDn' => NULL,
                'ldap.role.usernameAttribute' => 'dn',
                'ldap.role.nameAttribute' => 'cn',
                'ldap.role.userDnAttribute' => 'member',
                'saml.activate' => false,
                'saml.title' => 'Login with SAML',
                'saml.provider' => 'default',
                'saml.roles.resetOnLogin' => true,
                'saml.roles.attribute' => NULL,
                'quick_entry.recent_activities' => 5,
                'quick_entry.recent_activity_weeks' => NULL,
                'quick_entry.minimum_rows' => 3,
                'activity.choice_pattern' => '{name}',
                'activity.allow_inline_create' => false,
                'activity.number_format' => '{ac,4}',
                'activity.allow_duplicate_number' => false,
                'project.choice_pattern' => '{name}',
                'project.copy_teams_on_create' => false,
                'project.number_format' => '{pc,4}',
                'project.allow_duplicate_number' => false,
                'features.user_registration' => false,
            ],
            'data_collector.templates' => [
                'data_collector.request' => [
                    0 => 'request',
                    1 => '@WebProfiler/Collector/request.html.twig',
                ],
                '.data_collector.command' => [
                    0 => 'command',
                    1 => '@WebProfiler/Collector/command.html.twig',
                ],
                'data_collector.time' => [
                    0 => 'time',
                    1 => '@WebProfiler/Collector/time.html.twig',
                ],
                'data_collector.memory' => [
                    0 => 'memory',
                    1 => '@WebProfiler/Collector/memory.html.twig',
                ],
                'data_collector.validator' => [
                    0 => 'validator',
                    1 => '@WebProfiler/Collector/validator.html.twig',
                ],
                'data_collector.ajax' => [
                    0 => 'ajax',
                    1 => '@WebProfiler/Collector/ajax.html.twig',
                ],
                'data_collector.form' => [
                    0 => 'form',
                    1 => '@WebProfiler/Collector/form.html.twig',
                ],
                'data_collector.exception' => [
                    0 => 'exception',
                    1 => '@WebProfiler/Collector/exception.html.twig',
                ],
                'data_collector.logger' => [
                    0 => 'logger',
                    1 => '@WebProfiler/Collector/logger.html.twig',
                ],
                'data_collector.events' => [
                    0 => 'events',
                    1 => '@WebProfiler/Collector/events.html.twig',
                ],
                'data_collector.router' => [
                    0 => 'router',
                    1 => '@WebProfiler/Collector/router.html.twig',
                ],
                'data_collector.cache' => [
                    0 => 'cache',
                    1 => '@WebProfiler/Collector/cache.html.twig',
                ],
                'data_collector.translation' => [
                    0 => 'translation',
                    1 => '@WebProfiler/Collector/translation.html.twig',
                ],
                'data_collector.security' => [
                    0 => 'security',
                    1 => '@Security/Collector/security.html.twig',
                ],
                'data_collector.twig' => [
                    0 => 'twig',
                    1 => '@WebProfiler/Collector/twig.html.twig',
                ],
                'data_collector.http_client' => [
                    0 => 'http_client',
                    1 => '@WebProfiler/Collector/http_client.html.twig',
                ],
                'data_collector.doctrine' => [
                    0 => 'db',
                    1 => '@Doctrine/Collector/db.html.twig',
                ],
                'data_collector.dump' => [
                    0 => 'dump',
                    1 => '@Debug/Profiler/dump.html.twig',
                ],
                'mailer.data_collector' => [
                    0 => 'mailer',
                    1 => '@WebProfiler/Collector/mailer.html.twig',
                ],
                'jms_serializer.data_collector' => [
                    0 => 'jms_serializer',
                    1 => '@JMSSerializer/Collector/panel.html.twig',
                ],
                'data_collector.config' => [
                    0 => 'config',
                    1 => '@WebProfiler/Collector/config.html.twig',
                ],
            ],
            'console.command.ids' => [

            ],
        ];
    }
}
